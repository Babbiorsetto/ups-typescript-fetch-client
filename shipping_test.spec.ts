/**
 * Ship
 * The Shipping Package API gives the application many ways to manage the shipment of packages to their  destination
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./shipping"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("DefaultApi", () => {
  let instance: api.DefaultApi
  beforeEach(function() {
    instance = new api.DefaultApi(config)
  });

  test("labelRecovery", () => {
    const body: api.LABELRECOVERYRequestWrapper = {
  "summary" : "A sample JSON request",
  "value" : "{\r\n  \"LabelRecoveryRequest\": {\r\n    \"Request\": {\r\n      \"RequestOption\": \"Non_Validate\",\r\n      \"SubVersion\": \"1903\",\r\n      \"TransactionReference\": {\r\n        \"CustomerContext\":\"\",\r\n        \"TransactionIdentifier\": \"\"\r\n      }\r\n    },\r\n    \"LabelSpecification\": {\r\n      \"HTTPUserAgent\": \"Mozilla/4.5\",\r\n      \"LabelImageFormat\": {\r\n        \"Code\": \"ZPL\"\r\n      },\r\n      \"LabelStockSize\": {\r\n        \"Height\": \"6\",\r\n        \"Width\": \"4\"\r\n      }\r\n    },\r\n    \"Translate\": {\r\n      \"LanguageCode\": \"eng\",\r\n      \"DialectCode\": \"US\",\r\n      \"Code\": \"01\"\r\n    },\r\n    \"LabelDelivery\": {\r\n      \"LabelLinkIndicator\": \"\",\r\n      \"ResendEmailIndicator\": \"\"\r\n    },\r\n    \"TrackingNumber\": \"1Z12345E8791315509\"\r\n  }\r\n}"
}
    const version: string = "version_example"
    const transId: string = "transId_example"
    const transactionSrc: string = "transactionSrc_example"
    return expect(instance.labelRecovery(body, version, transId, transactionSrc, {})).resolves.toBe(null)
  })
  test("shipment", () => {
    const body: api.SHIPRequestWrapper = {
  "summary" : "Shipping Request",
  "value" : {
    "ShipmentRequest" : {
      "Request" : {
        "SubVersion" : "1801",
        "RequestOption" : "nonvalidate",
        "TransactionReference" : {
          "CustomerContext" : ""
        }
      },
      "Shipment" : {
        "Description" : "Ship WS test",
        "Shipper" : {
          "Name" : "ShipperName",
          "AttentionName" : "ShipperZs Attn Name",
          "TaxIdentificationNumber" : "123456",
          "Phone" : {
            "Number" : "1115554758",
            "Extension" : " "
          },
          "ShipperNumber" : " ",
          "FaxNumber" : "8002222222",
          "Address" : {
            "AddressLine" : "2311 York Rd",
            "City" : "Timonium",
            "StateProvinceCode" : "MD",
            "PostalCode" : "21093",
            "CountryCode" : "US"
          }
        },
        "ShipTo" : {
          "Name" : "Happy Dog Pet Supply",
          "AttentionName" : "1160b_74",
          "Phone" : {
            "Number" : "9225377171"
          },
          "Address" : {
            "AddressLine" : "123 Main St",
            "City" : "timonium",
            "StateProvinceCode" : "MD",
            "PostalCode" : "21030",
            "CountryCode" : "US"
          },
          "Residential" : " "
        },
        "ShipFrom" : {
          "Name" : "T and T Designs",
          "AttentionName" : "1160b_74",
          "Phone" : {
            "Number" : "1234567890"
          },
          "FaxNumber" : "1234567890",
          "Address" : {
            "AddressLine" : "2311 York Rd",
            "City" : "Alpharetta",
            "StateProvinceCode" : "GA",
            "PostalCode" : "30005",
            "CountryCode" : "US"
          }
        },
        "PaymentInformation" : {
          "ShipmentCharge" : {
            "Type" : "01",
            "BillShipper" : {
              "AccountNumber" : " "
            }
          }
        },
        "Service" : {
          "Code" : "03",
          "Description" : "Express"
        },
        "Package" : {
          "Description" : " ",
          "Packaging" : {
            "Code" : "02",
            "Description" : "Nails"
          },
          "Dimensions" : {
            "UnitOfMeasurement" : {
              "Code" : "IN",
              "Description" : "Inches"
            },
            "Length" : "10",
            "Width" : "30",
            "Height" : "45"
          },
          "PackageWeight" : {
            "UnitOfMeasurement" : {
              "Code" : "LBS",
              "Description" : "Pounds"
            },
            "Weight" : "5"
          }
        }
      },
      "LabelSpecification" : {
        "LabelImageFormat" : {
          "Code" : "GIF",
          "Description" : "GIF"
        },
        "HTTPUserAgent" : "Mozilla/4.5"
      }
    }
  }
}
    const version: string = "version_example"
    const transId: string = "transId_example"
    const transactionSrc: string = "transactionSrc_example"
    const additionaladdressvalidation: string = "additionaladdressvalidation_example"
    return expect(instance.shipment(body, version, transId, transactionSrc, additionaladdressvalidation, {})).resolves.toBe(null)
  })
  test("voidShipment", () => {
    const version: string = "version_example"
    const shipmentidentificationnumber: string = "shipmentidentificationnumber_example"
    const transId: string = "transId_example"
    const transactionSrc: string = "transactionSrc_example"
    const trackingnumber: string = "trackingnumber_example"
    return expect(instance.voidShipment(version, shipmentidentificationnumber, transId, transactionSrc, trackingnumber, {})).resolves.toBe(null)
  })
})

