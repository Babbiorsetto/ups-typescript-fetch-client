/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * OpenAPI spec version: 1.0.1
 *
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as url from "url";
import isomorphicFetch, { Response } from "node-fetch";
import { Configuration } from "./configuration";

const BASE_PATH = "https://wwwcie.ups.com/api/".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
    (url: string, init?: any): Promise<Response>;
}

/**
 *
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration;

    constructor(
        configuration?: Configuration,
        protected basePath: string = BASE_PATH,
        protected fetch: FetchAPI = isomorphicFetch
    ) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name: "RequiredError";
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}

/**
 * Access Point COD Currency Code.  Required if Access Point COD container is present. UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
 * @export
 */
export type AccessPointCODCurrencyCode = string;
/**
 * Access Point COD Monetary Value.  Required if Access Point COD container is present.
 * @export
 */
export type AccessPointCODMonetaryValue = string;
/**
 * Code for Accessorial Indicator.
 * @export
 */
export type AccessorialCode = string;
/**
 * Description for Accessorial Indicator.
 * @export
 */
export type AccessorialDescription = string;
/**
 * The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.
 * @export
 */
export type AddressAddressLine = string;
/**
 * UPS Access Point city.
 * @export
 */
export type AddressCity = string;
/**
 * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
 * @export
 */
export type AddressCountryCode = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate if the Alternate Delivery location is a PO box location.  True if POBoxIndicator tag exists; false otherwise.  Not valid with Shipment Indication Types: 01 Hold for Pickup at UPS Access Point 02 UPS Access Point� Delivery
 * @export
 */
export type AddressPOBoxIndicator = string;
/**
 * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
 * @export
 */
export type AddressPostalCode = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored.This field is a flag to indicate if the Alternate Delivery location is a residential location.  True if ResidentialAddressIndicator tag exists.  For future use.
 * @export
 */
export type AddressResidentialAddressIndicator = string;
/**
 * UPS Access Point State or Province code.
 * @export
 */
export type AddressStateProvinceCode = string;
/**
 * Unit of Measurement container for the Adjusted height.
 * @export
 * @interface AdjustedHeightUnitOfMeasurement
 */
export interface AdjustedHeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * @type {string}
     * @memberof AdjustedHeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof AdjustedHeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * Adjusted Height value for the handling unit.  Adjusted Height is done only when Handling unit type is SKD = Skid or PLT = Pallet.
 * @export
 */
export type AdjustedHeightValue = string;
/**
 * Warning code returned by the system.
 * @export
 */
export type AlertCode = string;
/**
 * Warning messages returned by the system.
 * @export
 */
export type AlertDescription = string;
/**
 * Warning code returned by the system.
 * @export
 */
export type AlertDetailCode = string;
/**
 * Warning messages returned by the system.
 * @export
 */
export type AlertDetailDescription = string;
/**
 * Provides more information about the element that represents the alert.
 * @export
 * @interface AlertDetailElementLevelInformation
 */
export interface AlertDetailElementLevelInformation {
    /**
     * Define type of element in request. Possible values are -  'H� for the header details level,   �S� for the shipment level,  �P� for the package level,  �C� for the commodity level.
     * @type {string}
     * @memberof AlertDetailElementLevelInformation
     */
    Level: string;
    /**
     *
     * @type {Array<ElementLevelInformationElementIdentifier>}
     * @memberof AlertDetailElementLevelInformation
     */
    ElementIdentifier?: Array<ElementLevelInformationElementIdentifier>;
}
/**
 * Address container for Alternate Delivery Address.
 * @export
 * @interface AlternateDeliveryAddressAddress
 */
export interface AlternateDeliveryAddressAddress {
    /**
     * The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    AddressLine: string;
    /**
     * UPS Access Point city.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    City?: string;
    /**
     * UPS Access Point State or Province code.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    StateProvinceCode?: string;
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    CountryCode: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored.This field is a flag to indicate if the Alternate Delivery location is a residential location.  True if ResidentialAddressIndicator tag exists.  For future use.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    ResidentialAddressIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate if the Alternate Delivery location is a PO box location.  True if POBoxIndicator tag exists; false otherwise.  Not valid with Shipment Indication Types: 01 Hold for Pickup at UPS Access Point 02 UPS Access Point� Delivery
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    POBoxIndicator?: string;
}
/**
 * UPS Access Point� location name.
 * @export
 */
export type AlternateDeliveryAddressName = string;
/**
 * Scheduled Local Delivery Date. Format: YYYYMMDD
 * @export
 */
export type ArrivalDate = string;
/**
 * The time UPS will pick up the shipment. This is commit Time. Military Time Format HHMMSS or HHMM
 * @export
 */
export type ArrivalTime = string;
/**
 * The IATA currency code associated with the base service charge costs for the shipment.
 * @export
 */
export type BaseServiceChargeCurrencyCode = string;
/**
 * The base value of the specific service for the shipment. This is equal to transportation charges - fuel surcharges.
 * @export
 */
export type BaseServiceChargeMonetaryValue = string;
/**
 * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type BasicFlexibleParcelIndicatorCurrencyCode = string;
/**
 * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type BasicFlexibleParcelIndicatorMonetaryValue = string;
/**
 * The UPS account number.  The account must be a valid UPS account number that is active. For US, PR and CA accounts, the account must be a daily pickup account, an occasional account, a customer B.I.N account, or a dropper shipper account. All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
 * @export
 */
export type BillReceiverAccountNumber = string;
/**
 * Container for additional information for the bill receiver�s UPS accounts address.
 * @export
 * @interface BillReceiverAddress
 */
export interface BillReceiverAddress {
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof BillReceiverAddress
     */
    PostalCode?: string;
}
/**
 * UPS account number  Must be the same UPS account number as the one provided in Shipper/ShipperNumber.
 * @export
 */
export type BillShipperAccountNumber = string;
/**
 * The UPS account number of the third party shipper.  The account must be a valid UPS account number that is active. For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account, or a drop shipper account. All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
 * @export
 */
export type BillThirdPartyAccountNumber = string;
/**
 * Container for additional information for the third party UPS accounts address.
 * @export
 * @interface BillThirdPartyAddress
 */
export interface BillThirdPartyAddress {
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof BillThirdPartyAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof BillThirdPartyAddress
     */
    CountryCode: string;
}
/**
 * Unit Of Measurement Container.
 * @export
 * @interface BillingWeightUnitOfMeasurement
 */
export interface BillingWeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * @type {string}
     * @memberof BillingWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof BillingWeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * The value for the billable weight associated with the package.  When using a negotiated divisor different from the published UPS divisor (139 for inches and 5,000 for cm), the weight returned is based on the published divisor. Rates, however, are based on the negotiated divisor.
 * @export
 */
export type BillingWeightWeight = string;
/**
 * COD amount currency code type.  N/A
 * @export
 */
export type CODAmountCurrencyCode = string;
/**
 * COD Amount.
 * @export
 */
export type CODAmountMonetaryValue = string;
/**
 * CODAmount Container.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
 * @export
 * @interface CODCODAmount
 */
export interface CODCODAmount {
    /**
     * COD amount currency code type.  N/A
     * @type {string}
     * @memberof CODCODAmount
     */
    CurrencyCode: string;
    /**
     * COD Amount.
     * @type {string}
     * @memberof CODCODAmount
     */
    MonetaryValue: string;
}
/**
 * For valid values, refer to�Rating and Shipping COD Supported Countries or Territories in the Appendix.
 * @export
 */
export type CODCODFundsCode = string;
/**
 * Freight Classification. Freight class partially determines the freight rate for the article.  See Appendix of the Rating Ground Freight Web Services Developers Guide for list of Freight classes. For GFP Only.
 * @export
 */
export type CommodityFreightClass = string;
/**
 * NMFC Commodity container.  For GFP Only.
 * @export
 * @interface CommodityNMFC
 */
export interface CommodityNMFC {
    /**
     * Value of NMFC Prime. Contact your service representative if you need information concerning NMFC Codes.  Required if NMFC Container is present. For GFP Only.
     * @type {string}
     * @memberof CommodityNMFC
     */
    PrimeCode: string;
    /**
     * Value of NMFC Sub. Contact your service representative if you need information concerning NMFC Codes.  Needs to be provided when the SubCode associated with the PrimeCode is other than 00.  API defaults the sub value to 00 if not provided.  If provided the Sub Code should be associated with the PrimeCode of the NMFC.
     * @type {string}
     * @memberof CommodityNMFC
     */
    SubCode?: string;
}
/**
 * Customer classification code.  Valid values: 00 -  Rates Associated with Shipper Number 01 -  Daily Rates 04 -  Retail Rates 05 - Regional Rates 06 - General List Rates 53 -  Standard List Rates Length is not validated. If customer classification code is not a valid value please refer to Rate Types Table on page 11.
 * @export
 */
export type CustomerClassificationCode = string;
/**
 * Customer classification description of the code above.  Ignored if provided in the Request. Length is not validated.
 * @export
 */
export type CustomerClassificationDescription = string;
/**
 * The IATA currency code associated with the declared value amount for the package.  Required if a value for the package declared value amount exists in the MonetaryValue tag. Must match one of the IATA currency codes. Length is not validated. UPS does not support all international currency codes. Refer to Currency Codes in the Appendix for a list of valid codes.
 * @export
 */
export type DeclaredValueCurrencyCode = string;
/**
 * The monetary value for the declared value amount associated with the package.  Max value of 5,000 USD for Local and 50,000 USD for Remote. Absolute maximum value is 21474836.47
 * @export
 */
export type DeclaredValueMonetaryValue = string;
/**
 * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation Signature Required  2 - Delivery Confirmation Adult Signature Required
 * @export
 */
export type DeliveryConfirmationDCISType = string;
/**
 * The presence of the tag DropOffAtUPSFacilityIndicator indicates the package will be dropped at a UPS facility for shipment.
 * @export
 */
export type DeliveryOptionsDropOffAtUPSFacilityIndicator = string;
/**
 * The presence of the tag LiftGateAtDeliveryIndicator indicates that the shipment requires a lift gate for delivery.
 * @export
 */
export type DeliveryOptionsLiftGateAtDeliveryIndicator = string;
/**
 * Valid values are: 02 - Document only  03 - Non-Document 04 - WWEF Pallet 07 - Domestic Pallet If 04 is included, Worldwide Express Freight and UPS Worldwide Express Freight Midday services (if applicable) will be included in the response.
 * @export
 */
export type DeliveryTimeInformationPackageBillType = string;
/**
 * Pickup container.
 * @export
 * @interface DeliveryTimeInformationPickup
 */
export interface DeliveryTimeInformationPickup {
    /**
     * The date UPS picks up the package from the origin. Format: YYYYMMDD. In the event the Pickup date differs from the Ship On Date, provided in the request, a warning message will be returned.
     * @type {string}
     * @memberof DeliveryTimeInformationPickup
     */
    Date: string;
    /**
     * The time UPS will pick up the shipment. Military Time Format HHMMSS or HHMM
     * @type {string}
     * @memberof DeliveryTimeInformationPickup
     */
    Time?: string;
}
/**
 * Return contract services container
 * @export
 * @interface DeliveryTimeInformationReturnContractServices
 */
export interface DeliveryTimeInformationReturnContractServices {
    /**
     * Return contract Service code. Valid Code \"01\" - Heavy Goods. If 01 will return Heavy Goods service transit times for a given origin and destination (if applicable)  Invalid Code will be ignore.
     * @type {string}
     * @memberof DeliveryTimeInformationReturnContractServices
     */
    Code: string;
    /**
     * Return contract service Description
     * @type {string}
     * @memberof DeliveryTimeInformationReturnContractServices
     */
    Description?: string;
}
/**
 * UnitOfMeasurement Container.  N/A
 * @export
 * @interface DimWeightUnitOfMeasurement
 */
export interface DimWeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * Valid values: KGS, LBS
     * @type {string}
     * @memberof DimWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof DimWeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * Dimensional weight of the package. Decimal values are not accepted, however there is one implied decimal place for values in this field (i.e. 115 = 11.5).
 * @export
 */
export type DimWeightWeight = string;
/**
 * The height of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsHeight = string;
/**
 * The length of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsLength = string;
/**
 * UnitOfMeasurement container.
 * @export
 * @interface DimensionsUnitOfMeasurement
 */
export interface DimensionsUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable dimensions of a package.
     * Valid values: IN, CM
     * @type {string}
     * @memberof DimensionsUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof DimensionsUnitOfMeasurement
     */
    Description: string;
}
/**
 * The width of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsWidth = string;
/**
 * Code representing type of Disclaimer. Refer to the Appendix for possible code values.
 * @export
 */
export type DisclaimerCode = string;
/**
 * Disclaimer description. Please refer to Appendix for possible descriptions.
 * @export
 */
export type DisclaimerDescription = string;
/**
 * The IATA currency code associated with the transportation costs for the shipment.
 * @export
 */
export type DiscountAmountCurrencyCode = string;
/**
 * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type DiscountAmountMonetaryValue = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. Indicates a Dry Ice audit will be performed per the Regulation Set requirements. Empty tag means indicator is present.
 * @export
 */
export type DryIceAuditRequired = string;
/**
 * Container for Weight information for Dry Ice.
 * @export
 * @interface DryIceDryIceWeight
 */
export interface DryIceDryIceWeight {
    /**
     *
     * @type {DryIceWeightUnitOfMeasurement}
     * @memberof DryIceDryIceWeight
     */
    UnitOfMeasurement: DryIceWeightUnitOfMeasurement;
    /**
     * Weight for Dry Ice.  Cannot be more than package weight.  Should be more than 0.0.  Valid characters are 0-9 and \".\" (Decimal point).  Limit to 1 digit after the decimal.  The maximum length of the field is 5 including \".\" and can hold up to 1 decimal place.
     * @type {string}
     * @memberof DryIceDryIceWeight
     */
    Weight: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the Dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 KGS or 5.5 LBS.
 * @export
 */
export type DryIceMedicalUseIndicator = string;
/**
 * Regulation set for DryIce Shipment.  Valid values:  CFR = For HazMat regulated by US Dept of Transportation within the U.S. or ground shipments to Canada, IATA = For Worldwide Air movement.   The following values are valid: CFR and IATA.
 * @export
 */
export type DryIceRegulationSet = string;
/**
 * Container for Unit Of Measurement for Dry Ice.
 * @export
 * @interface DryIceWeightUnitOfMeasurement
 */
export interface DryIceWeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * @type {string}
     * @memberof DryIceWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof DryIceWeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * Weight for Dry Ice.  Cannot be more than package weight.  Should be more than 0.0.  Valid characters are 0-9 and \".\" (Decimal point).  Limit to 1 digit after the decimal.  The maximum length of the field is 5 including \".\" and can hold up to 1 decimal place.
 * @export
 */
export type DryIceWeightWeight = string;
/**
 * Represents the type of element. Possible values are 'P' and 'C'.
 * @export
 */
export type ElementIdentifierCode = string;
/**
 * Represents the value of element.
 * @export
 */
export type ElementIdentifierValue = string;
/**
 * Contains more information about the type of element. Returned if Level is 'P' or 'C'.
 * @export
 * @interface ElementLevelInformationElementIdentifier
 */
export interface ElementLevelInformationElementIdentifier {
    /**
     * Represents the type of element. Possible values are 'P' and 'C'.
     * @type {string}
     * @memberof ElementLevelInformationElementIdentifier
     */
    Code: string;
    /**
     * Represents the value of element.
     * @type {string}
     * @memberof ElementLevelInformationElementIdentifier
     */
    Value: string;
}
/**
 * Define type of element in request. Possible values are -  'H� for the header details level,   �S� for the shipment level,  �P� for the package level,  �C� for the commodity level.
 * @export
 */
export type ElementLevelInformationLevel = string;
/**
 * Container for the Time-In-Transit arrival information by service. This is the most accurate delivery information available via the Rating API and will reflect changes in delivery schedules due to peak business seasons or holidays.
 * @export
 * @interface EstimatedArrivalArrival
 */
export interface EstimatedArrivalArrival {
    /**
     * Scheduled Local Delivery Date. Format: YYYYMMDD
     * @type {string}
     * @memberof EstimatedArrivalArrival
     */
    Date: string;
    /**
     * The time UPS will pick up the shipment. This is commit Time. Military Time Format HHMMSS or HHMM
     * @type {string}
     * @memberof EstimatedArrivalArrival
     */
    Time?: string;
}
/**
 * Number of business days from Origin to Destination Locations.
 * @export
 */
export type EstimatedArrivalBusinessDaysInTransit = string;
/**
 * Customer Service call time. Returned for domestic as well as international requests.
 * @export
 */
export type EstimatedArrivalCustomerCenterCutoff = string;
/**
 * Day of week for arrival. Valid values are:  MON TUE WED THU FRI SAT
 * @export
 */
export type EstimatedArrivalDayOfWeek = string;
/**
 * Number of days delayed at customs. Returned for International requests.
 * @export
 */
export type EstimatedArrivalDelayCount = string;
/**
 * Number of National holidays during transit. Returned for International requests.
 * @export
 */
export type EstimatedArrivalHolidayCount = string;
/**
 * The date and pick up time container.
 * @export
 * @interface EstimatedArrivalPickup
 */
export interface EstimatedArrivalPickup {
    /**
     * The date UPS picks up the package from the origin. Format: YYYYMMDD. In the event the Pickup date differs from the Ship On Date, provided in the request, a warning message will be returned.
     * @type {string}
     * @memberof EstimatedArrivalPickup
     */
    Date: string;
    /**
     * The time UPS will pick up the shipment. Military Time Format HHMMSS or HHMM
     * @type {string}
     * @memberof EstimatedArrivalPickup
     */
    Time?: string;
}
/**
 * Number of rest days, i.e. non movement. Returned for International requests.
 * @export
 */
export type EstimatedArrivalRestDays = string;
/**
 * The total number of days in transit from one location to the next. Returned for International requests.
 * @export
 */
export type EstimatedArrivalTotalTransitDays = string;
/**
 * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type ExtendedFlexibleParcelIndicatorCurrencyCode = string;
/**
 * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type ExtendedFlexibleParcelIndicatorMonetaryValue = string;
/**
 * UPS Account Number.
 * @export
 */
export type FRSPaymentInformationAccountNumber = string;
/**
 * Payer Address Container.  Address container may be present for FRS Payment Information type = 02 and required when the FRS Payment Information type = 03.
 * @export
 * @interface FRSPaymentInformationAddress
 */
export interface FRSPaymentInformationAddress {
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof FRSPaymentInformationAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof FRSPaymentInformationAddress
     */
    CountryCode: string;
}
/**
 * GFP Payment Information Type container.  GFP only.
 * @export
 * @interface FRSPaymentInformationType
 */
export interface FRSPaymentInformationType {
    /**
     * The code associated with Handling Unit Type.  Valid values:  SKD = Skid  CBY = Carboy PLT = Pallet TOT = Totes LOO = Loose OTH = Other
     * @type {string}
     * @memberof FRSPaymentInformationType
     */
    Code: string;
    /**
     * A description of the code for the Handling Unit type.
     * @type {string}
     * @memberof FRSPaymentInformationType
     */
    Description?: string;
}
/**
 * FreightDensityRate container for Density based rating.
 * @export
 * @interface FRSShipmentDataFreightDensityRate
 */
export interface FRSShipmentDataFreightDensityRate {
    /**
     * Density is returned if the Shipper is eligible for Density based rate.  Valid values:0 to 999.9
     * @type {string}
     * @memberof FRSShipmentDataFreightDensityRate
     */
    Density: string;
    /**
     * TotalCubic feet is returned if the Shipper is eligible for Density based rate.  Valid values:0 to 99999.999
     * @type {string}
     * @memberof FRSShipmentDataFreightDensityRate
     */
    TotalCubicFeet: string;
}
/**
 * Handling Unit for Density based rating container.
 * @export
 * @interface FRSShipmentDataHandlingUnits
 */
export interface FRSShipmentDataHandlingUnits {
    /**
     * Handling Unit Quantity for Density based rating.
     * @type {string}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Quantity: string;
    /**
     *
     * @type {HandlingUnitsType}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Type: HandlingUnitsType;
    /**
     *
     * @type {HandlingUnitsDimensions}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Dimensions: HandlingUnitsDimensions;
    /**
     *
     * @type {HandlingUnitsAdjustedHeight}
     * @memberof FRSShipmentDataHandlingUnits
     */
    AdjustedHeight?: HandlingUnitsAdjustedHeight;
}
/**
 * Transportation Charges Container
 * @export
 * @interface FRSShipmentDataTransportationCharges
 */
export interface FRSShipmentDataTransportationCharges {
    /**
     *
     * @type {TransportationChargesGrossCharge}
     * @memberof FRSShipmentDataTransportationCharges
     */
    GrossCharge: TransportationChargesGrossCharge;
    /**
     *
     * @type {TransportationChargesDiscountAmount}
     * @memberof FRSShipmentDataTransportationCharges
     */
    DiscountAmount: TransportationChargesDiscountAmount;
    /**
     * Discount Percentage
     * @type {string}
     * @memberof FRSShipmentDataTransportationCharges
     */
    DiscountPercentage: string;
    /**
     *
     * @type {TransportationChargesNetCharge}
     * @memberof FRSShipmentDataTransportationCharges
     */
    NetCharge: TransportationChargesNetCharge;
}
/**
 * Container to hold Adjusted Height information.  Required if AdjustedHeightIndicator is present.
 * @export
 * @interface FreightDensityInfoAdjustedHeight
 */
export interface FreightDensityInfoAdjustedHeight {
    /**
     * Adjusted Height value for the handling unit.  Adjusted Height is done only when Handling unit type is SKD = Skid or PLT = Pallet.
     * @type {string}
     * @memberof FreightDensityInfoAdjustedHeight
     */
    Value: string;
    /**
     *
     * @type {AdjustedHeightUnitOfMeasurement}
     * @memberof FreightDensityInfoAdjustedHeight
     */
    UnitOfMeasurement: AdjustedHeightUnitOfMeasurement;
}
/**
 * The presence of the AdjustedHeightIndicator allows UPS to do height reduction adjustment for density based rate request.
 * @export
 */
export type FreightDensityInfoAdjustedHeightIndicator = string;
/**
 * Handling Unit for Density based rating container.
 * @export
 * @interface FreightDensityInfoHandlingUnits
 */
export interface FreightDensityInfoHandlingUnits {
    /**
     * Handling Unit Quantity for Density based rating.
     * @type {string}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Quantity: string;
    /**
     *
     * @type {HandlingUnitsType}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Type: HandlingUnitsType;
    /**
     *
     * @type {HandlingUnitsDimensions}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Dimensions: HandlingUnitsDimensions;
}
/**
 * Density is returned if the Shipper is eligible for Density based rate.  Valid values:0 to 999.9
 * @export
 */
export type FreightDensityRateDensity = string;
/**
 * TotalCubic feet is returned if the Shipper is eligible for Density based rate.  Valid values:0 to 99999.999
 * @export
 */
export type FreightDensityRateTotalCubicFeet = string;
/**
 * The presence of the tag indicates that the  rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.
 * @export
 */
export type FreightShipmentInformationDensityEligibleIndicator = string;
/**
 * Freight Density Info container.  Required if DensityEligibleIndicator is present.
 * @export
 * @interface FreightShipmentInformationFreightDensityInfo
 */
export interface FreightShipmentInformationFreightDensityInfo {
    /**
     * The presence of the AdjustedHeightIndicator allows UPS to do height reduction adjustment for density based rate request.
     * @type {string}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    AdjustedHeightIndicator?: string;
    /**
     *
     * @type {FreightDensityInfoAdjustedHeight}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    AdjustedHeight?: FreightDensityInfoAdjustedHeight;
    /**
     *
     * @type {FreightDensityInfoHandlingUnits}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    HandlingUnits: FreightDensityInfoHandlingUnits;
}
/**
 * The IATA currency code associated with the transportation costs for the shipment.
 * @export
 */
export type GrossChargeCurrencyCode = string;
/**
 * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type GrossChargeMonetaryValue = string;
/**
 * Container to hold Adjusted Height information.
 * @export
 * @interface HandlingUnitsAdjustedHeight
 */
export interface HandlingUnitsAdjustedHeight {
    /**
     * Adjusted Height value for the handling unit.  Adjusted Height is done only when Handling unit type is SKD = Skid or PLT = Pallet.
     * @type {string}
     * @memberof HandlingUnitsAdjustedHeight
     */
    Value: string;
    /**
     *
     * @type {AdjustedHeightUnitOfMeasurement}
     * @memberof HandlingUnitsAdjustedHeight
     */
    UnitOfMeasurement: AdjustedHeightUnitOfMeasurement;
}
/**
 * Dimension of the HandlingUnit container for density based pricing.
 * @export
 * @interface HandlingUnitsDimensions
 */
export interface HandlingUnitsDimensions {
    /**
     *
     * @type {DimensionsUnitOfMeasurement}
     * @memberof HandlingUnitsDimensions
     */
    UnitOfMeasurement: DimensionsUnitOfMeasurement;
    /**
     * The length of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Length: string;
    /**
     * The width of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Width: string;
    /**
     * The height of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Height: string;
}
/**
 * Handling Unit Quantity for Density based rating.
 * @export
 */
export type HandlingUnitsQuantity = string;
/**
 * Handling Unit Type for Density based rating.
 * @export
 * @interface HandlingUnitsType
 */
export interface HandlingUnitsType {
    /**
     * The code associated with Handling Unit Type.  Valid values:  SKD = Skid  CBY = Carboy PLT = Pallet TOT = Totes LOO = Loose OTH = Other
     * @type {string}
     * @memberof HandlingUnitsType
     */
    Code: string;
    /**
     * A description of the code for the Handling Unit type.
     * @type {string}
     * @memberof HandlingUnitsType
     */
    Description?: string;
}
/**
 * Presence/Absence Indicator. Any value is ignored. Indicates the hazmat shipment/package is all packed in one.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatAllPackedInOneIndicator = string;
/**
 * Additional remarks or special provision information. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordAdditionalDescription = string;
/**
 * Identifies the Chemcial Record.  Required if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordChemicalRecordIdentifier = string;
/**
 * This is the hazard class associated to the specified commodity. Required if CommodityRegulatedLevelCode is �LQ� or �FR�  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordClassDivisionNumber = string;
/**
 * Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ), Lightly Regulated (LR). Default value is FR. Valid values are  LR,  FR,  LQ,  EQ.   Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordCommodityRegulatedLevelCode = string;
/**
 * The emergency information, contact name and/or contact number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordEmergencyContact = string;
/**
 * 24 Hour Emergency Phone Number of the shipper.  Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is '1', area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordEmergencyPhone = string;
/**
 * Defines the type of label that is required on the package for the commodity. Not applicable if CommodityRegulatedLevelCode = LR or EQ.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordHazardLabelRequired = string;
/**
 * This is the ID number (UN/NA/ID) for the specified commodity. Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation. UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordIDNumber = string;
/**
 * This is the packing group category associated to the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals. Valid values are: I,  II, III, blank.   Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordPackagingGroupType = string;
/**
 * The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordPackagingInstructionCode = string;
/**
 * The package type code identifying the type of packaging used for the commodity. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordPackagingType = string;
/**
 * The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR. Valid values are 1 to 999.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordPackagingTypeQuantity = string;
/**
 * The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordProperShippingName = string;
/**
 * Required if CommodityRegulatedLevelCode = LQ or FR. The numerical value of the mass capacity of the regulated good.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordQuantity = string;
/**
 * The Regulatory set associated with every regulated shipment. It must be the same across the shipment.  Valid values:    ADR -  For Europe to Europe Ground Movement  CFR -  For HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada,  IATA -  For Worldwide Air movement  TDG -  For Canada to Canada ground movement or Canada to U.S. standard movement  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package or multiple packages containing different RegulationSet, RegulationSet of first ChemicalRecord would be considered for validating and rating the entire shipment.
 * @export
 */
export type HazMatChemicalRecordRegulationSet = string;
/**
 * Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordReportableQuantity = string;
/**
 * Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordSubRiskClass = string;
/**
 * The technical name (when required) for the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordTechnicalName = string;
/**
 * Transport Category. Valid values are 0 to 4.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordTransportCategory = string;
/**
 * The method of transport by which a shipment is approved to move and the regulations associated with that method.  Only required when the CommodityRegulatedLevelCode is FR or LQ. Valid values:  01 - Highway 02 - Ground 03 - Passenger Aircraft 04 - Cargo Aircraft Only  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package having different TransportationMode, TransportationMode of first ChemicalRecord would be considered for validating and rating the package. All TransportationMode except for '04' are general service offering. If any chemical record contains '04' as TransportationMode, ShipperNumber needs to be authorized to use '04' as TransportationMode.
 * @export
 */
export type HazMatChemicalRecordTransportationMode = string;
/**
 * Defines what is restricted to pass through a tunnel.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordTunnelRestrictionCode = string;
/**
 * Required if CommodityRegulatedLevelCode = LQ or FR. The unit of measure used for the mass capacity of the regulated good. For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordUOM = string;
/**
 * Container to hold HazMat Chemical Records.
 * @export
 * @interface HazMatHazMatChemicalRecord
 */
export interface HazMatHazMatChemicalRecord {
    /**
     * Identifies the Chemcial Record.  Required if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    ChemicalRecordIdentifier?: string;
    /**
     * This is the hazard class associated to the specified commodity. Required if CommodityRegulatedLevelCode is �LQ� or �FR�  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    ClassDivisionNumber?: string;
    /**
     * This is the ID number (UN/NA/ID) for the specified commodity. Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation. UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    IDNumber?: string;
    /**
     * The method of transport by which a shipment is approved to move and the regulations associated with that method.  Only required when the CommodityRegulatedLevelCode is FR or LQ. Valid values:  01 - Highway 02 - Ground 03 - Passenger Aircraft 04 - Cargo Aircraft Only  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package having different TransportationMode, TransportationMode of first ChemicalRecord would be considered for validating and rating the package. All TransportationMode except for '04' are general service offering. If any chemical record contains '04' as TransportationMode, ShipperNumber needs to be authorized to use '04' as TransportationMode.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    TransportationMode: string;
    /**
     * The Regulatory set associated with every regulated shipment. It must be the same across the shipment.  Valid values:    ADR -  For Europe to Europe Ground Movement  CFR -  For HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada,  IATA -  For Worldwide Air movement  TDG -  For Canada to Canada ground movement or Canada to U.S. standard movement  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package or multiple packages containing different RegulationSet, RegulationSet of first ChemicalRecord would be considered for validating and rating the entire shipment.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    RegulationSet: string;
    /**
     * 24 Hour Emergency Phone Number of the shipper.  Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is '1', area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    EmergencyPhone?: string;
    /**
     * The emergency information, contact name and/or contact number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    EmergencyContact?: string;
    /**
     * Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    ReportableQuantity?: string;
    /**
     * Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    SubRiskClass?: string;
    /**
     * This is the packing group category associated to the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals. Valid values are: I,  II, III, blank.   Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    PackagingGroupType?: string;
    /**
     * Required if CommodityRegulatedLevelCode = LQ or FR. The numerical value of the mass capacity of the regulated good.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    Quantity?: string;
    /**
     * Required if CommodityRegulatedLevelCode = LQ or FR. The unit of measure used for the mass capacity of the regulated good. For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    UOM?: string;
    /**
     * The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    PackagingInstructionCode?: string;
    /**
     * The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    ProperShippingName?: string;
    /**
     * The technical name (when required) for the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    TechnicalName?: string;
    /**
     * Additional remarks or special provision information. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    AdditionalDescription?: string;
    /**
     * The package type code identifying the type of packaging used for the commodity. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    PackagingType?: string;
    /**
     * Defines the type of label that is required on the package for the commodity. Not applicable if CommodityRegulatedLevelCode = LR or EQ.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    HazardLabelRequired?: string;
    /**
     * The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR. Valid values are 1 to 999.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    PackagingTypeQuantity?: string;
    /**
     * Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ), Lightly Regulated (LR). Default value is FR. Valid values are  LR,  FR,  LQ,  EQ.   Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    CommodityRegulatedLevelCode?: string;
    /**
     * Transport Category. Valid values are 0 to 4.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    TransportCategory?: string;
    /**
     * Defines what is restricted to pass through a tunnel.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof HazMatHazMatChemicalRecord
     */
    TunnelRestrictionCode?: string;
}
/**
 * Presence/Absence Indicator. Any value is ignored. Presence indicates that shipment is overpack.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatOverPackedIndicator = string;
/**
 * Identifies the package containing Dangerous Goods.  Required if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatPackageIdentifier = string;
/**
 * QValue is required when a HazMat shipment specifies AllPackedInOneIndicator and the regulation set for that shipment is IATA.   Applies only if SubVersion is greater than or equal to 1701. Valid values are : 0.1; 0.2; 0.3; 0.4; 0.5; 0.6; 0.7; 0.8; 0.9; 1.0
 * @export
 */
export type HazMatQValue = string;
/**
 * Code for type of Import Control shipment.  Valid values are:  '01' = ImportControl Print and Mail  '02' = ImportControl One-Attempt                                     '03' = ImportControl Three-Attempt '04' = ImportControl Electronic Label  '05' = ImportControl Print Label.
 * @export
 */
export type ImportControlCode = string;
/**
 * Text description of the code representing the Import Control associated with the shipment.
 * @export
 */
export type ImportControlDescription = string;
/**
 * Container to hold Basic Flexible Parcel Indicator information.  Valid for UPS World Wide Express Freight shipments.
 * @export
 * @interface InsuranceBasicFlexibleParcelIndicator
 */
export interface InsuranceBasicFlexibleParcelIndicator {
    /**
     * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceBasicFlexibleParcelIndicator
     */
    CurrencyCode: string;
    /**
     * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceBasicFlexibleParcelIndicator
     */
    MonetaryValue: string;
}
/**
 * Container for Extended Flexible Parcel Indicator  Valid for UPS World Wide Express Freight shipments.
 * @export
 * @interface InsuranceExtendedFlexibleParcelIndicator
 */
export interface InsuranceExtendedFlexibleParcelIndicator {
    /**
     * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceExtendedFlexibleParcelIndicator
     */
    CurrencyCode: string;
    /**
     * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceExtendedFlexibleParcelIndicator
     */
    MonetaryValue: string;
}
/**
 * Container to hold Time In Transit Flexible Parcel Indicator information.  Valid for UPS World Wide Express Freight shipments.
 * @export
 * @interface InsuranceTimeInTransitFlexibleParcelIndicator
 */
export interface InsuranceTimeInTransitFlexibleParcelIndicator {
    /**
     * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceTimeInTransitFlexibleParcelIndicator
     */
    CurrencyCode: string;
    /**
     * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof InsuranceTimeInTransitFlexibleParcelIndicator
     */
    MonetaryValue: string;
}
/**
 * Invoice Line Total Currency type. The Currency code should match the origin country's or territory's currency code, otherwise the currency code entered will be ignored.  Note: UPS doesn't support all international currency codes. Please check the developer guides for Supported Currency codes.
 * @export
 */
export type InvoiceLineTotalCurrencyCode = string;
/**
 * Total amount of the invoice accompanying the shipment. Required when the InvoiceLineTotal container exists in the rate request.  Valid values are from 1 to 99999999.
 * @export
 */
export type InvoiceLineTotalMonetaryValue = string;
/**
 * Identification code for itemized charge.
 * @export
 */
export type ItemizedChargesCode = string;
/**
 * The IATA currency code associated with the Itemized Charge costs for the shipment.
 * @export
 */
export type ItemizedChargesCurrencyCode = string;
/**
 * Description of Itemized Charge that had been charged.
 * @export
 */
export type ItemizedChargesDescription = string;
/**
 * The value for Itemized Charge costs associated with the shipment.
 * @export
 */
export type ItemizedChargesMonetaryValue = string;
/**
 * The sub-type of Itemized Charge type.
 * @export
 */
export type ItemizedChargesSubType = string;
/**
 * Value of NMFC Prime. Contact your service representative if you need information concerning NMFC Codes.  Required if NMFC Container is present. For GFP Only.
 * @export
 */
export type NMFCPrimeCode = string;
/**
 * Value of NMFC Sub. Contact your service representative if you need information concerning NMFC Codes.  Needs to be provided when the SubCode associated with the PrimeCode is other than 00.  API defaults the sub value to 00 if not provided.  If provided the Sub Code should be associated with the PrimeCode of the NMFC.
 * @export
 */
export type NMFCSubCode = string;
/**
 * Negotiated Itemized Accessorial and Sur Charges.  These charges would be returned only when subversion is greater than or equal to 1607.
 * @export
 * @interface NegotiatedChargesItemizedCharges
 */
export interface NegotiatedChargesItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    CurrencyCode: string;
    /**
     * The value for Itemized Charge costs associated with the shipment.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of Itemized Charge type.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    SubType?: string;
}
/**
 * Itemized Charges are returned only when the subversion element is present and greater than or equal to '1601'.  These charges would be returned only when subversion is greater than or equal to 1601
 * @export
 * @interface NegotiatedRateChargesItemizedCharges
 */
export interface NegotiatedRateChargesItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    CurrencyCode: string;
    /**
     * The value for Itemized Charge costs associated with the shipment.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of Itemized Charge type.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    SubType?: string;
}
/**
 * TaxCharges container are returned only when TaxInformationIndicator is present in request. TaxCharges container contains Tax information for a given shipment.
 * @export
 * @interface NegotiatedRateChargesTaxCharges
 */
export interface NegotiatedRateChargesTaxCharges {
    /**
     * Tax Type code. The code represents the type of Tax applied to a shipment. Please refer to Appendix I for possible Tax Type codes.
     * @type {string}
     * @memberof NegotiatedRateChargesTaxCharges
     */
    Type: string;
    /**
     * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof NegotiatedRateChargesTaxCharges
     */
    MonetaryValue: string;
}
/**
 * Total Charges Container.
 * @export
 * @interface NegotiatedRateChargesTotalCharge
 */
export interface NegotiatedRateChargesTotalCharge {
    /**
     * The IATA currency code associated with the Negotiated Rate total charges for the shipment.
     * @type {string}
     * @memberof NegotiatedRateChargesTotalCharge
     */
    CurrencyCode: string;
    /**
     * The value for the Negotiated Rate total charges associated with the shipment.
     * @type {string}
     * @memberof NegotiatedRateChargesTotalCharge
     */
    MonetaryValue: string;
}
/**
 * TotalChargesWithTaxes container would be returned only if TaxInformationIndicator is present in request. TotalChargesWithTaxes contains total charges including total taxes applied to a shipment.
 * @export
 * @interface NegotiatedRateChargesTotalChargesWithTaxes
 */
export interface NegotiatedRateChargesTotalChargesWithTaxes {
    /**
     * TotalChargesWithTaxes currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof NegotiatedRateChargesTotalChargesWithTaxes
     */
    CurrencyCode: string;
    /**
     * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof NegotiatedRateChargesTotalChargesWithTaxes
     */
    MonetaryValue: string;
}
/**
 * The IATA currency code associated with the transportation costs for the shipment.
 * @export
 */
export type NetChargeCurrencyCode = string;
/**
 * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type NetChargeMonetaryValue = string;
/**
 * A flag indicating if the packages require additional handling. True if AdditionalHandlingIndicator tag exists; false otherwise. Additional Handling indicator indicates it�s a non-corrugated package.  Empty Tag.
 * @export
 */
export type PackageAdditionalHandlingIndicator = string;
/**
 * Commodity Container.  Required only for GFP rating when FRSShipmentIndicator is requested.
 * @export
 * @interface PackageCommodity
 */
export interface PackageCommodity {
    /**
     * Freight Classification. Freight class partially determines the freight rate for the article.  See Appendix of the Rating Ground Freight Web Services Developers Guide for list of Freight classes. For GFP Only.
     * @type {string}
     * @memberof PackageCommodity
     */
    FreightClass: string;
    /**
     *
     * @type {CommodityNMFC}
     * @memberof PackageCommodity
     */
    NMFC?: CommodityNMFC;
}
/**
 * Package Dimensional Weight container. Values in this container are ignored when package dimensions are provided. Please visit ups.com for instructions on calculating this value.  Only used for non-US/CA/PR shipments.
 * @export
 * @interface PackageDimWeight
 */
export interface PackageDimWeight {
    /**
     *
     * @type {DimWeightUnitOfMeasurement}
     * @memberof PackageDimWeight
     */
    UnitOfMeasurement?: DimWeightUnitOfMeasurement;
    /**
     * Dimensional weight of the package. Decimal values are not accepted, however there is one implied decimal place for values in this field (i.e. 115 = 11.5).
     * @type {string}
     * @memberof PackageDimWeight
     */
    Weight?: string;
}
/**
 * Dimensions Container. This container is not applicable for GFP Rating request.  Required for Heavy Goods service. Package Dimension will be ignored for Simple Rate
 * @export
 * @interface PackageDimensions
 */
export interface PackageDimensions {
    /**
     *
     * @type {DimensionsUnitOfMeasurement}
     * @memberof PackageDimensions
     */
    UnitOfMeasurement: DimensionsUnitOfMeasurement;
    /**
     * The length of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Length: string;
    /**
     * The width of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Width: string;
    /**
     * The height of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Height: string;
}
/**
 * This element does not require a value and if one is entered it will be ignored.  If present, it indicates the shipment will be categorized as a Large Package.
 * @export
 */
export type PackageLargePackageIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is qualified for minimum billable weight.  Applicable for UPS Worldwide Economy DDU service
 * @export
 */
export type PackageMinimumBillableWeightIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is oversized.  Applicable for UPS Worldwide Economy DDU service
 * @export
 */
export type PackageOversizeIndicator = string;
/**
 * PackageServiceOptions container.  N/A
 * @export
 * @interface PackagePackageServiceOptions
 */
export interface PackagePackageServiceOptions {
    /**
     *
     * @type {PackageServiceOptionsDeliveryConfirmation}
     * @memberof PackagePackageServiceOptions
     */
    DeliveryConfirmation?: PackageServiceOptionsDeliveryConfirmation;
    /**
     *
     * @type {PackageServiceOptionsAccessPointCOD}
     * @memberof PackagePackageServiceOptions
     */
    AccessPointCOD?: PackageServiceOptionsAccessPointCOD;
    /**
     *
     * @type {PackageServiceOptionsCOD}
     * @memberof PackagePackageServiceOptions
     */
    COD?: PackageServiceOptionsCOD;
    /**
     *
     * @type {PackageServiceOptionsDeclaredValue}
     * @memberof PackagePackageServiceOptions
     */
    DeclaredValue?: PackageServiceOptionsDeclaredValue;
    /**
     *
     * @type {PackageServiceOptionsShipperDeclaredValue}
     * @memberof PackagePackageServiceOptions
     */
    ShipperDeclaredValue?: PackageServiceOptionsShipperDeclaredValue;
    /**
     * The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    ShipperReleaseIndicator?: string;
    /**
     * Any value associated with this element will be ignored.   If present, the package is rated for UPS Proactive Response and proactive package tracking.  Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Response.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    ProactiveIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    RefrigerationIndicator?: string;
    /**
     * An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   Valid only for Canada to Canada movements.  Available for the following Return Services: Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label Return Service Three Attempt  May be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver UPS Standard.   Not available for packages with the following: Delivery Confirmation - Signature Required Delivery Confirmation - Adult Signature Required.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    UPSPremiumCareIndicator?: string;
    /**
     *
     * @type {PackageServiceOptionsHazMat}
     * @memberof PackagePackageServiceOptions
     */
    HazMat?: PackageServiceOptionsHazMat;
    /**
     *
     * @type {PackageServiceOptionsDryIce}
     * @memberof PackagePackageServiceOptions
     */
    DryIce?: PackageServiceOptionsDryIce;
}
/**
 * Package Weight Container.  Required for an GFP Rating request. Otherwise optional. Required for Heavy Goods service.  Package Weight will be ignored for Simple Rate
 * @export
 * @interface PackagePackageWeight
 */
export interface PackagePackageWeight {
    /**
     *
     * @type {PackageWeightUnitOfMeasurement}
     * @memberof PackagePackageWeight
     */
    UnitOfMeasurement: PackageWeightUnitOfMeasurement;
    /**
     * Actual package weight.  Weight accepted for letters/envelopes.
     * @type {string}
     * @memberof PackagePackageWeight
     */
    Weight: string;
}
/**
 * Packaging Type Container.  N/A
 * @export
 * @interface PackagePackagingType
 */
export interface PackagePackagingType {
    /**
     * The code for the UPS packaging type associated with the package.  Valid values:  00 = UNKNOWN   01 = UPS Letter   02 = Package   03 = Tube   04 = Pak   21 = Express Box   24 = 25KG Box   25 = 10KG Box   30 = Pallet   2a = Small Express Box   2b = Medium Express Box  2c = Large Express Box.   For FRS rating requests the only valid value is customer supplied packaging �02�.
     * @type {string}
     * @memberof PackagePackagingType
     */
    Code: string;
    /**
     * A text description of the code for the UPS packaging type associated with the shipment.  Length is not validated.
     * @type {string}
     * @memberof PackagePackagingType
     */
    Description?: string;
}
/**
 * Access Point COD indicates Package COD is requested for a shipment.  Valid only for : 01 - Hold For Pickup At UPS Access Point, Shipment Indication type.  Package Access Point COD is valid only for shipment without return service from US/PR to US/PR and CA to CA.  Not valid with (Package) COD.
 * @export
 * @interface PackageServiceOptionsAccessPointCOD
 */
export interface PackageServiceOptionsAccessPointCOD {
    /**
     * Access Point COD Currency Code.  Required if Access Point COD container is present. UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
     * @type {string}
     * @memberof PackageServiceOptionsAccessPointCOD
     */
    CurrencyCode: string;
    /**
     * Access Point COD Monetary Value.  Required if Access Point COD container is present.
     * @type {string}
     * @memberof PackageServiceOptionsAccessPointCOD
     */
    MonetaryValue: string;
}
/**
 * COD Container. Indicates COD is requested.   Valid for the following country or territory combinations:  US/PR to US/PR CA to CA CA to US Not allowed for CA to US for packages that are designated as Letters or Envelopes.
 * @export
 * @interface PackageServiceOptionsCOD
 */
export interface PackageServiceOptionsCOD {
    /**
     * For valid values, refer to�Rating and Shipping COD Supported Countries or Territories in the Appendix.
     * @type {string}
     * @memberof PackageServiceOptionsCOD
     */
    CODFundsCode: string;
    /**
     *
     * @type {CODCODAmount}
     * @memberof PackageServiceOptionsCOD
     */
    CODAmount: CODCODAmount;
}
/**
 * Declared Value Container.  N/A
 * @export
 * @interface PackageServiceOptionsDeclaredValue
 */
export interface PackageServiceOptionsDeclaredValue {
    /**
     * The IATA currency code associated with the declared value amount for the package.  Required if a value for the package declared value amount exists in the MonetaryValue tag. Must match one of the IATA currency codes. Length is not validated. UPS does not support all international currency codes. Refer to Currency Codes in the Appendix for a list of valid codes.
     * @type {string}
     * @memberof PackageServiceOptionsDeclaredValue
     */
    CurrencyCode: string;
    /**
     * The monetary value for the declared value amount associated with the package.  Max value of 5,000 USD for Local and 50,000 USD for Remote. Absolute maximum value is 21474836.47
     * @type {string}
     * @memberof PackageServiceOptionsDeclaredValue
     */
    MonetaryValue: string;
}
/**
 * Delivery Confirmation Container. For a list of valid origin/destination countries or territories please refer to appendix.  DeliveryConfirmation and COD are mutually exclusive.
 * @export
 * @interface PackageServiceOptionsDeliveryConfirmation
 */
export interface PackageServiceOptionsDeliveryConfirmation {
    /**
     * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation Signature Required  2 - Delivery Confirmation Adult Signature Required
     * @type {string}
     * @memberof PackageServiceOptionsDeliveryConfirmation
     */
    DCISType: string;
}
/**
 * Container to hold Dry Ice information.  Lane check will happen based on postal code/ city.
 * @export
 * @interface PackageServiceOptionsDryIce
 */
export interface PackageServiceOptionsDryIce {
    /**
     * Regulation set for DryIce Shipment.  Valid values:  CFR = For HazMat regulated by US Dept of Transportation within the U.S. or ground shipments to Canada, IATA = For Worldwide Air movement.   The following values are valid: CFR and IATA.
     * @type {string}
     * @memberof PackageServiceOptionsDryIce
     */
    RegulationSet: string;
    /**
     *
     * @type {DryIceDryIceWeight}
     * @memberof PackageServiceOptionsDryIce
     */
    DryIceWeight: DryIceDryIceWeight;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the Dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 KGS or 5.5 LBS.
     * @type {string}
     * @memberof PackageServiceOptionsDryIce
     */
    MedicalUseIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. Indicates a Dry Ice audit will be performed per the Regulation Set requirements. Empty tag means indicator is present.
     * @type {string}
     * @memberof PackageServiceOptionsDryIce
     */
    AuditRequired?: string;
}
/**
 * Container to hold HazMat information.  Applies only if SubVersion is greater than or equal to 1701.
 * @export
 * @interface PackageServiceOptionsHazMat
 */
export interface PackageServiceOptionsHazMat {
    /**
     * Identifies the package containing Dangerous Goods.  Required if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    PackageIdentifier?: string;
    /**
     * QValue is required when a HazMat shipment specifies AllPackedInOneIndicator and the regulation set for that shipment is IATA.   Applies only if SubVersion is greater than or equal to 1701. Valid values are : 0.1; 0.2; 0.3; 0.4; 0.5; 0.6; 0.7; 0.8; 0.9; 1.0
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    QValue?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. Presence indicates that shipment is overpack.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    OverPackedIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. Indicates the hazmat shipment/package is all packed in one.  Applies only if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    AllPackedInOneIndicator?: string;
    /**
     *
     * @type {HazMatHazMatChemicalRecord}
     * @memberof PackageServiceOptionsHazMat
     */
    HazMatChemicalRecord: HazMatHazMatChemicalRecord;
}
/**
 * Any value associated with this element will be ignored.   If present, the package is rated for UPS Proactive Response and proactive package tracking.  Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Response.
 * @export
 */
export type PackageServiceOptionsProactiveIndicator = string;
/**
 * Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.
 * @export
 */
export type PackageServiceOptionsRefrigerationIndicator = string;
/**
 * Shipper Paid Declared Value Charge at Package level.   Valid for UPS World Wide Express Freight shipments.
 * @export
 * @interface PackageServiceOptionsShipperDeclaredValue
 */
export interface PackageServiceOptionsShipperDeclaredValue {
    /**
     * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
     * @type {string}
     * @memberof PackageServiceOptionsShipperDeclaredValue
     */
    CurrencyCode: string;
    /**
     * The monetary value for the amount associated with the package.
     * @type {string}
     * @memberof PackageServiceOptionsShipperDeclaredValue
     */
    MonetaryValue: string;
}
/**
 * The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.
 * @export
 */
export type PackageServiceOptionsShipperReleaseIndicator = string;
/**
 * An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   Valid only for Canada to Canada movements.  Available for the following Return Services: Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label Return Service Three Attempt  May be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver UPS Standard.   Not available for packages with the following: Delivery Confirmation - Signature Required Delivery Confirmation - Adult Signature Required.
 * @export
 */
export type PackageServiceOptionsUPSPremiumCareIndicator = string;
/**
 * UPS Premier  N/A
 * @export
 * @interface PackageUPSPremier
 */
export interface PackageUPSPremier {
    /**
     * UPS Premier Category  Valid values are 01,02,03                         UPS Premier Silver - 01 UPS Premier Gold - 02 UPS Premier Platinum - 03
     * @type {string}
     * @memberof PackageUPSPremier
     */
    Category: string;
}
/**
 * UnitOfMeasurement Container.  N/A
 * @export
 * @interface PackageWeightUnitOfMeasurement
 */
export interface PackageWeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * @type {string}
     * @memberof PackageWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof PackageWeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * Actual package weight.  Weight accepted for letters/envelopes.
 * @export
 */
export type PackageWeightWeight = string;
/**
 * The code for the UPS packaging type associated with the package.  Valid values:  00 = UNKNOWN   01 = UPS Letter   02 = Package   03 = Tube   04 = Pak   21 = Express Box   24 = 25KG Box   25 = 10KG Box   30 = Pallet   2a = Small Express Box   2b = Medium Express Box  2c = Large Express Box.   For FRS rating requests the only valid value is customer supplied packaging �02�.
 * @export
 */
export type PackagingTypeCode = string;
/**
 * A text description of the code for the UPS packaging type associated with the shipment.  Length is not validated.
 * @export
 */
export type PackagingTypeDescription = string;
/**
 * Shipment charge container.  If Duty and Tax charges are applicable to a shipment and a payer is not specified, the default payer of Duty and Tax charges is Bill to Receiver. There will be no default payer of Duty and Tax charges for DDU and DDP service.
 * @export
 * @interface PaymentDetailsShipmentCharge
 */
export interface PaymentDetailsShipmentCharge {
    /**
     * Values are 01 = Transportation,� 02 = Duties and Taxes
     * @type {string}
     * @memberof PaymentDetailsShipmentCharge
     */
    Type: string;
    /**
     *
     * @type {ShipmentChargeBillShipper}
     * @memberof PaymentDetailsShipmentCharge
     */
    BillShipper?: ShipmentChargeBillShipper;
    /**
     *
     * @type {ShipmentChargeBillReceiver}
     * @memberof PaymentDetailsShipmentCharge
     */
    BillReceiver?: ShipmentChargeBillReceiver;
    /**
     *
     * @type {ShipmentChargeBillThirdParty}
     * @memberof PaymentDetailsShipmentCharge
     */
    BillThirdParty?: ShipmentChargeBillThirdParty;
    /**
     * Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  Empty Tag. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.
     * @type {string}
     * @memberof PaymentDetailsShipmentCharge
     */
    ConsigneeBilledIndicator?: string;
}
/**
 * Split Duty VAT Indicator. The presence indicates the payer specified for Transportation Charges will pay transportation charges and any duties that apply to the shipment. The payer specified for Duties and Taxes will pay the VAT (Value-Added Tax) only.  Empty Tag. The payment method for Transportation charges must be UPS account. The UPS account must be a daily pickup account or an occasional account.
 * @export
 */
export type PaymentDetailsSplitDutyVATIndicator = string;
/**
 * Shipment Date. The user is allowed to query up to 35 days into the past and 60 days into the future. For Subversion of 2205, user can send up to 7 days in the future with current date as day zero. Format: YYYYMMDD
 * @export
 */
export type PickupDate = string;
/**
 * The presence of the tag HoldForPickupIndicator indicates that the user opted to hold the shipment at UPS location for pickup.
 * @export
 */
export type PickupOptionsHoldForPickupIndicator = string;
/**
 * The presence of the tag LiftGatePickupRequiredIndicator indicates that the shipment requires a lift gate for pickup.
 * @export
 */
export type PickupOptionsLiftGateAtPickupIndicator = string;
/**
 * The time UPS will pick up the shipment. Military Time Format HHMMSS or HHMM
 * @export
 */
export type PickupTime = string;
/**
 * Pickup Type Code.  Valid values:  01 - Daily Pickup (Default - used when an invalid pickup type code is provided) 03 - Customer Counter 06 - One Time Pickup 19 - Letter Center 20 - Air Service Center Length is not validated.  When negotiated rates are requested, 07 (onCallAir) will be ignored.  Refer to the Rate Types Table in the Appendix for rate type based on Pickup Type and Customer Classification Code.
 * @export
 */
export type PickupTypeCode = string;
/**
 * Pickup Type Description.  Ignored if provided in the Request.
 * @export
 */
export type PickupTypeDescription = string;
/**
 * Promotion Alias code  Required if PromotionalDiscountInformation container is present.
 * @export
 */
export type PromotionalDiscountInformationPromoAliasCode = string;
/**
 * Promotion Code. A discount that is applied to the user.  Required if PromotionalDiscountInformation container is present.
 * @export
 */
export type PromotionalDiscountInformationPromoCode = string;
/**
 * N/A
 * @export
 * @interface RATERequestWrapper
 */
export interface RATERequestWrapper {
    /**
     *
     * @type {RateRequest}
     * @memberof RATERequestWrapper
     */
    RateRequest: RateRequest;
}
/**
 * N/A
 * @export
 * @interface RATEResponseWrapper
 */
export interface RATEResponseWrapper {
    /**
     *
     * @type {RateResponse}
     * @memberof RATEResponseWrapper
     */
    RateResponse: RateResponse;
}
/**
 * Rate Request container.  N/A
 * @export
 * @interface RateRequest
 */
export interface RateRequest {
    /**
     *
     * @type {RateRequestRequest}
     * @memberof RateRequest
     */
    Request: RateRequestRequest;
    /**
     *
     * @type {RateRequestPickupType}
     * @memberof RateRequest
     */
    PickupType?: RateRequestPickupType;
    /**
     *
     * @type {RateRequestCustomerClassification}
     * @memberof RateRequest
     */
    CustomerClassification?: RateRequestCustomerClassification;
    /**
     *
     * @type {RateRequestShipment}
     * @memberof RateRequest
     */
    Shipment: RateRequestShipment;
}
/**
 * Customer classification container. Valid if ShipFrom country or territory  is �US�  N/A
 * @export
 * @interface RateRequestCustomerClassification
 */
export interface RateRequestCustomerClassification {
    /**
     * Customer classification code.  Valid values: 00 -  Rates Associated with Shipper Number 01 -  Daily Rates 04 -  Retail Rates 05 - Regional Rates 06 - General List Rates 53 -  Standard List Rates Length is not validated. If customer classification code is not a valid value please refer to Rate Types Table on page 11.
     * @type {string}
     * @memberof RateRequestCustomerClassification
     */
    Code: string;
    /**
     * Customer classification description of the code above.  Ignored if provided in the Request. Length is not validated.
     * @type {string}
     * @memberof RateRequestCustomerClassification
     */
    Description?: string;
}
/**
 * Pickup Type container tag.  N/A
 * @export
 * @interface RateRequestPickupType
 */
export interface RateRequestPickupType {
    /**
     * Pickup Type Code.  Valid values:  01 - Daily Pickup (Default - used when an invalid pickup type code is provided) 03 - Customer Counter 06 - One Time Pickup 19 - Letter Center 20 - Air Service Center Length is not validated.  When negotiated rates are requested, 07 (onCallAir) will be ignored.  Refer to the Rate Types Table in the Appendix for rate type based on Pickup Type and Customer Classification Code.
     * @type {string}
     * @memberof RateRequestPickupType
     */
    Code: string;
    /**
     * Pickup Type Description.  Ignored if provided in the Request.
     * @type {string}
     * @memberof RateRequestPickupType
     */
    Description?: string;
}
/**
 * Request container.  N/A
 * @export
 * @interface RateRequestRequest
 */
export interface RateRequestRequest {
    /**
     * Used to define the request type.  Valid Values: Rate = The server rates (The default Request option is Rate if a Request Option is not provided).  Shop = The server validates the shipment, and returns rates for all UPS products from the ShipFrom to the ShipTo addresses.  Ratetimeintransit = The server rates with transit time information Shoptimeintransit = The server validates the shipment, and returns rates and transit times for all UPS products from the ShipFrom to the ShipTo addresses. Rate is the only valid request option for UPS Ground Freight Pricing requests.
     * @type {string}
     * @memberof RateRequestRequest
     */
    RequestOption: string;
    /**
     * Indicates Rate API to display the new release features in Rate API response based on Rate release. See the What's New section for the latest Rate release. Supported values: 1601, 1607, 1701, 1707, 2108, 2205
     * @type {string}
     * @memberof RateRequestRequest
     */
    SubVersion?: string;
    /**
     *
     * @type {RequestTransactionReference}
     * @memberof RateRequestRequest
     */
    TransactionReference?: RequestTransactionReference;
}
/**
 * Container for Shipment Information.  N/A
 * @export
 * @interface RateRequestShipment
 */
export interface RateRequestShipment {
    /**
     * The time that the request was made from the originating system. UTC time down to milliseconds. Example - 2016-07-14T12:01:33.999  Applicable only for HazMat request and with subversion greater than or equal to 1701.
     * @type {string}
     * @memberof RateRequestShipment
     */
    OriginRecordTransactionTimestamp?: string;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof RateRequestShipment
     */
    Shipper: ShipmentShipper;
    /**
     *
     * @type {ShipmentShipTo}
     * @memberof RateRequestShipment
     */
    ShipTo: ShipmentShipTo;
    /**
     *
     * @type {ShipmentShipFrom}
     * @memberof RateRequestShipment
     */
    ShipFrom?: ShipmentShipFrom;
    /**
     *
     * @type {ShipmentAlternateDeliveryAddress}
     * @memberof RateRequestShipment
     */
    AlternateDeliveryAddress?: ShipmentAlternateDeliveryAddress;
    /**
     *
     * @type {Array<ShipmentShipmentIndicationType>}
     * @memberof RateRequestShipment
     */
    ShipmentIndicationType?: Array<ShipmentShipmentIndicationType>;
    /**
     *
     * @type {ShipmentPaymentDetails}
     * @memberof RateRequestShipment
     */
    PaymentDetails?: ShipmentPaymentDetails;
    /**
     *
     * @type {ShipmentFRSPaymentInformation}
     * @memberof RateRequestShipment
     */
    FRSPaymentInformation?: ShipmentFRSPaymentInformation;
    /**
     *
     * @type {ShipmentFreightShipmentInformation}
     * @memberof RateRequestShipment
     */
    FreightShipmentInformation?: ShipmentFreightShipmentInformation;
    /**
     * Goods Not In Free Circulation indicator.  This is an empty tag, any value inside is ignored. This indicator is invalid for a package type of UPS Letter and DocumentsOnly.
     * @type {string}
     * @memberof RateRequestShipment
     */
    GoodsNotInFreeCirculationIndicator?: string;
    /**
     *
     * @type {ShipmentService}
     * @memberof RateRequestShipment
     */
    Service?: ShipmentService;
    /**
     * Total number of pieces in all pallets. Required for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.
     * @type {string}
     * @memberof RateRequestShipment
     */
    NumOfPieces?: string;
    /**
     *
     * @type {ShipmentShipmentTotalWeight}
     * @memberof RateRequestShipment
     */
    ShipmentTotalWeight?: ShipmentShipmentTotalWeight;
    /**
     * Valid values are Document and Non-document. If the indicator is present then the value is Document else Non-Document. Note: Not applicable for FRS rating  requests.  Empty Tag.
     * @type {string}
     * @memberof RateRequestShipment
     */
    DocumentsOnlyIndicator?: string;
    /**
     *
     * @type {Array<ShipmentPackage>}
     * @memberof RateRequestShipment
     */
    Package: Array<ShipmentPackage>;
    /**
     *
     * @type {ShipmentShipmentServiceOptions}
     * @memberof RateRequestShipment
     */
    ShipmentServiceOptions?: ShipmentShipmentServiceOptions;
    /**
     *
     * @type {ShipmentShipmentRatingOptions}
     * @memberof RateRequestShipment
     */
    ShipmentRatingOptions?: ShipmentShipmentRatingOptions;
    /**
     *
     * @type {ShipmentInvoiceLineTotal}
     * @memberof RateRequestShipment
     */
    InvoiceLineTotal?: ShipmentInvoiceLineTotal;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. RatingMethodRequestedIndicator is an indicator. If present, Billable Weight Calculation method and Rating Method information would be returned in response.
     * @type {string}
     * @memberof RateRequestShipment
     */
    RatingMethodRequestedIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. TaxInformationIndicator is an indicator.   The Tax related information includes any type of Taxes, corresponding Monetary Values, Total Charges with Taxes and disclaimers (if applicable) would be returned in response.  If present, any taxes that may be applicable to a shipment would be returned in response.   If this indicator is requested with NegotiatedRatesIndicator, Tax related information, if applicable, would be returned only for Negotiated Rates and not for Published Rates.
     * @type {string}
     * @memberof RateRequestShipment
     */
    TaxInformationIndicator?: string;
    /**
     *
     * @type {ShipmentPromotionalDiscountInformation}
     * @memberof RateRequestShipment
     */
    PromotionalDiscountInformation?: ShipmentPromotionalDiscountInformation;
    /**
     *
     * @type {ShipmentDeliveryTimeInformation}
     * @memberof RateRequestShipment
     */
    DeliveryTimeInformation?: ShipmentDeliveryTimeInformation;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. MasterCartonIndicator is an indicator and presence implies that shipment is Master Carton type.  If present, the shipment will be rated as a Master Carton Type. If this indicator is requested with NegotiatedRatesIndicator, rates would be returned only for Negotiated Rates and not for Published Rates.
     * @type {string}
     * @memberof RateRequestShipment
     */
    MasterCartonIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. WWEShipmentIndicator is an indicator and presence implies that WWE service details requested for RequestOption=Shop or  RequestOption=Shoptimeintransit  RequestOption=Shop or  RequestOption=Shoptimeintransit
     * @type {string}
     * @memberof RateRequestShipment
     */
    WWEShipmentIndicator?: string;
}
/**
 * Rate Response Container.
 * @export
 * @interface RateResponse
 */
export interface RateResponse {
    /**
     *
     * @type {RateResponseResponse}
     * @memberof RateResponse
     */
    Response: RateResponseResponse;
    /**
     *
     * @type {Array<RateResponseRatedShipment>}
     * @memberof RateResponse
     */
    RatedShipment: Array<RateResponseRatedShipment>;
}
/**
 * RatedShipment Container.
 * @export
 * @interface RateResponseRatedShipment
 */
export interface RateResponseRatedShipment {
    /**
     *
     * @type {Array<RatedShipmentDisclaimer>}
     * @memberof RateResponseRatedShipment
     */
    Disclaimer?: Array<RatedShipmentDisclaimer>;
    /**
     *
     * @type {RatedShipmentService}
     * @memberof RateResponseRatedShipment
     */
    Service: RatedShipmentService;
    /**
     * Rate Type with which Shipment is rated. Possible RateChart values for different regions will be:  US 48 origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.  Alaska/Hawaii origin: 1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.   All Other origins: 1 � Rates  5 - Regional Rates  6 - General List Rates.  3 and 4 do not apply
     * @type {string}
     * @memberof RateResponseRatedShipment
     */
    RateChart?: string;
    /**
     *
     * @type {Array<RatedShipmentRatedShipmentAlert>}
     * @memberof RateResponseRatedShipment
     */
    RatedShipmentAlert?: Array<RatedShipmentRatedShipmentAlert>;
    /**
     * Indicates whether the billable weight calculation method is utilized at the package or shipment level.  This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Possible values: 01 = Shipment Billable Weight 02 = Package Billable Weight
     * @type {string}
     * @memberof RateResponseRatedShipment
     */
    BillableWeightCalculationMethod?: string;
    /**
     * Indicates whether the Shipment was rated at the shipment-level or the package-level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Possible values: 01 = Shipment level 02 = Package level
     * @type {string}
     * @memberof RateResponseRatedShipment
     */
    RatingMethod?: string;
    /**
     *
     * @type {RatedShipmentBillingWeight}
     * @memberof RateResponseRatedShipment
     */
    BillingWeight: RatedShipmentBillingWeight;
    /**
     *
     * @type {RatedShipmentTransportationCharges}
     * @memberof RateResponseRatedShipment
     */
    TransportationCharges: RatedShipmentTransportationCharges;
    /**
     *
     * @type {RatedShipmentBaseServiceCharge}
     * @memberof RateResponseRatedShipment
     */
    BaseServiceCharge?: RatedShipmentBaseServiceCharge;
    /**
     *
     * @type {Array<RatedShipmentItemizedCharges>}
     * @memberof RateResponseRatedShipment
     */
    ItemizedCharges?: Array<RatedShipmentItemizedCharges>;
    /**
     *
     * @type {RatedShipmentFRSShipmentData}
     * @memberof RateResponseRatedShipment
     */
    FRSShipmentData?: RatedShipmentFRSShipmentData;
    /**
     *
     * @type {RatedShipmentServiceOptionsCharges}
     * @memberof RateResponseRatedShipment
     */
    ServiceOptionsCharges: RatedShipmentServiceOptionsCharges;
    /**
     *
     * @type {Array<RatedShipmentTaxCharges>}
     * @memberof RateResponseRatedShipment
     */
    TaxCharges?: Array<RatedShipmentTaxCharges>;
    /**
     *
     * @type {RatedShipmentTotalCharges}
     * @memberof RateResponseRatedShipment
     */
    TotalCharges: RatedShipmentTotalCharges;
    /**
     *
     * @type {RatedShipmentTotalChargesWithTaxes}
     * @memberof RateResponseRatedShipment
     */
    TotalChargesWithTaxes?: RatedShipmentTotalChargesWithTaxes;
    /**
     *
     * @type {RatedShipmentNegotiatedRateCharges}
     * @memberof RateResponseRatedShipment
     */
    NegotiatedRateCharges?: RatedShipmentNegotiatedRateCharges;
    /**
     *
     * @type {Array<RatedShipmentRatedPackage>}
     * @memberof RateResponseRatedShipment
     */
    RatedPackage: Array<RatedShipmentRatedPackage>;
    /**
     *
     * @type {RatedShipmentTimeInTransit}
     * @memberof RateResponseRatedShipment
     */
    TimeInTransit?: RatedShipmentTimeInTransit;
    /**
     * The rated shipments scheduled delivery date, ScheduledDeliveryDate returned only when Subversion of 2205 was sent in the request and the customer has the specific contract.
     * @type {string}
     * @memberof RateResponseRatedShipment
     */
    ScheduledDeliveryDate?: string;
    /**
     * Informational only
     * @type {string}
     * @memberof RateResponseRatedShipment
     */
    RoarRatedIndicator?: string;
}
/**
 * Response Container.
 * @export
 * @interface RateResponseResponse
 */
export interface RateResponseResponse {
    /**
     *
     * @type {ResponseResponseStatus}
     * @memberof RateResponseResponse
     */
    ResponseStatus: ResponseResponseStatus;
    /**
     *
     * @type {ResponseAlert}
     * @memberof RateResponseResponse
     */
    Alert?: ResponseAlert;
    /**
     *
     * @type {ResponseAlertDetail}
     * @memberof RateResponseResponse
     */
    AlertDetail?: ResponseAlertDetail;
    /**
     *
     * @type {ResponseTransactionReference}
     * @memberof RateResponseResponse
     */
    TransactionReference?: ResponseTransactionReference;
}
/**
 * The container for Accessorial indicators. This information would be returned only if ItemizedChargesRequested was present during Rate request. This is valid only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service request with Dry Ice or Oversize Pallet and SubVersion greater than or equal to 1707.  This is valid only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Middday Service.
 * @export
 * @interface RatedPackageAccessorial
 */
export interface RatedPackageAccessorial {
    /**
     * Code for Accessorial Indicator.
     * @type {string}
     * @memberof RatedPackageAccessorial
     */
    Code: string;
    /**
     * Description for Accessorial Indicator.
     * @type {string}
     * @memberof RatedPackageAccessorial
     */
    Description?: string;
}
/**
 * Base Service Charge Container.  These charges would be returned only when subversion is greater than or equal to 1701
 * @export
 * @interface RatedPackageBaseServiceCharge
 */
export interface RatedPackageBaseServiceCharge {
    /**
     * The IATA currency code associated with the base service charge costs for the shipment.
     * @type {string}
     * @memberof RatedPackageBaseServiceCharge
     */
    CurrencyCode: string;
    /**
     * The base value of the specific service for the shipment. This is equal to transportation charges - fuel surcharges.
     * @type {string}
     * @memberof RatedPackageBaseServiceCharge
     */
    MonetaryValue: string;
}
/**
 * Billing Weight Container.
 * @export
 * @interface RatedPackageBillingWeight
 */
export interface RatedPackageBillingWeight {
    /**
     *
     * @type {BillingWeightUnitOfMeasurement}
     * @memberof RatedPackageBillingWeight
     */
    UnitOfMeasurement: BillingWeightUnitOfMeasurement;
    /**
     * The value for the billable weight associated with the package.  When using a negotiated divisor different from the published UPS divisor (139 for inches and 5,000 for cm), the weight returned is based on the published divisor. Rates, however, are based on the negotiated divisor.
     * @type {string}
     * @memberof RatedPackageBillingWeight
     */
    Weight: string;
}
/**
 * Itemized Charges are returned only when the subversion element is present and greater than or equal to '1607'.  These charges would be returned only when subversion is greater than or equal to 1607.
 * @export
 * @interface RatedPackageItemizedCharges
 */
export interface RatedPackageItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof RatedPackageItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof RatedPackageItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof RatedPackageItemizedCharges
     */
    CurrencyCode: string;
    /**
     * The value for Itemized Charge costs associated with the shipment.
     * @type {string}
     * @memberof RatedPackageItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of Itemized Charge type.
     * @type {string}
     * @memberof RatedPackageItemizedCharges
     */
    SubType?: string;
}
/**
 * Negotiated Rates container.  These charges would be returned only when - 1) subversion is greater than or equal to 1607 2) if negotiated rates were requested for GFP shipments and account number is eligible to receive negotiated rates.
 * @export
 * @interface RatedPackageNegotiatedCharges
 */
export interface RatedPackageNegotiatedCharges {
    /**
     *
     * @type {Array<NegotiatedChargesItemizedCharges>}
     * @memberof RatedPackageNegotiatedCharges
     */
    ItemizedCharges?: Array<NegotiatedChargesItemizedCharges>;
}
/**
 * Container for returned Rate Modifier information. Applies only if SubVersion is 2205 or greater.
 * @export
 * @interface RatedPackageRateModifier
 */
export interface RatedPackageRateModifier {
    /**
     * Rate Modifier Type. Example: \"ORM\". Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof RatedPackageRateModifier
     */
    ModifierType: string;
    /**
     * Rate Modifier Description. Example: \"Origin Modifier\". Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof RatedPackageRateModifier
     */
    ModifierDesc: string;
    /**
     * Rate Currency Code. Example: \"USD\"
     * @type {string}
     * @memberof RatedPackageRateModifier
     */
    CurrencyCode: string;
    /**
     * Amount. Example: \"-1.00\",\"0.25\". It contains positive or negative values. Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof RatedPackageRateModifier
     */
    Amount: string;
}
/**
 * Service Options Charges Container.
 * @export
 * @interface RatedPackageServiceOptionsCharges
 */
export interface RatedPackageServiceOptionsCharges {
    /**
     * The IATA currency code associated with the accessorial charges for the package.
     * @type {string}
     * @memberof RatedPackageServiceOptionsCharges
     */
    CurrencyCode: string;
    /**
     * The value for the accessorial charges associated with the package.
     * @type {string}
     * @memberof RatedPackageServiceOptionsCharges
     */
    MonetaryValue: string;
}
/**
 * Total Charges Container.
 * @export
 * @interface RatedPackageTotalCharges
 */
export interface RatedPackageTotalCharges {
    /**
     * The IATA currency code associated with the total charges for the package.
     * @type {string}
     * @memberof RatedPackageTotalCharges
     */
    CurrencyCode: string;
    /**
     * The value for the total charges associated with the package.
     * @type {string}
     * @memberof RatedPackageTotalCharges
     */
    MonetaryValue: string;
}
/**
 * Transportation Charges Container.
 * @export
 * @interface RatedPackageTransportationCharges
 */
export interface RatedPackageTransportationCharges {
    /**
     * The IATA currency code associated with the transportation costs for the package.
     * @type {string}
     * @memberof RatedPackageTransportationCharges
     */
    CurrencyCode: string;
    /**
     * The value for the transportation costs associated with the package.
     * @type {string}
     * @memberof RatedPackageTransportationCharges
     */
    MonetaryValue: string;
}
/**
 * The weight of the package in the rated Package.
 * @export
 */
export type RatedPackageWeight = string;
/**
 * The rated shipments warning code returned by the system.
 * @export
 */
export type RatedShipmentAlertCode = string;
/**
 * The rated shipment warning Description returned by the system.
 * @export
 */
export type RatedShipmentAlertDescription = string;
/**
 * Base Service Charge Container.  These charges would be returned only when subversion is greater than or equal to 1701
 * @export
 * @interface RatedShipmentBaseServiceCharge
 */
export interface RatedShipmentBaseServiceCharge {
    /**
     * The IATA currency code associated with the base service charge costs for the shipment.
     * @type {string}
     * @memberof RatedShipmentBaseServiceCharge
     */
    CurrencyCode: string;
    /**
     * The base value of the specific service for the shipment. This is equal to transportation charges - fuel surcharges.
     * @type {string}
     * @memberof RatedShipmentBaseServiceCharge
     */
    MonetaryValue: string;
}
/**
 * Indicates whether the billable weight calculation method is utilized at the package or shipment level.  This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Possible values: 01 = Shipment Billable Weight 02 = Package Billable Weight
 * @export
 */
export type RatedShipmentBillableWeightCalculationMethod = string;
/**
 * Billing Weight Container.
 * @export
 * @interface RatedShipmentBillingWeight
 */
export interface RatedShipmentBillingWeight {
    /**
     *
     * @type {BillingWeightUnitOfMeasurement}
     * @memberof RatedShipmentBillingWeight
     */
    UnitOfMeasurement: BillingWeightUnitOfMeasurement;
    /**
     * The value for the billable weight associated with the package.  When using a negotiated divisor different from the published UPS divisor (139 for inches and 5,000 for cm), the weight returned is based on the published divisor. Rates, however, are based on the negotiated divisor.
     * @type {string}
     * @memberof RatedShipmentBillingWeight
     */
    Weight: string;
}
/**
 * Disclaimer is used to provide more information to the shipper regarding the processed shipment. It is used to notify the shipper about possible taxes and duties that might have been added or might apply to the shipment. Refer to the Appendix for various disclaimers. This field may be returned only if TaxInformationIndicator is present in the request.
 * @export
 * @interface RatedShipmentDisclaimer
 */
export interface RatedShipmentDisclaimer {
    /**
     * Code representing type of Disclaimer. Refer to the Appendix for possible code values.
     * @type {string}
     * @memberof RatedShipmentDisclaimer
     */
    Code: string;
    /**
     * Disclaimer description. Please refer to Appendix for possible descriptions.
     * @type {string}
     * @memberof RatedShipmentDisclaimer
     */
    Description: string;
}
/**
 * FRSShipmentData container.  Only returned when the FRSShipmentIIndicator is used. UPS Ground Freight Pricing Only.
 * @export
 * @interface RatedShipmentFRSShipmentData
 */
export interface RatedShipmentFRSShipmentData {
    /**
     *
     * @type {FRSShipmentDataTransportationCharges}
     * @memberof RatedShipmentFRSShipmentData
     */
    TransportationCharges: FRSShipmentDataTransportationCharges;
    /**
     *
     * @type {FRSShipmentDataFreightDensityRate}
     * @memberof RatedShipmentFRSShipmentData
     */
    FreightDensityRate?: FRSShipmentDataFreightDensityRate;
    /**
     *
     * @type {FRSShipmentDataHandlingUnits}
     * @memberof RatedShipmentFRSShipmentData
     */
    HandlingUnits?: FRSShipmentDataHandlingUnits;
}
/**
 * Itemized Charges are returned only when the subversion element is present and greater than or equal to '1601'.  These charges would be returned only when subversion is greater than or equal to 1601
 * @export
 * @interface RatedShipmentItemizedCharges
 */
export interface RatedShipmentItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof RatedShipmentItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof RatedShipmentItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof RatedShipmentItemizedCharges
     */
    CurrencyCode: string;
    /**
     * The value for Itemized Charge costs associated with the shipment.
     * @type {string}
     * @memberof RatedShipmentItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of Itemized Charge type.
     * @type {string}
     * @memberof RatedShipmentItemizedCharges
     */
    SubType?: string;
}
/**
 * Negotiated Rate Charges Container.  For tiered rates and promotional discounts, if a particular shipment based on zone, origin, destination or even shipment size doesn't qualify for the existing discount then no negotiated rates container will be returned. Published rates will be the applicable rate.
 * @export
 * @interface RatedShipmentNegotiatedRateCharges
 */
export interface RatedShipmentNegotiatedRateCharges {
    /**
     *
     * @type {Array<NegotiatedRateChargesItemizedCharges>}
     * @memberof RatedShipmentNegotiatedRateCharges
     */
    ItemizedCharges?: Array<NegotiatedRateChargesItemizedCharges>;
    /**
     *
     * @type {Array<NegotiatedRateChargesTaxCharges>}
     * @memberof RatedShipmentNegotiatedRateCharges
     */
    TaxCharges?: Array<NegotiatedRateChargesTaxCharges>;
    /**
     *
     * @type {NegotiatedRateChargesTotalCharge}
     * @memberof RatedShipmentNegotiatedRateCharges
     */
    TotalCharge: NegotiatedRateChargesTotalCharge;
    /**
     *
     * @type {NegotiatedRateChargesTotalChargesWithTaxes}
     * @memberof RatedShipmentNegotiatedRateCharges
     */
    TotalChargesWithTaxes?: NegotiatedRateChargesTotalChargesWithTaxes;
}
/**
 * Rate Type with which Shipment is rated. Possible RateChart values for different regions will be:  US 48 origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.  Alaska/Hawaii origin: 1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.   All Other origins: 1 � Rates  5 - Regional Rates  6 - General List Rates.  3 and 4 do not apply
 * @export
 */
export type RatedShipmentRateChart = string;
/**
 * Rated Package Container.
 * @export
 * @interface RatedShipmentRatedPackage
 */
export interface RatedShipmentRatedPackage {
    /**
     *
     * @type {RatedPackageBaseServiceCharge}
     * @memberof RatedShipmentRatedPackage
     */
    BaseServiceCharge?: RatedPackageBaseServiceCharge;
    /**
     *
     * @type {RatedPackageTransportationCharges}
     * @memberof RatedShipmentRatedPackage
     */
    TransportationCharges?: RatedPackageTransportationCharges;
    /**
     *
     * @type {RatedPackageServiceOptionsCharges}
     * @memberof RatedShipmentRatedPackage
     */
    ServiceOptionsCharges?: RatedPackageServiceOptionsCharges;
    /**
     *
     * @type {RatedPackageTotalCharges}
     * @memberof RatedShipmentRatedPackage
     */
    TotalCharges?: RatedPackageTotalCharges;
    /**
     * The weight of the package in the rated Package.
     * @type {string}
     * @memberof RatedShipmentRatedPackage
     */
    Weight?: string;
    /**
     *
     * @type {RatedPackageBillingWeight}
     * @memberof RatedShipmentRatedPackage
     */
    BillingWeight?: RatedPackageBillingWeight;
    /**
     *
     * @type {Array<RatedPackageAccessorial>}
     * @memberof RatedShipmentRatedPackage
     */
    Accessorial?: Array<RatedPackageAccessorial>;
    /**
     *
     * @type {Array<RatedPackageItemizedCharges>}
     * @memberof RatedShipmentRatedPackage
     */
    ItemizedCharges?: Array<RatedPackageItemizedCharges>;
    /**
     *
     * @type {RatedPackageNegotiatedCharges}
     * @memberof RatedShipmentRatedPackage
     */
    NegotiatedCharges?: RatedPackageNegotiatedCharges;
    /**
     *
     * @type {RatedPackageRateModifier}
     * @memberof RatedShipmentRatedPackage
     */
    RateModifier?: RatedPackageRateModifier;
}
/**
 * Rated Shipment Alert container. There can be zero to many RatedShipmentAlert containers with code and description.
 * @export
 * @interface RatedShipmentRatedShipmentAlert
 */
export interface RatedShipmentRatedShipmentAlert {
    /**
     * The rated shipments warning code returned by the system.
     * @type {string}
     * @memberof RatedShipmentRatedShipmentAlert
     */
    Code: string;
    /**
     * The rated shipment warning Description returned by the system.
     * @type {string}
     * @memberof RatedShipmentRatedShipmentAlert
     */
    Description: string;
}
/**
 * Indicates whether the Shipment was rated at the shipment-level or the package-level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Possible values: 01 = Shipment level 02 = Package level
 * @export
 */
export type RatedShipmentRatingMethod = string;
/**
 * Service Container.
 * @export
 * @interface RatedShipmentService
 */
export interface RatedShipmentService {
    /**
     * The UPS service code.
     * @type {string}
     * @memberof RatedShipmentService
     */
    Code: string;
    /**
     * Optional. Description of service. Example, UPS Next Day Air, UPS Ground etc, as referenced by the Service Code.
     * @type {string}
     * @memberof RatedShipmentService
     */
    Description?: string;
}
/**
 * Service Options Charges Container.
 * @export
 * @interface RatedShipmentServiceOptionsCharges
 */
export interface RatedShipmentServiceOptionsCharges {
    /**
     * The IATA currency code associated with the accessorial charges for the package.
     * @type {string}
     * @memberof RatedShipmentServiceOptionsCharges
     */
    CurrencyCode: string;
    /**
     * The value for the accessorial charges associated with the package.
     * @type {string}
     * @memberof RatedShipmentServiceOptionsCharges
     */
    MonetaryValue: string;
}
/**
 * TaxCharges container are returned only when TaxInformationIndicator is present in request and when Negotiated Rates are not applicable. TaxCharges container contains Tax information for a given shipment.
 * @export
 * @interface RatedShipmentTaxCharges
 */
export interface RatedShipmentTaxCharges {
    /**
     * Tax Type code. The code represents the type of Tax applied to a shipment. Please refer to Appendix I for possible Tax Type codes.
     * @type {string}
     * @memberof RatedShipmentTaxCharges
     */
    Type: string;
    /**
     * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof RatedShipmentTaxCharges
     */
    MonetaryValue: string;
}
/**
 * Container for returned Time in Transit information.  Will only be returned if request option was either \"ratetimeintransit\" or \"shoptimeintransit\" and DeliveryTimeInformation container was present in request.
 * @export
 * @interface RatedShipmentTimeInTransit
 */
export interface RatedShipmentTimeInTransit {
    /**
     * The date the user requests UPS to pickup the package from the origin. Format: YYYYMMDD. In the event this Pickup date differs from the Pickup date in the Estimated Arrival Container, a warning will be returned.  In the event this Pickup date differs from the Pickup date in the Estimated Arrival Container, a warning will be returned.
     * @type {string}
     * @memberof RatedShipmentTimeInTransit
     */
    PickupDate: string;
    /**
     * If the indicator is present then the shipment was processed as Document Only.
     * @type {string}
     * @memberof RatedShipmentTimeInTransit
     */
    DocumentsOnlyIndicator?: string;
    /**
     * Package bill type for the shipment. Valid values: 02 - Document only  03 - Non-Document 04 - Pallet
     * @type {string}
     * @memberof RatedShipmentTimeInTransit
     */
    PackageBillType?: string;
    /**
     *
     * @type {TimeInTransitServiceSummary}
     * @memberof RatedShipmentTimeInTransit
     */
    ServiceSummary: TimeInTransitServiceSummary;
    /**
     * Required output for International requests. If Documents indicator is set for Non-document a duty is automatically calculated. The possible values to be returned are:  01 - Dutiable 02 - Non-Dutiable 03 - Low-value 04 - Courier Remission 05 - Gift 06 - Military 07 - Exception 08 - Line Release 09 - Section 321 low value.
     * @type {string}
     * @memberof RatedShipmentTimeInTransit
     */
    AutoDutyCode?: string;
    /**
     * The Disclaimer is provided based upon the origin and destination country or territory codes provided in the request document. The possible disclaimers that can be returned are available in the Service Guaranteed Disclaimers table.
     * @type {string}
     * @memberof RatedShipmentTimeInTransit
     */
    Disclaimer?: string;
}
/**
 * Total Charges Container.
 * @export
 * @interface RatedShipmentTotalCharges
 */
export interface RatedShipmentTotalCharges {
    /**
     * The IATA currency code associated with the total charges for the package.
     * @type {string}
     * @memberof RatedShipmentTotalCharges
     */
    CurrencyCode: string;
    /**
     * The value for the total charges associated with the package.
     * @type {string}
     * @memberof RatedShipmentTotalCharges
     */
    MonetaryValue: string;
}
/**
 * TotalChargesWithTaxes container would be returned only if TaxInformationIndicator is present in request and when Negotiated Rates are not applicable. TotalChargesWithTaxes contains total charges including total taxes applied to a shipment.
 * @export
 * @interface RatedShipmentTotalChargesWithTaxes
 */
export interface RatedShipmentTotalChargesWithTaxes {
    /**
     * TotalChargesWithTaxes currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof RatedShipmentTotalChargesWithTaxes
     */
    CurrencyCode: string;
    /**
     * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof RatedShipmentTotalChargesWithTaxes
     */
    MonetaryValue: string;
}
/**
 * Transportation Charges Container.
 * @export
 * @interface RatedShipmentTransportationCharges
 */
export interface RatedShipmentTransportationCharges {
    /**
     * The IATA currency code associated with the transportation costs for the package.
     * @type {string}
     * @memberof RatedShipmentTransportationCharges
     */
    CurrencyCode: string;
    /**
     * The value for the transportation costs associated with the package.
     * @type {string}
     * @memberof RatedShipmentTransportationCharges
     */
    MonetaryValue: string;
}
/**
 * Used to define the request type.  Valid Values: Rate = The server rates (The default Request option is Rate if a Request Option is not provided).  Shop = The server validates the shipment, and returns rates for all UPS products from the ShipFrom to the ShipTo addresses.  Ratetimeintransit = The server rates with transit time information Shoptimeintransit = The server validates the shipment, and returns rates and transit times for all UPS products from the ShipFrom to the ShipTo addresses. Rate is the only valid request option for UPS Ground Freight Pricing requests.
 * @export
 */
export type RequestRequestOption = string;
/**
 * Indicates Rate API to display the new release features in Rate API response based on Rate release. See the What's New section for the latest Rate release. Supported values: 1601, 1607, 1701, 1707, 2108
 * @export
 */
export type RequestSubVersion = string;
/**
 * TransactionReference identifies transactions between client and server.  N/A
 * @export
 * @interface RequestTransactionReference
 */
export interface RequestTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof RequestTransactionReference
     */
    CustomerContext?: string;
}
/**
 * Alert container. There can be zero to many alert containers with code and description.
 * @export
 * @interface ResponseAlert
 */
export interface ResponseAlert {
    /**
     * Warning code returned by the system.
     * @type {string}
     * @memberof ResponseAlert
     */
    Code: string;
    /**
     * Warning messages returned by the system.
     * @type {string}
     * @memberof ResponseAlert
     */
    Description: string;
}
/**
 * Alert Detail Container.  Currently applies to and returned only for request containing HazMat and SubVersion greater than or equal to 1701.
 * @export
 * @interface ResponseAlertDetail
 */
export interface ResponseAlertDetail {
    /**
     * Warning code returned by the system.
     * @type {string}
     * @memberof ResponseAlertDetail
     */
    Code: string;
    /**
     * Warning messages returned by the system.
     * @type {string}
     * @memberof ResponseAlertDetail
     */
    Description: string;
    /**
     *
     * @type {AlertDetailElementLevelInformation}
     * @memberof ResponseAlertDetail
     */
    ElementLevelInformation?: AlertDetailElementLevelInformation;
}
/**
 * Response Status Container.
 * @export
 * @interface ResponseResponseStatus
 */
export interface ResponseResponseStatus {
    /**
     * Identifies the success or failure of the transaction.   1 = Successful
     * @type {string}
     * @memberof ResponseResponseStatus
     */
    Code: string;
    /**
     * Describes Response Status Code.  Returns text of \"Success\" for a valid request.
     * @type {string}
     * @memberof ResponseResponseStatus
     */
    Description: string;
}
/**
 * Identifies the success or failure of the transaction.   1 = Successful
 * @export
 */
export type ResponseStatusCode = string;
/**
 * Describes Response Status Code.  Returns text of \"Success\" for a valid request.
 * @export
 */
export type ResponseStatusDescription = string;
/**
 * Transaction Reference Container.
 * @export
 * @interface ResponseTransactionReference
 */
export interface ResponseTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof ResponseTransactionReference
     */
    CustomerContext?: string;
}
/**
 * This field is a flag to indicate if the package has Alcohol. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesAlcoholicBeveragesIndicator = string;
/**
 * This field is a flag to indicate if the package has Biological substances. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments. Lane check will happen based on postal code/ city.
 * @export
 */
export type RestrictedArticlesDiagnosticSpecimensIndicator = string;
/**
 * This field is a flag to indicate if the package has E-Cigarettes. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesECigarettesIndicator = string;
/**
 * This field is a flag to indicate if the package has Hemp/CBD. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesHempCBDIndicator = string;
/**
 * This field is a flag to indicate if the package has Perishables. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesPerishablesIndicator = string;
/**
 * This field is a flag to indicate if the package has Plants. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesPlantsIndicator = string;
/**
 * This field is a flag to indicate if the package has Seeds. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesSeedsIndicator = string;
/**
 * This field is a flag to indicate if the package has Special Exceptions Restricted Materials. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesSpecialExceptionsIndicator = string;
/**
 * This field is a flag to indicate if the package has Tobacco. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type RestrictedArticlesTobaccoIndicator = string;
/**
 * Return contract Service code. Valid Code \"01\" - Heavy Goods. If 01 will return Heavy Goods service transit times for a given origin and destination (if applicable)  Invalid Code will be ignore.
 * @export
 */
export type ReturnContractServicesCode = string;
/**
 * Return contract service Description
 * @export
 */
export type ReturnContractServicesDescription = string;
/**
 * Code for type of Return shipment.  Valid values are: '2' = UPS Print and Mail Return Label  '3' =UPS One-Attempt Return Label '5' = UPS Three Attempt Return Label '8' = UPS Electronic Return Label '9' = UPS Print Return Label '10' = UPS Exchange Print Return Label                            '11' = UPS Pack & Collect Service 1-Attempt Box 1  '12' = UPS Pack & Collect Service 1-Attempt Box 2  '13' = UPS Pack & Collect Service 1-Attempt Box 3  '14' = UPS Pack & Collect Service 1-Attempt Box 4  '15' = UPS Pack & Collect Service 1-Attempt Box 5  '16' = UPS Pack & Collect Service 3-Attempt Box 1  '17' = UPS Pack & Collect Service 3-Attempt Box 2  '18' = UPS Pack & Collect Service 3-Attempt Box 3  '19' = UPS Pack & Collect Service 3-Attempt Box 4  '20' = UPS Pack & Collect Service 3-Attempt Box 5   10 = UPS Exchange Print Return Label and 5 = UPS Three Attempt Return Label are not valid for UPS WorldWide Express Freight and UPS Worldwide Express Freight Midday Services.   3 = UPS One-Attempt Return Label is not valid return service with UPS Premium Care accessorial.
 * @export
 */
export type ReturnServiceCode = string;
/**
 * Description for type of Return Service.
 * @export
 */
export type ReturnServiceDescription = string;
/**
 * The UPS service code.
 * @export
 */
export type ServiceCode = string;
/**
 * Optional. Description of service. Example, UPS Next Day Air, UPS Ground etc, as referenced by the Service Code.
 * @export
 */
export type ServiceDescription = string;
/**
 * The IATA currency code associated with the accessorial charges for the package.
 * @export
 */
export type ServiceOptionsChargesCurrencyCode = string;
/**
 * The value for the accessorial charges associated with the package.
 * @export
 */
export type ServiceOptionsChargesMonetaryValue = string;
/**
 * The Disclaimer is provided based upon the origin and destination country or territory codes provided in the request document. The disclaimer is returned as a conditional statement to the validity of the service being guaranteed. The possible disclaimers that can be returned are available in the Service Guaranteed Disclaimers table.
 * @export
 */
export type ServiceSummaryDisclaimer = string;
/**
 * Container for the Time-In-Transit arrival information by service
 * @export
 * @interface ServiceSummaryEstimatedArrival
 */
export interface ServiceSummaryEstimatedArrival {
    /**
     *
     * @type {EstimatedArrivalArrival}
     * @memberof ServiceSummaryEstimatedArrival
     */
    Arrival: EstimatedArrivalArrival;
    /**
     * Number of business days from Origin to Destination Locations.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    BusinessDaysInTransit: string;
    /**
     *
     * @type {EstimatedArrivalPickup}
     * @memberof ServiceSummaryEstimatedArrival
     */
    Pickup: EstimatedArrivalPickup;
    /**
     * Day of week for arrival. Valid values are:  MON TUE WED THU FRI SAT
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    DayOfWeek: string;
    /**
     * Customer Service call time. Returned for domestic as well as international requests.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    CustomerCenterCutoff?: string;
    /**
     * Number of days delayed at customs. Returned for International requests.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    DelayCount?: string;
    /**
     * Number of National holidays during transit. Returned for International requests.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    HolidayCount?: string;
    /**
     * Number of rest days, i.e. non movement. Returned for International requests.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    RestDays?: string;
    /**
     * The total number of days in transit from one location to the next. Returned for International requests.
     * @type {string}
     * @memberof ServiceSummaryEstimatedArrival
     */
    TotalTransitDays?: string;
}
/**
 * Empty Tag. Indicates whether the service will be guaranteed or not.  Required for International Requests.
 * @export
 */
export type ServiceSummaryGuaranteedIndicator = string;
/**
 * Saturday delivery information for a service. Values are 1 - Saturday Delivery Available with additional charges  0 - Saturday Delivery not available or no additional charge, please check Delivery Date to confirm if the Delivery will be Saturday  Please see Saturday Delivery business rules section for more information.
 * @export
 */
export type ServiceSummarySaturdayDelivery = string;
/**
 * Saturday delivery disclaimer message.
 * @export
 */
export type ServiceSummarySaturdayDeliveryDisclaimer = string;
/**
 * Container for the the UPS service selected for a shipment.
 * @export
 * @interface ServiceSummaryService
 */
export interface ServiceSummaryService {
    /**
     * Optional. Description of service. Example, UPS Next Day Air, UPS Ground etc, as referenced by the Service Code.
     * @type {string}
     * @memberof ServiceSummaryService
     */
    Description?: string;
}
/**
 * Sunday delivery information for a service. Values are 1 - Sunday Delivery Available with additional charges  0 - Sunday Delivery not available or no additional charge, please check Delivery Date to confirm if the Delivery will be Sunday  Please see Saturday Delivery business rules section for more information.   Applies only if SubVersion is greater than or equal to 2007
 * @export
 */
export type ServiceSummarySundayDelivery = string;
/**
 * Sunday delivery disclaimer message.  Applies only if SubVersion is greater than or equal to 2007
 * @export
 */
export type ServiceSummarySundayDeliveryDisclaimer = string;
/**
 * Address container for Ship From.  Address Container
 * @export
 * @interface ShipFromAddress
 */
export interface ShipFromAddress {
    /**
     * The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.
     * @type {string}
     * @memberof ShipFromAddress
     */
    AddressLine: string;
    /**
     * UPS Access Point city.
     * @type {string}
     * @memberof ShipFromAddress
     */
    City?: string;
    /**
     * UPS Access Point State or Province code.
     * @type {string}
     * @memberof ShipFromAddress
     */
    StateProvinceCode?: string;
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof ShipFromAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof ShipFromAddress
     */
    CountryCode: string;
}
/**
 * Origin attention name.  Length is not validated.
 * @export
 */
export type ShipFromAttentionName = string;
/**
 * Origin attention name or company name.  Length is not validated.
 * @export
 */
export type ShipFromName = string;
/**
 * Address Container.  N/A
 * @export
 * @interface ShipToAddress
 */
export interface ShipToAddress {
    /**
     * The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.
     * @type {string}
     * @memberof ShipToAddress
     */
    AddressLine: string;
    /**
     * UPS Access Point city.
     * @type {string}
     * @memberof ShipToAddress
     */
    City?: string;
    /**
     * UPS Access Point State or Province code.
     * @type {string}
     * @memberof ShipToAddress
     */
    StateProvinceCode?: string;
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof ShipToAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof ShipToAddress
     */
    CountryCode: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored.This field is a flag to indicate if the Alternate Delivery location is a residential location.  True if ResidentialAddressIndicator tag exists.  For future use.
     * @type {string}
     * @memberof ShipToAddress
     */
    ResidentialAddressIndicator?: string;
}
/**
 * Destination attention name.  Length is not validated.
 * @export
 */
export type ShipToAttentionName = string;
/**
 * Destination attention name or company name.  Length is not validated.
 * @export
 */
export type ShipToName = string;
/**
 * Alternate Delivery Address container. Applies for deliveries to UPS Access Point� locations.  Required for the following ShipmentIndicationType values: 01 - Hold for Pickup at UPS Access Point� 02 - UPS Access Point� Delivery
 * @export
 * @interface ShipmentAlternateDeliveryAddress
 */
export interface ShipmentAlternateDeliveryAddress {
    /**
     * UPS Access Point� location name.
     * @type {string}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    Name?: string;
    /**
     *
     * @type {AlternateDeliveryAddressAddress}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    Address: AlternateDeliveryAddressAddress;
}
/**
 * Container for the BillReceiver billing option.  This element or its sibling element, BillShipper, BillThirdParty or Consignee Billed, must be present but no more than one can be present. For a return shipment, Bill Receiver is invalid for Transportation charges.
 * @export
 * @interface ShipmentChargeBillReceiver
 */
export interface ShipmentChargeBillReceiver {
    /**
     * The UPS account number.  The account must be a valid UPS account number that is active. For US, PR and CA accounts, the account must be a daily pickup account, an occasional account, a customer B.I.N account, or a dropper shipper account. All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
     * @type {string}
     * @memberof ShipmentChargeBillReceiver
     */
    AccountNumber: string;
    /**
     *
     * @type {BillReceiverAddress}
     * @memberof ShipmentChargeBillReceiver
     */
    Address?: BillReceiverAddress;
}
/**
 * Container for the BillShipper billing option.  This element or its sibling element, BillReceiver, BillThirdParty or ConsigneeBilledIndicator, must be present but no more than one can be present.
 * @export
 * @interface ShipmentChargeBillShipper
 */
export interface ShipmentChargeBillShipper {
    /**
     * UPS account number  Must be the same UPS account number as the one provided in Shipper/ShipperNumber.
     * @type {string}
     * @memberof ShipmentChargeBillShipper
     */
    AccountNumber: string;
}
/**
 * Container for the third party billing option.  This element or its sibling element, BillShipper, BillReceiver or Consignee Billed, must be present but no more than one can be present.
 * @export
 * @interface ShipmentChargeBillThirdParty
 */
export interface ShipmentChargeBillThirdParty {
    /**
     * The UPS account number of the third party shipper.  The account must be a valid UPS account number that is active. For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account, or a drop shipper account. All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
     * @type {string}
     * @memberof ShipmentChargeBillThirdParty
     */
    AccountNumber: string;
    /**
     *
     * @type {BillThirdPartyAddress}
     * @memberof ShipmentChargeBillThirdParty
     */
    Address: BillThirdPartyAddress;
}
/**
 * Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  Empty Tag. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.
 * @export
 */
export type ShipmentChargeConsigneeBilledIndicator = string;
/**
 * Values are 01 = Transportation,� 02 = Duties and Taxes
 * @export
 */
export type ShipmentChargeType = string;
/**
 * Container for requesting Time In Transit Information. Required to view time in transit information.  Required to view any time in transit information.
 * @export
 * @interface ShipmentDeliveryTimeInformation
 */
export interface ShipmentDeliveryTimeInformation {
    /**
     * Valid values are: 02 - Document only  03 - Non-Document 04 - WWEF Pallet 07 - Domestic Pallet If 04 is included, Worldwide Express Freight and UPS Worldwide Express Freight Midday services (if applicable) will be included in the response.
     * @type {string}
     * @memberof ShipmentDeliveryTimeInformation
     */
    PackageBillType: string;
    /**
     *
     * @type {DeliveryTimeInformationPickup}
     * @memberof ShipmentDeliveryTimeInformation
     */
    Pickup?: DeliveryTimeInformationPickup;
    /**
     *
     * @type {Array<DeliveryTimeInformationReturnContractServices>}
     * @memberof ShipmentDeliveryTimeInformation
     */
    ReturnContractServices?: Array<DeliveryTimeInformationReturnContractServices>;
}
/**
 * Valid values are Document and Non-document. If the indicator is present then the value is Document else Non-Document. Note: Not applicable for FRS rating  requests.  Empty Tag.
 * @export
 */
export type ShipmentDocumentsOnlyIndicator = string;
/**
 * UPS Ground Freight Pricing (GFP) Payment Information container.  Required only for GFP and when the FRSIndicator is present.
 * @export
 * @interface ShipmentFRSPaymentInformation
 */
export interface ShipmentFRSPaymentInformation {
    /**
     *
     * @type {FRSPaymentInformationType}
     * @memberof ShipmentFRSPaymentInformation
     */
    Type: FRSPaymentInformationType;
    /**
     * UPS Account Number.
     * @type {string}
     * @memberof ShipmentFRSPaymentInformation
     */
    AccountNumber?: string;
    /**
     *
     * @type {FRSPaymentInformationAddress}
     * @memberof ShipmentFRSPaymentInformation
     */
    Address?: FRSPaymentInformationAddress;
}
/**
 * Container to hold Freight Shipment information.
 * @export
 * @interface ShipmentFreightShipmentInformation
 */
export interface ShipmentFreightShipmentInformation {
    /**
     *
     * @type {FreightShipmentInformationFreightDensityInfo}
     * @memberof ShipmentFreightShipmentInformation
     */
    FreightDensityInfo?: FreightShipmentInformationFreightDensityInfo;
    /**
     * The presence of the tag indicates that the  rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.
     * @type {string}
     * @memberof ShipmentFreightShipmentInformation
     */
    DensityEligibleIndicator?: string;
}
/**
 * Goods Not In Free Circulation indicator.  This is an empty tag, any value inside is ignored. This indicator is invalid for a package type of UPS Letter and DocumentsOnly.
 * @export
 */
export type ShipmentGoodsNotInFreeCirculationIndicator = string;
/**
 * Code for Shipment Indication Type. Valid valuese:  01 - Hold for Pickup at UPS Access Point  02 - UPS Access Point� Delivery
 * @export
 */
export type ShipmentIndicationTypeCode = string;
/**
 * Description for Shipment Indication Type.  Length is not Validated.
 * @export
 */
export type ShipmentIndicationTypeDescription = string;
/**
 * Container to hold InvoiceLineTotal Information.  Required if the shipment is from US/PR Outbound to non US/PR destination with the PackagingType of UPS PAK(04).  Required for international shipments  when using request option \"ratetimeintransit\" or \"shoptimeintransit\".
 * @export
 * @interface ShipmentInvoiceLineTotal
 */
export interface ShipmentInvoiceLineTotal {
    /**
     * Invoice Line Total Currency type. The Currency code should match the origin country's or territory's currency code, otherwise the currency code entered will be ignored.  Note: UPS doesn't support all international currency codes. Please check the developer guides for Supported Currency codes.
     * @type {string}
     * @memberof ShipmentInvoiceLineTotal
     */
    CurrencyCode: string;
    /**
     * Total amount of the invoice accompanying the shipment. Required when the InvoiceLineTotal container exists in the rate request.  Valid values are from 1 to 99999999.
     * @type {string}
     * @memberof ShipmentInvoiceLineTotal
     */
    MonetaryValue: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. MasterCartonIndicator is an indicator and presence implies that shipment is Master Carton type.  If present, the shipment will be rated as a Master Carton Type. If this indicator is requested with NegotiatedRatesIndicator, rates would be returned only for Negotiated Rates and not for Published Rates.
 * @export
 */
export type ShipmentMasterCartonIndicator = string;
/**
 * Total number of pieces in all pallets. Required for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.
 * @export
 */
export type ShipmentNumOfPieces = string;
/**
 * The time that the request was made from the originating system. UTC time down to milliseconds. Example - 2016-07-14T12:01:33.999  Applicable only for HazMat request and with subversion greater than or equal to 1701.
 * @export
 */
export type ShipmentOriginRecordTransactionTimestamp = string;
/**
 * Package Container.  Only one Package allowed for Simple Rate
 * @export
 * @interface ShipmentPackage
 */
export interface ShipmentPackage {
    /**
     *
     * @type {PackagePackagingType}
     * @memberof ShipmentPackage
     */
    PackagingType?: PackagePackagingType;
    /**
     *
     * @type {PackageDimensions}
     * @memberof ShipmentPackage
     */
    Dimensions?: PackageDimensions;
    /**
     *
     * @type {PackageDimWeight}
     * @memberof ShipmentPackage
     */
    DimWeight?: PackageDimWeight;
    /**
     *
     * @type {PackagePackageWeight}
     * @memberof ShipmentPackage
     */
    PackageWeight?: PackagePackageWeight;
    /**
     *
     * @type {PackageCommodity}
     * @memberof ShipmentPackage
     */
    Commodity?: PackageCommodity;
    /**
     * This element does not require a value and if one is entered it will be ignored.  If present, it indicates the shipment will be categorized as a Large Package.
     * @type {string}
     * @memberof ShipmentPackage
     */
    LargePackageIndicator?: string;
    /**
     *
     * @type {PackagePackageServiceOptions}
     * @memberof ShipmentPackage
     */
    PackageServiceOptions?: PackagePackageServiceOptions;
    /**
     * A flag indicating if the packages require additional handling. True if AdditionalHandlingIndicator tag exists; false otherwise. Additional Handling indicator indicates it�s a non-corrugated package.  Empty Tag.
     * @type {string}
     * @memberof ShipmentPackage
     */
    AdditionalHandlingIndicator?: string;
    /**
     *
     * @type {PackageUPSPremier}
     * @memberof ShipmentPackage
     */
    UPSPremier?: PackageUPSPremier;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is oversized.  Applicable for UPS Worldwide Economy DDU service
     * @type {string}
     * @memberof ShipmentPackage
     */
    OversizeIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is qualified for minimum billable weight.  Applicable for UPS Worldwide Economy DDU service
     * @type {string}
     * @memberof ShipmentPackage
     */
    MinimumBillableWeightIndicator?: string;
}
/**
 * Payment details container for detailed shipment charges. The two shipment charges that are available for specification are Transportation charges and Duties and Taxes.  This container is used for Who Pays What functionality.
 * @export
 * @interface ShipmentPaymentDetails
 */
export interface ShipmentPaymentDetails {
    /**
     *
     * @type {PaymentDetailsShipmentCharge}
     * @memberof ShipmentPaymentDetails
     */
    ShipmentCharge: PaymentDetailsShipmentCharge;
    /**
     * Split Duty VAT Indicator. The presence indicates the payer specified for Transportation Charges will pay transportation charges and any duties that apply to the shipment. The payer specified for Duties and Taxes will pay the VAT (Value-Added Tax) only.  Empty Tag. The payment method for Transportation charges must be UPS account. The UPS account must be a daily pickup account or an occasional account.
     * @type {string}
     * @memberof ShipmentPaymentDetails
     */
    SplitDutyVATIndicator?: string;
}
/**
 * PromotionalDiscountInformation container. This container contains discount information that the customer wants to request each time while placing a shipment.
 * @export
 * @interface ShipmentPromotionalDiscountInformation
 */
export interface ShipmentPromotionalDiscountInformation {
    /**
     * Promotion Code. A discount that is applied to the user.  Required if PromotionalDiscountInformation container is present.
     * @type {string}
     * @memberof ShipmentPromotionalDiscountInformation
     */
    PromoCode: string;
    /**
     * Promotion Alias code  Required if PromotionalDiscountInformation container is present.
     * @type {string}
     * @memberof ShipmentPromotionalDiscountInformation
     */
    PromoAliasCode: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. RatingMethodRequestedIndicator is an indicator. If present, Billable Weight Calculation method and Rating Method information would be returned in response.
 * @export
 */
export type ShipmentRatingMethodRequestedIndicator = string;
/**
 * FRS Indicator. The indicator is required to obtain rates for UPS Ground Freight Pricing (GFP).  The account number must be enabled for GFP.
 * @export
 */
export type ShipmentRatingOptionsFRSShipmentIndicator = string;
/**
 * NegotiatedRatesIndicator -  Required to display two types of discounts:  1) Bids or Account Based Rates 2) Web/Promotional Discounts Bids  Account Based Rates: If the indicator is present, the Shipper is authorized, and the Rating API XML Request is configured to return Negotiated Rates, then Negotiated Rates should be returned in the response.   Web/Promotional Discounts: If the indicator is present, the Shipper is authorized for Web/Promotional Discounts then Negotiated Rates should be returned in the response.
 * @export
 */
export type ShipmentRatingOptionsNegotiatedRatesIndicator = string;
/**
 * RateChartIndicator -  If present in a request, the response will contain a RateChart element.
 * @export
 */
export type ShipmentRatingOptionsRateChartIndicator = string;
/**
 * This indicator applies for a third party (3P) / Freight collect (FC) shipment only.   For 3P/FC shipment if the shipper wishes to request for the negotiated rates of the third party then this indicator should be included in the request.   If authorized the 3P/FC negotiated rates will be applied to the shipment and rates will be returned in response.
 * @export
 */
export type ShipmentRatingOptionsTPFCNegotiatedRatesIndicator = string;
/**
 * UserLevelDiscountIndicator - required to obtain rates for User Level Promotions.  This is required to obtain User Level Discounts. There must also be no ShipperNumber in the Shipper container.
 * @export
 */
export type ShipmentRatingOptionsUserLevelDiscountIndicator = string;
/**
 * Service Container.  Only valid with RequestOption = Rate for both Small package and GFP Rating requests.
 * @export
 * @interface ShipmentService
 */
export interface ShipmentService {
    /**
     * Valid values:
     *
     * 01 = Next Day Air
     *
     * 02 = 2nd Day Air
     *
     * 03 = Ground
     *
     * 07 = Express
     *
     * 08 = Expedited
     *
     * 11 = UPS Standard
     *
     * 12 = 3 Day Select
     *
     * 13 = Next Day Air Saver
     *
     * 14 = UPS Next Day Air� Early
     *
     * 17 = UPS Worldwide Economy DDU
     *
     * 54 = Express Plus
     *
     * 59 = 2nd Day Air A.M.
     *
     * 65 = UPS Saver
     *
     * M2 = First Class Mail
     *
     * M3 = Priority Mail
     *
     * M4 = Expedited MaiI Innovations
     *
     * M5 = Priority Mail Innovations
     *
     * M6 = Economy Mail Innovations
     *
     * M7 = MaiI Innovations (MI) Returns
     *
     * 70 = UPS Access Point� Economy
     *
     * 71 = UPS Worldwide Express Freight Midday
     *
     * 72 = UPS Worldwide Economy DDP
     *
     * 74 = UPS Express�12:00
     *
     * 75 = UPS Heavy Goods
     *
     * 82 = UPS Today Standard
     *
     * 83 = UPS Today Dedicated Courier
     *
     * 84 = UPS Today Intercity
     *
     * 85 = UPS Today Express
     *
     * 86 = UPS Today Express Saver
     *
     * 96 = UPS Worldwide Express Freight.�
     *
     * Note: Only service code 03 is used for Ground Freight Pricing� shipments  The following Services are not available to return shipment: 13, 59, 82, 83, 84, 85, 86
     * @type {string}
     * @memberof ShipmentService
     */
    Code: string;
    /**
     * Optional. Description of service. Example, UPS Next Day Air, UPS Ground etc, as referenced by the Service Code.
     * @type {string}
     * @memberof ShipmentService
     */
    Description?: string;
}
/**
 * Access Point COD indicates Shipment level Access Point COD is requested for a shipment.  Valid only for \"01 - Hold For Pickup At UPS Access Point\" Shipment Indication type.  Shipment Access Point COD is valid only for countries or territories within E.U.  Not valid with (Shipment) COD.  Not available to shipment with return service.
 * @export
 * @interface ShipmentServiceOptionsAccessPointCOD
 */
export interface ShipmentServiceOptionsAccessPointCOD {
    /**
     * Access Point COD Currency Code.  Required if Access Point COD container is present. UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
     * @type {string}
     * @memberof ShipmentServiceOptionsAccessPointCOD
     */
    CurrencyCode: string;
    /**
     * Access Point COD Monetary Value.  Required if Access Point COD container is present.
     * @type {string}
     * @memberof ShipmentServiceOptionsAccessPointCOD
     */
    MonetaryValue: string;
}
/**
 * If we need diferent available services in response, this option is used for shop request option. SaturdayDeliveryIndicator/ SundayDeliveryIndicator will be ignored in that case.  Valid Values: 1- Weekday+Saturday services 2- Weekday+Sunday services 3- Weekday+Sat services+Sun services
 * @export
 */
export type ShipmentServiceOptionsAvailableServicesOption = string;
/**
 * If present, indicates C.O.D. is requested for the shipment.  Shipment level C.O.D. is only available for EU origin countries or territories. C.O.D. shipments are only available for Shippers with Daily Pickup and Drop Shipping accounts.
 * @export
 * @interface ShipmentServiceOptionsCOD
 */
export interface ShipmentServiceOptionsCOD {
    /**
     * For valid values, refer to�Rating and Shipping COD Supported Countries or Territories in the Appendix.
     * @type {string}
     * @memberof ShipmentServiceOptionsCOD
     */
    CODFundsCode: string;
    /**
     *
     * @type {CODCODAmount}
     * @memberof ShipmentServiceOptionsCOD
     */
    CODAmount: CODCODAmount;
}
/**
 * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type ShipmentServiceOptionsCertificateOfOriginIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored.  CommercialInvoiceRemovalIndicator - empty tag means indicator is present.  CommercialInvoiceRemovalIndicator allows a shipper to dictate that UPS remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee.
 * @export
 */
export type ShipmentServiceOptionsCommercialInvoiceRemovalIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored.   DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \"Hold For PickUp at UPS Access Point\" package.    Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \"01 - Hold For PickUp at UPS Access Point\".
 * @export
 */
export type ShipmentServiceOptionsDeliverToAddresseeOnlyIndicator = string;
/**
 * Delivery Confirmation Container.  DeliveryConfirmation and C.O.D. are mutually exclusive.   Refer to the Appendix for a list of valid origin-destination country or territory pairs associated with each confirmation type.
 * @export
 * @interface ShipmentServiceOptionsDeliveryConfirmation
 */
export interface ShipmentServiceOptionsDeliveryConfirmation {
    /**
     * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation Signature Required  2 - Delivery Confirmation Adult Signature Required
     * @type {string}
     * @memberof ShipmentServiceOptionsDeliveryConfirmation
     */
    DCISType: string;
}
/**
 * Shipment Service Delivery Options Container.  Valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.
 * @export
 * @interface ShipmentServiceOptionsDeliveryOptions
 */
export interface ShipmentServiceOptionsDeliveryOptions {
    /**
     * The presence of the tag LiftGateAtDeliveryIndicator indicates that the shipment requires a lift gate for delivery.
     * @type {string}
     * @memberof ShipmentServiceOptionsDeliveryOptions
     */
    LiftGateAtDeliveryIndicator?: string;
    /**
     * The presence of the tag DropOffAtUPSFacilityIndicator indicates the package will be dropped at a UPS facility for shipment.
     * @type {string}
     * @memberof ShipmentServiceOptionsDeliveryOptions
     */
    DropOffAtUPSFacilityIndicator?: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the Ship To address on the shipping label.  This accessorial is not valid with Shipment Indication Types: 01 - Hold For Pickup At UPS Access Point 02 - UPS Access Point� Delivery\"
 * @export
 */
export type ShipmentServiceOptionsDirectDeliveryOnlyIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate Package Release Code is requested for shipment.  This accessorial is only valid with ShipmentIndicationType �01� - Hold for Pickup at UPS Access Point�.
 * @export
 */
export type ShipmentServiceOptionsEPRAIndicator = string;
/**
 * Container for type of Import Control shipments.
 * @export
 * @interface ShipmentServiceOptionsImportControl
 */
export interface ShipmentServiceOptionsImportControl {
    /**
     * Code for type of Import Control shipment.  Valid values are:  '01' = ImportControl Print and Mail  '02' = ImportControl One-Attempt                                     '03' = ImportControl Three-Attempt '04' = ImportControl Electronic Label  '05' = ImportControl Print Label.
     * @type {string}
     * @memberof ShipmentServiceOptionsImportControl
     */
    Code: string;
    /**
     * Text description of the code representing the Import Control associated with the shipment.
     * @type {string}
     * @memberof ShipmentServiceOptionsImportControl
     */
    Description?: string;
}
/**
 * Inside Delivery accessory. Valide values:                                         01- White Glove                        02 - Room of Choice                   03 - Installation  Shippers account needs to have a valid contract for Heavy Goods Service.
 * @export
 */
export type ShipmentServiceOptionsInsideDelivery = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. If present, indicates that the customer would like items disposed.   Shippers account needs to have a valid contract for Heavy Goods Service.
 * @export
 */
export type ShipmentServiceOptionsItemDisposalIndicator = string;
/**
 * Shipment Service Pickup Options Container.  Valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.
 * @export
 * @interface ShipmentServiceOptionsPickupOptions
 */
export interface ShipmentServiceOptionsPickupOptions {
    /**
     * The presence of the tag LiftGatePickupRequiredIndicator indicates that the shipment requires a lift gate for pickup.
     * @type {string}
     * @memberof ShipmentServiceOptionsPickupOptions
     */
    LiftGateAtPickupIndicator?: string;
    /**
     * The presence of the tag HoldForPickupIndicator indicates that the user opted to hold the shipment at UPS location for pickup.
     * @type {string}
     * @memberof ShipmentServiceOptionsPickupOptions
     */
    HoldForPickupIndicator?: string;
}
/**
 * Restricted Articles container.  Valid for UPS World Wide Express Freight shipments.
 * @export
 * @interface ShipmentServiceOptionsRestrictedArticles
 */
export interface ShipmentServiceOptionsRestrictedArticles {
    /**
     * This field is a flag to indicate if the package has Alcohol. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    AlcoholicBeveragesIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Biological substances. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments. Lane check will happen based on postal code/ city.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    DiagnosticSpecimensIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Perishables. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    PerishablesIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Plants. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    PlantsIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Seeds. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    SeedsIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Special Exceptions Restricted Materials. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    SpecialExceptionsIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Tobacco. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    TobaccoIndicator?: string;
    /**
     * This field is a flag to indicate if the package has E-Cigarettes. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    ECigarettesIndicator?: string;
    /**
     * This field is a flag to indicate if the package has Hemp/CBD. True if present; false otherwise.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    HempCBDIndicator?: string;
}
/**
 * Return of Documents Indicator - If the flag is present, the shipper has requested the ReturnOfDocument accessorial be added to the shipment  Valid for Poland to Poland shipment.
 * @export
 */
export type ShipmentServiceOptionsReturnOfDocumentIndicator = string;
/**
 * Container for type of Return Services.
 * @export
 * @interface ShipmentServiceOptionsReturnService
 */
export interface ShipmentServiceOptionsReturnService {
    /**
     * Code for type of Return shipment.  Valid values are: '2' = UPS Print and Mail Return Label  '3' =UPS One-Attempt Return Label '5' = UPS Three Attempt Return Label '8' = UPS Electronic Return Label '9' = UPS Print Return Label '10' = UPS Exchange Print Return Label                            '11' = UPS Pack & Collect Service 1-Attempt Box 1  '12' = UPS Pack & Collect Service 1-Attempt Box 2  '13' = UPS Pack & Collect Service 1-Attempt Box 3  '14' = UPS Pack & Collect Service 1-Attempt Box 4  '15' = UPS Pack & Collect Service 1-Attempt Box 5  '16' = UPS Pack & Collect Service 3-Attempt Box 1  '17' = UPS Pack & Collect Service 3-Attempt Box 2  '18' = UPS Pack & Collect Service 3-Attempt Box 3  '19' = UPS Pack & Collect Service 3-Attempt Box 4  '20' = UPS Pack & Collect Service 3-Attempt Box 5   10 = UPS Exchange Print Return Label and 5 = UPS Three Attempt Return Label are not valid for UPS WorldWide Express Freight and UPS Worldwide Express Freight Midday Services.   3 = UPS One-Attempt Return Label is not valid return service with UPS Premium Care accessorial.
     * @type {string}
     * @memberof ShipmentServiceOptionsReturnService
     */
    Code: string;
    /**
     * Description for type of Return Service.
     * @type {string}
     * @memberof ShipmentServiceOptionsReturnService
     */
    Description?: string;
}
/**
 * Empty Tag means the indicator is present. This field is a flag to indicate if the receiver needs SDL rates in response. True if SDLShipmentIndicator tag exists; false otherwise.  If present, the State Department License (SDL) rates will be returned in the response.  This service requires that the account number is enabled for SDL.
 * @export
 */
export type ShipmentServiceOptionsSDLShipmentIndicator = string;
/**
 * A flag indicating if a shipment must be delivered on a Saturday. True if SaturdayDeliveryIndicator tag exists; false otherwise  Empty Tag.
 * @export
 */
export type ShipmentServiceOptionsSaturdayDeliveryIndicator = string;
/**
 * A flag indicating if the shipment requires a Saturday pickup. True if SaturdayPickupIndicator tag exists; false otherwise. Not available for GFP rating requests.  Empty Tag.
 * @export
 */
export type ShipmentServiceOptionsSaturdayPickupIndicator = string;
/**
 * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type ShipmentServiceOptionsShipperExportDeclarationIndicator = string;
/**
 * A flag indicating if a shipment must be delivered on a Sunday. True if SundayDeliveryIndicator tag exists; false otherwise  Empty Tag.
 * @export
 */
export type ShipmentServiceOptionsSundayDeliveryIndicator = string;
/**
 * UPS carbon neutral indicator. Indicates the shipment will be rated as carbon neutral.
 * @export
 */
export type ShipmentServiceOptionsUPScarbonneutralIndicator = string;
/**
 * Ship From Container.  N/A
 * @export
 * @interface ShipmentShipFrom
 */
export interface ShipmentShipFrom {
    /**
     * Origin attention name or company name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    Name?: string;
    /**
     * Origin attention name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    AttentionName?: string;
    /**
     *
     * @type {ShipFromAddress}
     * @memberof ShipmentShipFrom
     */
    Address: ShipFromAddress;
}
/**
 * Ship To Container  N/A
 * @export
 * @interface ShipmentShipTo
 */
export interface ShipmentShipTo {
    /**
     * Destination attention name or company name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    Name?: string;
    /**
     * Destination attention name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    AttentionName?: string;
    /**
     *
     * @type {ShipToAddress}
     * @memberof ShipmentShipTo
     */
    Address: ShipToAddress;
}
/**
 * Container to hold shipment indication type.
 * @export
 * @interface ShipmentShipmentIndicationType
 */
export interface ShipmentShipmentIndicationType {
    /**
     * Code for Shipment Indication Type. Valid valuese:  01 - Hold for Pickup at UPS Access Point  02 - UPS Access Point� Delivery
     * @type {string}
     * @memberof ShipmentShipmentIndicationType
     */
    Code: string;
    /**
     * Description for Shipment Indication Type.  Length is not Validated.
     * @type {string}
     * @memberof ShipmentShipmentIndicationType
     */
    Description?: string;
}
/**
 * Shipment Rating Options container.  N/A
 * @export
 * @interface ShipmentShipmentRatingOptions
 */
export interface ShipmentShipmentRatingOptions {
    /**
     * NegotiatedRatesIndicator -  Required to display two types of discounts:  1) Bids or Account Based Rates 2) Web/Promotional Discounts Bids  Account Based Rates: If the indicator is present, the Shipper is authorized, and the Rating API XML Request is configured to return Negotiated Rates, then Negotiated Rates should be returned in the response.   Web/Promotional Discounts: If the indicator is present, the Shipper is authorized for Web/Promotional Discounts then Negotiated Rates should be returned in the response.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    NegotiatedRatesIndicator?: string;
    /**
     * FRS Indicator. The indicator is required to obtain rates for UPS Ground Freight Pricing (GFP).  The account number must be enabled for GFP.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    FRSShipmentIndicator?: string;
    /**
     * RateChartIndicator -  If present in a request, the response will contain a RateChart element.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    RateChartIndicator?: string;
    /**
     * UserLevelDiscountIndicator - required to obtain rates for User Level Promotions.  This is required to obtain User Level Discounts. There must also be no ShipperNumber in the Shipper container.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    UserLevelDiscountIndicator?: string;
    /**
     * This indicator applies for a third party (3P) / Freight collect (FC) shipment only.   For 3P/FC shipment if the shipper wishes to request for the negotiated rates of the third party then this indicator should be included in the request.   If authorized the 3P/FC negotiated rates will be applied to the shipment and rates will be returned in response.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    TPFCNegotiatedRatesIndicator?: string;
}
/**
 * Shipment level Accessorials are included in this container.  N/A
 * @export
 * @interface ShipmentShipmentServiceOptions
 */
export interface ShipmentShipmentServiceOptions {
    /**
     * A flag indicating if the shipment requires a Saturday pickup. True if SaturdayPickupIndicator tag exists; false otherwise. Not available for GFP rating requests.  Empty Tag.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SaturdayPickupIndicator?: string;
    /**
     * A flag indicating if a shipment must be delivered on a Saturday. True if SaturdayDeliveryIndicator tag exists; false otherwise  Empty Tag.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SaturdayDeliveryIndicator?: string;
    /**
     * A flag indicating if a shipment must be delivered on a Sunday. True if SundayDeliveryIndicator tag exists; false otherwise  Empty Tag.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SundayDeliveryIndicator?: string;
    /**
     * If we need diferent available services in response, this option is used for shop request option. SaturdayDeliveryIndicator/ SundayDeliveryIndicator will be ignored in that case.  Valid Values: 1- Weekday+Saturday services 2- Weekday+Sunday services 3- Weekday+Sat services+Sun services
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    AvailableServicesOption?: string;
    /**
     *
     * @type {ShipmentServiceOptionsAccessPointCOD}
     * @memberof ShipmentShipmentServiceOptions
     */
    AccessPointCOD?: ShipmentServiceOptionsAccessPointCOD;
    /**
     * Presence/Absence Indicator. Any value inside is ignored.   DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \"Hold For PickUp at UPS Access Point\" package.    Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \"01 - Hold For PickUp at UPS Access Point\".
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    DeliverToAddresseeOnlyIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the Ship To address on the shipping label.  This accessorial is not valid with Shipment Indication Types: 01 - Hold For Pickup At UPS Access Point 02 - UPS Access Point� Delivery\"
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    DirectDeliveryOnlyIndicator?: string;
    /**
     *
     * @type {ShipmentServiceOptionsCOD}
     * @memberof ShipmentShipmentServiceOptions
     */
    COD?: ShipmentServiceOptionsCOD;
    /**
     *
     * @type {ShipmentServiceOptionsDeliveryConfirmation}
     * @memberof ShipmentShipmentServiceOptions
     */
    DeliveryConfirmation?: ShipmentServiceOptionsDeliveryConfirmation;
    /**
     * Return of Documents Indicator - If the flag is present, the shipper has requested the ReturnOfDocument accessorial be added to the shipment  Valid for Poland to Poland shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ReturnOfDocumentIndicator?: string;
    /**
     * UPS carbon neutral indicator. Indicates the shipment will be rated as carbon neutral.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    UPScarbonneutralIndicator?: string;
    /**
     * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    CertificateOfOriginIndicator?: string;
    /**
     *
     * @type {ShipmentServiceOptionsPickupOptions}
     * @memberof ShipmentShipmentServiceOptions
     */
    PickupOptions?: ShipmentServiceOptionsPickupOptions;
    /**
     *
     * @type {ShipmentServiceOptionsDeliveryOptions}
     * @memberof ShipmentShipmentServiceOptions
     */
    DeliveryOptions?: ShipmentServiceOptionsDeliveryOptions;
    /**
     *
     * @type {ShipmentServiceOptionsRestrictedArticles}
     * @memberof ShipmentShipmentServiceOptions
     */
    RestrictedArticles?: ShipmentServiceOptionsRestrictedArticles;
    /**
     * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ShipperExportDeclarationIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored.  CommercialInvoiceRemovalIndicator - empty tag means indicator is present.  CommercialInvoiceRemovalIndicator allows a shipper to dictate that UPS remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    CommercialInvoiceRemovalIndicator?: string;
    /**
     *
     * @type {ShipmentServiceOptionsImportControl}
     * @memberof ShipmentShipmentServiceOptions
     */
    ImportControl?: ShipmentServiceOptionsImportControl;
    /**
     *
     * @type {ShipmentServiceOptionsReturnService}
     * @memberof ShipmentShipmentServiceOptions
     */
    ReturnService?: ShipmentServiceOptionsReturnService;
    /**
     * Empty Tag means the indicator is present. This field is a flag to indicate if the receiver needs SDL rates in response. True if SDLShipmentIndicator tag exists; false otherwise.  If present, the State Department License (SDL) rates will be returned in the response.  This service requires that the account number is enabled for SDL.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SDLShipmentIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate Package Release Code is requested for shipment.  This accessorial is only valid with ShipmentIndicationType �01� - Hold for Pickup at UPS Access Point�.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    EPRAIndicator?: string;
    /**
     * Inside Delivery accessory. Valide values:                                         01- White Glove                        02 - Room of Choice                   03 - Installation  Shippers account needs to have a valid contract for Heavy Goods Service.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    InsideDelivery?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. If present, indicates that the customer would like items disposed.   Shippers account needs to have a valid contract for Heavy Goods Service.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ItemDisposalIndicator?: string;
}
/**
 * Shipment Total Weight Container. This container is only applicable for \"ratetimeintransit\" and \"shoptimeintransit\" request options.  Required for all international shipments when retreiving time in transit information, including letters and documents shipments.
 * @export
 * @interface ShipmentShipmentTotalWeight
 */
export interface ShipmentShipmentTotalWeight {
    /**
     *
     * @type {ShipmentTotalWeightUnitOfMeasurement}
     * @memberof ShipmentShipmentTotalWeight
     */
    UnitOfMeasurement: ShipmentTotalWeightUnitOfMeasurement;
    /**
     * Non-zero total weight of all packages in the shipment.
     * @type {string}
     * @memberof ShipmentShipmentTotalWeight
     */
    Weight: string;
}
/**
 * Shipper container. Information associated with the UPS account number.
 * @export
 * @interface ShipmentShipper
 */
export interface ShipmentShipper {
    /**
     * Shipper's name or company name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipper
     */
    Name?: string;
    /**
     * Shipper's attention name.  Length is not validated.
     * @type {string}
     * @memberof ShipmentShipper
     */
    AttentionName?: string;
    /**
     * Shipper's UPS account number.  A valid account number is required to receive negotiated rates. Optional otherwise. Cannot be present when requesting UserLevelDiscount.
     * @type {string}
     * @memberof ShipmentShipper
     */
    ShipperNumber?: string;
    /**
     *
     * @type {ShipperAddress}
     * @memberof ShipmentShipper
     */
    Address: ShipperAddress;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. TaxInformationIndicator is an indicator.   The Tax related information includes any type of Taxes, corresponding Monetary Values, Total Charges with Taxes and disclaimers (if applicable) would be returned in response.  If present, any taxes that may be applicable to a shipment would be returned in response.   If this indicator is requested with NegotiatedRatesIndicator, Tax related information, if applicable, would be returned only for Negotiated Rates and not for Published Rates.
 * @export
 */
export type ShipmentTaxInformationIndicator = string;
/**
 * UnitOfMeasurement Container.
 * @export
 * @interface ShipmentTotalWeightUnitOfMeasurement
 */
export interface ShipmentTotalWeightUnitOfMeasurement {
    /**
     * The code associated with the unit of measure for the billable weight of a package.
     * @type {string}
     * @memberof ShipmentTotalWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * The Description for the Unit Of Measurement.
     * @type {string}
     * @memberof ShipmentTotalWeightUnitOfMeasurement
     */
    Description: string;
}
/**
 * Non-zero total weight of all packages in the shipment.
 * @export
 */
export type ShipmentTotalWeightWeight = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. WWEShipmentIndicator is an indicator and presence implies that WWE service details requested for RequestOption=Shop or  RequestOption=Shoptimeintransit  RequestOption=Shop or  RequestOption=Shoptimeintransit
 * @export
 */
export type ShipmentWWEShipmentIndicator = string;
/**
 * Address Container.  If the ShipFrom container is not present then this address will be used as the ShipFrom. If this address is used as the ShipFrom, the shipment will be rated from this origin address.
 * @export
 * @interface ShipperAddress
 */
export interface ShipperAddress {
    /**
     * The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.
     * @type {string}
     * @memberof ShipperAddress
     */
    AddressLine: string;
    /**
     * UPS Access Point city.
     * @type {string}
     * @memberof ShipperAddress
     */
    City?: string;
    /**
     * UPS Access Point State or Province code.
     * @type {string}
     * @memberof ShipperAddress
     */
    StateProvinceCode?: string;
    /**
     * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.
     * @type {string}
     * @memberof ShipperAddress
     */
    PostalCode?: string;
    /**
     * Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.
     * @type {string}
     * @memberof ShipperAddress
     */
    CountryCode: string;
}
/**
 * Shipper's attention name.  Length is not validated.
 * @export
 */
export type ShipperAttentionName = string;
/**
 * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes.
 * @export
 */
export type ShipperDeclaredValueCurrencyCode = string;
/**
 * The monetary value for the amount associated with the package.
 * @export
 */
export type ShipperDeclaredValueMonetaryValue = string;
/**
 * Shipper's name or company name.  Length is not validated.
 * @export
 */
export type ShipperName = string;
/**
 * Shipper's UPS account number.  A valid account number is required to receive negotiated rates. Optional otherwise. Cannot be present when requesting UserLevelDiscount.
 * @export
 */
export type ShipperShipperNumber = string;
/**
 * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
 * @export
 */
export type TaxChargesMonetaryValue = string;
/**
 * Tax Type code. The code represents the type of Tax applied to a shipment. Please refer to Appendix I for possible Tax Type codes.
 * @export
 */
export type TaxChargesType = string;
/**
 * Required output for International requests. If Documents indicator is set for Non-document a duty is automatically calculated. The possible values to be returned are:  01 - Dutiable 02 - Non-Dutiable 03 - Low-value 04 - Courier Remission 05 - Gift 06 - Military 07 - Exception 08 - Line Release 09 - Section 321 low value.
 * @export
 */
export type TimeInTransitAutoDutyCode = string;
/**
 * The Disclaimer is provided based upon the origin and destination country or territory codes provided in the request document. The possible disclaimers that can be returned are available in the Service Guaranteed Disclaimers table.
 * @export
 */
export type TimeInTransitDisclaimer = string;
/**
 * If the indicator is present then the shipment was processed as Document Only.
 * @export
 */
export type TimeInTransitDocumentsOnlyIndicator = string;
/**
 * The IATA currency code associated with the amount for the package.  UPS does not support all international currency codes. Refer to the appendix for a list of valid codes. Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type TimeInTransitFlexibleParcelIndicatorCurrencyCode = string;
/**
 * The monetary value associated with the package.  Valid for UPS World Wide Express Freight shipments.
 * @export
 */
export type TimeInTransitFlexibleParcelIndicatorMonetaryValue = string;
/**
 * Package bill type for the shipment. Valid values: 02 - Document only  03 - Non-Document 04 - Pallet
 * @export
 */
export type TimeInTransitPackageBillType = string;
/**
 * The date the user requests UPS to pickup the package from the origin. Format: YYYYMMDD. In the event this Pickup date differs from the Pickup date in the Estimated Arrival Container, a warning will be returned.  In the event this Pickup date differs from the Pickup date in the Estimated Arrival Container, a warning will be returned.
 * @export
 */
export type TimeInTransitPickupDate = string;
/**
 * Container for all available service information.
 * @export
 * @interface TimeInTransitServiceSummary
 */
export interface TimeInTransitServiceSummary {
    /**
     *
     * @type {ServiceSummaryService}
     * @memberof TimeInTransitServiceSummary
     */
    Service: ServiceSummaryService;
    /**
     * Empty Tag. Indicates whether the service will be guaranteed or not.  Required for International Requests.
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    GuaranteedIndicator?: string;
    /**
     * The Disclaimer is provided based upon the origin and destination country or territory codes provided in the request document. The disclaimer is returned as a conditional statement to the validity of the service being guaranteed. The possible disclaimers that can be returned are available in the Service Guaranteed Disclaimers table.
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    Disclaimer?: string;
    /**
     *
     * @type {ServiceSummaryEstimatedArrival}
     * @memberof TimeInTransitServiceSummary
     */
    EstimatedArrival: ServiceSummaryEstimatedArrival;
    /**
     * Saturday delivery information for a service. Values are 1 - Saturday Delivery Available with additional charges  0 - Saturday Delivery not available or no additional charge, please check Delivery Date to confirm if the Delivery will be Saturday  Please see Saturday Delivery business rules section for more information.
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    SaturdayDelivery?: string;
    /**
     * Saturday delivery disclaimer message.
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    SaturdayDeliveryDisclaimer?: string;
    /**
     * Sunday delivery information for a service. Values are 1 - Sunday Delivery Available with additional charges  0 - Sunday Delivery not available or no additional charge, please check Delivery Date to confirm if the Delivery will be Sunday  Please see Saturday Delivery business rules section for more information.   Applies only if SubVersion is greater than or equal to 2007
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    SundayDelivery?: string;
    /**
     * Sunday delivery disclaimer message.  Applies only if SubVersion is greater than or equal to 2007
     * @type {string}
     * @memberof TimeInTransitServiceSummary
     */
    SundayDeliveryDisclaimer?: string;
}
/**
 * The IATA currency code associated with the Negotiated Rate total charges for the shipment.
 * @export
 */
export type TotalChargeCurrencyCode = string;
/**
 * The value for the Negotiated Rate total charges associated with the shipment.
 * @export
 */
export type TotalChargeMonetaryValue = string;
/**
 * The IATA currency code associated with the total charges for the package.
 * @export
 */
export type TotalChargesCurrencyCode = string;
/**
 * The value for the total charges associated with the package.
 * @export
 */
export type TotalChargesMonetaryValue = string;
/**
 * TotalChargesWithTaxes currency code type. The currency code used in the Shipment request is returned.
 * @export
 */
export type TotalChargesWithTaxesCurrencyCode = string;
/**
 * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 99999999999999.99
 * @export
 */
export type TotalChargesWithTaxesMonetaryValue = string;
/**
 * The CustomerContext Information which will be echoed during response.
 * @export
 */
export type TransactionReferenceCustomerContext = string;
/**
 * The IATA currency code associated with the transportation costs for the package.
 * @export
 */
export type TransportationChargesCurrencyCode = string;
/**
 * Discount Container
 * @export
 * @interface TransportationChargesDiscountAmount
 */
export interface TransportationChargesDiscountAmount {
    /**
     * The IATA currency code associated with the transportation costs for the shipment.
     * @type {string}
     * @memberof TransportationChargesDiscountAmount
     */
    CurrencyCode: string;
    /**
     * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesDiscountAmount
     */
    MonetaryValue: string;
}
/**
 * Discount Percentage
 * @export
 */
export type TransportationChargesDiscountPercentage = string;
/**
 * Gross Transportation Charges Container
 * @export
 * @interface TransportationChargesGrossCharge
 */
export interface TransportationChargesGrossCharge {
    /**
     * The IATA currency code associated with the transportation costs for the shipment.
     * @type {string}
     * @memberof TransportationChargesGrossCharge
     */
    CurrencyCode: string;
    /**
     * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesGrossCharge
     */
    MonetaryValue: string;
}
/**
 * The value for the transportation costs associated with the package.
 * @export
 */
export type TransportationChargesMonetaryValue = string;
/**
 * Net Transportation Rate Container
 * @export
 * @interface TransportationChargesNetCharge
 */
export interface TransportationChargesNetCharge {
    /**
     * The IATA currency code associated with the transportation costs for the shipment.
     * @type {string}
     * @memberof TransportationChargesNetCharge
     */
    CurrencyCode: string;
    /**
     * Total charges Monetary value. Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesNetCharge
     */
    MonetaryValue: string;
}
/**
 * The code associated with Handling Unit Type.  Valid values:  SKD = Skid  CBY = Carboy PLT = Pallet TOT = Totes LOO = Loose OTH = Other
 * @export
 */
export type TypeCode = string;
/**
 * A description of the code for the Handling Unit type.
 * @export
 */
export type TypeDescription = string;
/**
 * UPS Premier Category  Valid values are 01,02,03                         UPS Premier Silver - 01 UPS Premier Gold - 02 UPS Premier Platinum - 03
 * @export
 */
export type UPSPremierCategory = string;
/**
 * The code associated with the unit of measure for the billable weight of a package.
 * @export
 */
export type UnitOfMeasurementCode = string;
/**
 * The Description for the Unit Of Measurement.
 * @export
 */
export type UnitOfMeasurementDescription = string;
/**
 * DefaultApi - fetch parameter creator
 * @export
 */
export const DefaultApiFetchParamCreator = function (
    configuration?: Configuration
) {
    return {
        /**
         *
         * @summary The Rating API is used when rating or shopping a shipment.
         * @param {RATERequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Rate API to display the new release features in  Rate API response based on Rate release. See the New  section for the latest Rate release. Supported values: v1, v1601, v1607, v1701, v1707, v2108, v2205. Length 5
         * @param {string} requestoption Valid Values:  Rate &#x3D; The server rates (The default Request option is  Rate if a Request Option is not provided).  Shop &#x3D; The server validates the shipment, and returns  rates for all UPS products from the ShipFrom to the  ShipTo addresses.  Rate is the only valid request option for Ground Freight  Pricing requests. . Length 10
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionalinfo] Valid Values:  timeintransit &#x3D; The server rates with transit time  information combined with requestoption in URL. Rate is the only valid request option for Ground Freight  Pricing requests. Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rate(
            body: RATERequestWrapper,
            version: string,
            requestoption: string,
            transId?: string,
            transactionSrc?: string,
            additionalinfo?: string,
            options: any = {}
        ): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError(
                    "body",
                    "Required parameter body was null or undefined when calling rate."
                );
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError(
                    "version",
                    "Required parameter version was null or undefined when calling rate."
                );
            }
            // verify required parameter 'requestoption' is not null or undefined
            if (requestoption === null || requestoption === undefined) {
                throw new RequiredError(
                    "requestoption",
                    "Required parameter requestoption was null or undefined when calling rate."
                );
            }
            const localVarPath = `/rating/{version}/{requestoption}`
                .replace(`{${"version"}}`, encodeURIComponent(String(version)))
                .replace(
                    `{${"requestoption"}}`,
                    encodeURIComponent(String(requestoption))
                );
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign(
                { method: "POST" },
                options
            );
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue =
                    typeof configuration.accessToken === "function"
                        ? configuration.accessToken("oauth2", [])
                        : configuration.accessToken;
                localVarHeaderParameter["Authorization"] =
                    "Bearer " + localVarAccessTokenValue;
            }

            if (additionalinfo !== undefined) {
                localVarQueryParameter["additionalinfo"] = additionalinfo;
            }

            if (transId !== undefined && transId !== null) {
                localVarHeaderParameter["transId"] = String(transId);
            }

            if (transactionSrc !== undefined && transactionSrc !== null) {
                localVarHeaderParameter["transactionSrc"] =
                    String(transactionSrc);
            }

            localVarHeaderParameter["Content-Type"] = "application/json";

            localVarUrlObj.query = Object.assign(
                {},
                localVarUrlObj.query,
                localVarQueryParameter,
                options.query
            );
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign(
                {},
                localVarHeaderParameter,
                options.headers
            );
            const needsSerialization =
                <any>"RATERequestWrapper" !== "string" ||
                localVarRequestOptions.headers["Content-Type"] ===
                    "application/json";
            localVarRequestOptions.body = needsSerialization
                ? JSON.stringify(body || {})
                : body || "";

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    };
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary The Rating API is used when rating or shopping a shipment.
         * @param {RATERequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Rate API to display the new release features in  Rate API response based on Rate release. See the New  section for the latest Rate release. Supported values: v1, v1601, v1607, v1701, v1707, v2108, v2205. Length 5
         * @param {string} requestoption Valid Values:  Rate &#x3D; The server rates (The default Request option is  Rate if a Request Option is not provided).  Shop &#x3D; The server validates the shipment, and returns  rates for all UPS products from the ShipFrom to the  ShipTo addresses.  Rate is the only valid request option for Ground Freight  Pricing requests. . Length 10
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionalinfo] Valid Values:  timeintransit &#x3D; The server rates with transit time  information combined with requestoption in URL. Rate is the only valid request option for Ground Freight  Pricing requests. Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rate(
            body: RATERequestWrapper,
            version: string,
            requestoption: string,
            transId?: string,
            transactionSrc?: string,
            additionalinfo?: string,
            options?: any
        ): (
            fetch?: FetchAPI,
            basePath?: string
        ) => Promise<RATEResponseWrapper> {
            const localVarFetchArgs = DefaultApiFetchParamCreator(
                configuration
            ).rate(
                body,
                version,
                requestoption,
                transId,
                transactionSrc,
                additionalinfo,
                options
            );
            return (
                fetch: FetchAPI = isomorphicFetch,
                basePath: string = BASE_PATH
            ) => {
                return fetch(
                    basePath + localVarFetchArgs.url,
                    localVarFetchArgs.options
                ).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    };
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (
    configuration?: Configuration,
    fetch?: FetchAPI,
    basePath?: string
) {
    return {
        /**
         *
         * @summary The Rating API is used when rating or shopping a shipment.
         * @param {RATERequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Rate API to display the new release features in  Rate API response based on Rate release. See the New  section for the latest Rate release. Supported values: v1, v1601, v1607, v1701, v1707, v2108, v2205. Length 5
         * @param {string} requestoption Valid Values:  Rate &#x3D; The server rates (The default Request option is  Rate if a Request Option is not provided).  Shop &#x3D; The server validates the shipment, and returns  rates for all UPS products from the ShipFrom to the  ShipTo addresses.  Rate is the only valid request option for Ground Freight  Pricing requests. . Length 10
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionalinfo] Valid Values:  timeintransit &#x3D; The server rates with transit time  information combined with requestoption in URL. Rate is the only valid request option for Ground Freight  Pricing requests. Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rate(
            body: RATERequestWrapper,
            version: string,
            requestoption: string,
            transId?: string,
            transactionSrc?: string,
            additionalinfo?: string,
            options?: any
        ) {
            return DefaultApiFp(configuration).rate(
                body,
                version,
                requestoption,
                transId,
                transactionSrc,
                additionalinfo,
                options
            )(fetch, basePath);
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     *
     * @summary The Rating API is used when rating or shopping a shipment.
     * @param {RATERequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
     * @param {string} version Indicates Rate API to display the new release features in  Rate API response based on Rate release. See the New  section for the latest Rate release. Supported values: v1, v1601, v1607, v1701, v1707, v2108, v2205. Length 5
     * @param {string} requestoption Valid Values:  Rate &#x3D; The server rates (The default Request option is  Rate if a Request Option is not provided).  Shop &#x3D; The server validates the shipment, and returns  rates for all UPS products from the ShipFrom to the  ShipTo addresses.  Rate is the only valid request option for Ground Freight  Pricing requests. . Length 10
     * @param {string} [transId] An identifier unique to the request. Length 32
     * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
     * @param {string} [additionalinfo] Valid Values:  timeintransit &#x3D; The server rates with transit time  information combined with requestoption in URL. Rate is the only valid request option for Ground Freight  Pricing requests. Length 15
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public rate(
        body: RATERequestWrapper,
        version: string,
        requestoption: string,
        transId?: string,
        transactionSrc?: string,
        additionalinfo?: string,
        options?: any
    ) {
        return DefaultApiFp(this.configuration).rate(
            body,
            version,
            requestoption,
            transId,
            transactionSrc,
            additionalinfo,
            options
        )(this.fetch, this.basePath);
    }
}
