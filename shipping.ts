/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Ship
 * The Shipping Package API gives the application many ways to manage the shipment of packages to their  destination
 *
 * OpenAPI spec version: 1.0.1
 *
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as url from "url";
import isomorphicFetch, { Response } from "node-fetch";
import { Configuration } from "./configuration";

const BASE_PATH = "https://wwwcie.ups.com/api/".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
    (url: string, init?: any): Promise<Response>;
}

/**
 *
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration;

    constructor(
        configuration?: Configuration,
        protected basePath: string = BASE_PATH,
        protected fetch: FetchAPI = isomorphicFetch
    ) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name: "RequiredError";
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}

/**
 * Access Point COD Currency Code.
 * @export
 */
export type AccessPointCODCurrencyCode = string;
/**
 * Access Point COD Monetary Value.
 * @export
 */
export type AccessPointCODMonetaryValue = string;
/**
 * Code for Accessorial Indicator.
 * @export
 */
export type AccessorialCode = string;
/**
 * Description for Accessorial Indicator.
 * @export
 */
export type AccessorialDescription = string;
/**
 * SoldTo location�s street address.  Applies to NAFTA CO.
 * @export
 */
export type AddressAddressLine = string;
/**
 * SoldTo location�s city.
 * @export
 */
export type AddressCity = string;
/**
 * SoldTo location�s country or territory code.
 * @export
 */
export type AddressCountryCode = string;
/**
 * SoldTo location�s postal code.
 * @export
 */
export type AddressPostalCode = string;
/**
 * This field is a flag to indicate if the receiver is a residential location.  True if ResidentialAddressIndicator tag exists.  This is an empty tag, any value inside is ignored.
 * @export
 */
export type AddressResidentialAddressIndicator = string;
/**
 * SoldTo location�s state or province code.  Required for certain countries or territories.
 * @export
 */
export type AddressStateProvinceCode = string;
/**
 * SoldTo location�s town code.
 * @export
 */
export type AddressTown = string;
/**
 * Unit of Measurement container for the Adjusted height.
 * @export
 * @interface AdjustedHeightUnitOfMeasurement
 */
export interface AdjustedHeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof AdjustedHeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof AdjustedHeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Adjusted Height value for the handling unit.  Height Adjustment is done only when Handling unit type is SKD = Skid or PLT = Pallet.
 * @export
 */
export type AdjustedHeightValue = string;
/**
 * Warning code returned by the system.
 * @export
 */
export type AlertCode = string;
/**
 * Warning messages returned by the system.
 * @export
 */
export type AlertDescription = string;
/**
 * Address Container.
 * @export
 * @interface AlternateDeliveryAddressAddress
 */
export interface AlternateDeliveryAddressAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof AlternateDeliveryAddressAddress
     */
    CountryCode: string;
}
/**
 * Attention Name.
 * @export
 */
export type AlternateDeliveryAddressAttentionName = string;
/**
 * Retail Location Name.
 * @export
 */
export type AlternateDeliveryAddressName = string;
/**
 * UPS Access Point ID.
 * @export
 */
export type AlternateDeliveryAddressUPSAccessPointID = string;
/**
 * BaseServiceCharge currency code type. The currency code used in the Shipment request is returned.
 * @export
 */
export type BaseServiceChargeCurrencyCode = string;
/**
 * Base Service Charge value amount.  Valid values are from 0 to 99999999999999.99
 * @export
 */
export type BaseServiceChargeMonetaryValue = string;
/**
 * The UPS account number.  The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be a daily pickup account, an occasional account, a customer B.I.N account, or a dropper shipper account.   All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
 * @export
 */
export type BillReceiverAccountNumber = string;
/**
 * Container for additional information for the bill receiver�s UPS accounts address.
 * @export
 * @interface BillReceiverAddress
 */
export interface BillReceiverAddress {
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof BillReceiverAddress
     */
    PostalCode?: string;
}
/**
 * UPS account number.  Must be the same UPS account number as the one provided in Shipper/ShipperNumber.   Either this element or one of the sibling elements CreditCard or AlternatePaymentMethod must be provided, but all of them may not be provided.
 * @export
 */
export type BillShipperAccountNumber = string;
/**
 * Alternate Payment Method.  Valid value: 01= PayPal  Only valid for forward shipments. It is not valid for Return or Import Control shipments.   This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided.   PayPal 01: Is only valid for forward shipments. It is not valid for Return or Import Control shipments.   This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided.
 * @export
 */
export type BillShipperAlternatePaymentMethod = string;
/**
 * Credit card information container.  Required if neither of the following is present:   /ShipmentRequest/Shipment/PaymentInformation/ShipmentCharge/BillShipper/AccountNumber  or  /ShipmentRequest/Shipment/PaymentInformation/ShipmentCharge/BillShipper/AlternatePaymentMethod.   Credit card payment is valid for shipments without return service only.
 * @export
 * @interface BillShipperCreditCard
 */
export interface BillShipperCreditCard {
    /**
     * Valid values: 01 = American Express 03 = Discover 04 = MasterCard 05 = Optima 06 = VISA 07 = Bravo 08 = Diners Club 13=Dankort 14=Hipercard 15=JCB 17=Postepay 18=UnionPay/ExpressPay 19=Visa Electron 20=VPAY 21=Carte Bleue
     * @type {string}
     * @memberof BillShipperCreditCard
     */
    Type: string;
    /**
     * Credit Card number.
     * @type {string}
     * @memberof BillShipperCreditCard
     */
    Number: string;
    /**
     * Format is MMYYYY where MM is the 2 digit month and YYYY is the 4 digit year.  Valid month values are 01-12 and valid year values are Present Year � (Present Year + 10 years)
     * @type {string}
     * @memberof BillShipperCreditCard
     */
    ExpirationDate: string;
    /**
     * Three or four digits that can be found either on top of credit card number or on the back of credit card. Number of digits varies for different type of credit card.  Valid values are 3 or 4 digits. It is required to provide the security code if credit card information is provided and when the ShipFrom countries or territories are other than the below mentioned countries or territories. Argentina, Bahamas, Costa Rica, Dominican Republic, Guatemala, Panama, Puerto Rico and Russia.
     * @type {string}
     * @memberof BillShipperCreditCard
     */
    SecurityCode: string;
    /**
     *
     * @type {CreditCardAddress}
     * @memberof BillShipperCreditCard
     */
    Address?: CreditCardAddress;
}
/**
 * The UPS account number of the third party shipper.  The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account, or a drop shipper account.   All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
 * @export
 */
export type BillThirdPartyAccountNumber = string;
/**
 * Container for additional information for the third party UPS accounts address.
 * @export
 * @interface BillThirdPartyAddress
 */
export interface BillThirdPartyAddress {
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof BillThirdPartyAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof BillThirdPartyAddress
     */
    CountryCode: string;
}
/**
 * Posta Elettronica Certificata (PEC) which is the recipient code for the customers certified electronic mail value.
 * @export
 */
export type BillThirdPartyCertifiedElectronicMail = string;
/**
 * Sistema Di Interscambio(SDI) which is the recipient code for the customer's interchange value or Interchange System Code
 * @export
 */
export type BillThirdPartyInterchangeSystemCode = string;
/**
 * Billing weight unit of measurement code.� The unit of measurement used in Shipment request is returned.
 * @export
 * @interface BillingWeightUnitOfMeasurement
 */
export interface BillingWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof BillingWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof BillingWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Billing weight. Higher of the actual shipment weight versus the shipment dimensional weight.  When using a negotiated divisor different from the published UPS divisor (139 for inches and 5,000 for cm), the weight returned is based on the published divisor. Rates, however, are based on the negotiated divisor.
 * @export
 */
export type BillingWeightWeight = string;
/**
 * Begin date of the blanket period. It is the date upon which the Certificate becomes applicable to the good covered by the blanket Certificate (it may be prior to the date of signing this Certificate).  Applies to NAFTA CO form only. Required for NAFTA CO. Format is yyyyMMdd. This is not valid for a paperless shipment.
 * @export
 */
export type BlanketPeriodBeginDate = string;
/**
 * End Date of the blanket period. It is the date upon which the blanket period expires.  Applies to NAFTA CO form only. Required for NAFTA CO. Format is yyyyMMdd.  This is not valid for a paperless shipment.
 * @export
 */
export type BlanketPeriodEndDate = string;
/**
 * Country or Territory of Origin from where the CN22 contents originated.
 * @export
 */
export type CN22ContentCN22ContentCountryOfOrigin = string;
/**
 * Currently only USD is supported.  Required if the CN22 form container is present.
 * @export
 */
export type CN22ContentCN22ContentCurrencyCode = string;
/**
 * Detailed description of the content.  If the combined MI package and CN22 label is requested, only the first 30 characters will appear on the combined label.  Required if the CN22 form container is present.
 * @export
 */
export type CN22ContentCN22ContentDescription = string;
/**
 * Total number of items associated with this content.  Required if the CN22 form container is present.
 * @export
 */
export type CN22ContentCN22ContentQuantity = string;
/**
 * The tariff number associated with the CN22 contents.
 * @export
 */
export type CN22ContentCN22ContentTariffNumber = string;
/**
 * Total value of the items associated with this content.  Required if the CN22 form container is present.
 * @export
 */
export type CN22ContentCN22ContentTotalValue = string;
/**
 * Container for CN22 content weight.
 * @export
 * @interface CN22ContentCN22ContentWeight
 */
export interface CN22ContentCN22ContentWeight {
    /**
     *
     * @type {CN22ContentWeightUnitOfMeasurement}
     * @memberof CN22ContentCN22ContentWeight
     */
    UnitOfMeasurement: CN22ContentWeightUnitOfMeasurement;
    /**
     * Total weight of the content. Pounds and Ounces are allowed up to 2 decimals.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof CN22ContentCN22ContentWeight
     */
    Weight: string;
}
/**
 * Container for UOM.
 * @export
 * @interface CN22ContentWeightUnitOfMeasurement
 */
export interface CN22ContentWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof CN22ContentWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof CN22ContentWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Total weight of the content. Pounds and Ounces are allowed up to 2 decimals.  Required if the CN22 form container is present.
 * @export
 */
export type CN22ContentWeightWeight = string;
/**
 * Container for CN22 content.  Required if the CN22 form container is present.  Note: The maximum number of goods printed on the CN22 form when a combined MI package and CN22 form label is requested is 30.
 * @export
 * @interface CN22FormCN22Content
 */
export interface CN22FormCN22Content {
    /**
     * Total number of items associated with this content.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentQuantity: string;
    /**
     * Detailed description of the content.  If the combined MI package and CN22 label is requested, only the first 30 characters will appear on the combined label.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentDescription: string;
    /**
     *
     * @type {CN22ContentCN22ContentWeight}
     * @memberof CN22FormCN22Content
     */
    CN22ContentWeight: CN22ContentCN22ContentWeight;
    /**
     * Total value of the items associated with this content.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentTotalValue: string;
    /**
     * Currently only USD is supported.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentCurrencyCode: string;
    /**
     * Country or Territory of Origin from where the CN22 contents originated.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentCountryOfOrigin?: string;
    /**
     * The tariff number associated with the CN22 contents.
     * @type {string}
     * @memberof CN22FormCN22Content
     */
    CN22ContentTariffNumber?: string;
}
/**
 * Required if CN22Type is OTHER.  Required if the CN22 form container is present.
 * @export
 */
export type CN22FormCN22OtherDescription = string;
/**
 * Valid values:  1 = GIFT 2 = DOCUMENTS 3 = COMMERCIAL SAMPLE 4 = OTHER  Required if the CN22 form container is present.
 * @export
 */
export type CN22FormCN22Type = string;
/**
 * String will replace default \"Fold Here\" text displayed on the label.
 * @export
 */
export type CN22FormFoldHereText = string;
/**
 * Valid Values are pdf, png, gif, zpl, star, epl2 and spl.   Required if the CN22 form container is present.
 * @export
 */
export type CN22FormLabelPrintType = string;
/**
 * Provide the valid values:  6 = 4X6 1 = 8.5X11   Required if the CN22 form container is present.
 * @export
 */
export type CN22FormLabelSize = string;
/**
 * Number of label per page. Currently 1 per page is supported.  Required if the CN22 form container is present.
 * @export
 */
export type CN22FormPrintsPerPage = string;
/**
 * COD amount currency code type.
 * @export
 */
export type CODAmountCurrencyCode = string;
/**
 * COD Amount.  Valid values: 0.01 USD to 50000.00 USD
 * @export
 */
export type CODAmountMonetaryValue = string;
/**
 * COD Amount container.
 * @export
 * @interface CODCODAmount
 */
export interface CODCODAmount {
    /**
     * COD amount currency code type.
     * @type {string}
     * @memberof CODCODAmount
     */
    CurrencyCode: string;
    /**
     * COD Amount.  Valid values: 0.01 USD to 50000.00 USD
     * @type {string}
     * @memberof CODCODAmount
     */
    MonetaryValue: string;
}
/**
 * For valid values refer to:�Rating and Shipping COD Supported Countries or Territories in the Appendix.
 * @export
 */
export type CODCODFundsCode = string;
/**
 * The container of the image for COD Turn In Page.    Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface CODTurnInPageImage
 */
export interface CODTurnInPageImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof CODTurnInPageImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 Encoded PDF Image.
     * @type {string}
     * @memberof CODTurnInPageImage
     */
    GraphicImage: string;
}
/**
 * Freight Classification. Freight class partially determines the freight rate for the article.  Required for Ground Freight Pricing Shipments only.
 * @export
 */
export type CommodityFreightClass = string;
/**
 * Container to hold the NMFC codes.
 * @export
 * @interface CommodityNMFC
 */
export interface CommodityNMFC {
    /**
     * Specifies the Commodity�s NMFC prime code.  Required if NMFC Container is present.
     * @type {string}
     * @memberof CommodityNMFC
     */
    PrimeCode: string;
    /**
     * Specifies the Commodity�s NMFC sub code.  Needs to be provided when the SubCode associated with the PrimeCode is other than 00. UPS defaults the sub value to 00 if not provided. If provided the Sub Code should be associated with the PrimeCode of the NMFC.
     * @type {string}
     * @memberof CommodityNMFC
     */
    SubCode?: string;
}
/**
 * The forwarding agent is the company or person acting as agent in the trans-shipping of freight to the destination country or territory.  Applicable for EEI form only.
 * @export
 * @interface ContactsForwardAgent
 */
export interface ContactsForwardAgent {
    /**
     * Company Name or the Individual name of the Forwarding agent.  Applicable for EEI form only.
     * @type {string}
     * @memberof ContactsForwardAgent
     */
    CompanyName: string;
    /**
     * Tax ID of the Forwarding agent. Valid Values: (Below values are applicable for EEIFilingOption Code =3) 94-308351500  13-168669100     Applicable for EEI form only.
     * @type {string}
     * @memberof ContactsForwardAgent
     */
    TaxIdentificationNumber: string;
    /**
     *
     * @type {ForwardAgentAddress}
     * @memberof ContactsForwardAgent
     */
    Address: ForwardAgentAddress;
}
/**
 * The intermediate consignee is the person or company in the importing country or territory that makes final delivery to the ultimate consignee.  Applicable for EEI form only.
 * @export
 * @interface ContactsIntermediateConsignee
 */
export interface ContactsIntermediateConsignee {
    /**
     * Company Name or the Individual name of the Intermediate consignee.  Applicable for EEI form only.
     * @type {string}
     * @memberof ContactsIntermediateConsignee
     */
    CompanyName: string;
    /**
     *
     * @type {IntermediateConsigneeAddress}
     * @memberof ContactsIntermediateConsignee
     */
    Address: IntermediateConsigneeAddress;
}
/**
 * Information of the producer. The NAFTA Certificate of Origin must be completed, signed, and dated by the exporter.  When the Certificate is completed by the producer for use by the exporter, it must be completed, signed, and dated by the producer. The date must be the date the Certificate was completed and signed.  Applies to NAFTA CO.  Required for NAFTA CO forms.
 * @export
 * @interface ContactsProducer
 */
export interface ContactsProducer {
    /**
     * The text associated with the code will be printed in the producer section instead of producer contact information.  Use attached List if more than one producer�s good is included on the Certificate, attach a list of additional producers, including the legal name, address (including country or territory), and legal tax identification number, cross-referenced to the goods described in the Description of Goods field.  Applies to NAFTA CO.   Valid values:  01 - AVAILABLE TO CUSTOMS UPON REQUEST 02 - SAME AS EXPORTER 03 - ATTACHED LIST 04 - UNKNOWN
     * @type {string}
     * @memberof ContactsProducer
     */
    Option?: string;
    /**
     * Company Name or the Individual name of the Producer.  Applies to NAFTA CO.  Only applicable when producer option is empty or not present. Conditionally required for: NAFTA CO, when Producer option is not specified.
     * @type {string}
     * @memberof ContactsProducer
     */
    CompanyName?: string;
    /**
     * Tax ID of the Producer.  Applies to NAFTA CO. Only applicable when producer option is empty or not present
     * @type {string}
     * @memberof ContactsProducer
     */
    TaxIdentificationNumber?: string;
    /**
     *
     * @type {ProducerAddress}
     * @memberof ContactsProducer
     */
    Address?: ProducerAddress;
    /**
     * Contact name at the Producer location.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ContactsProducer
     */
    AttentionName?: string;
    /**
     *
     * @type {ProducerPhone}
     * @memberof ContactsProducer
     */
    Phone?: ProducerPhone;
    /**
     * Producer email address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ContactsProducer
     */
    EMailAddress?: string;
}
/**
 * SoldTo Container. The Sold To party�s country code must be the same as the Ship To party�s country code with the exception of Canada and satellite countries.  Applies to Invoice and NAFTA CO Forms. Required if Invoice or NAFTA CO (International Form) is requested.
 * @export
 * @interface ContactsSoldTo
 */
export interface ContactsSoldTo {
    /**
     * Company Name.
     * @type {string}
     * @memberof ContactsSoldTo
     */
    Name: string;
    /**
     * Sold to contact name.
     * @type {string}
     * @memberof ContactsSoldTo
     */
    AttentionName: string;
    /**
     * SoldTo Tax Identification Number.
     * @type {string}
     * @memberof ContactsSoldTo
     */
    TaxIdentificationNumber?: string;
    /**
     *
     * @type {SoldToPhone}
     * @memberof ContactsSoldTo
     */
    Phone?: SoldToPhone;
    /**
     * The text associated with the code will be printed in the sold to section of the NAFTA CO form.  The values indicate the following: 01 � Unknown.  Applies to NAFTA CO form. Possible Values are 01 and 02.
     * @type {string}
     * @memberof ContactsSoldTo
     */
    Option?: string;
    /**
     *
     * @type {SoldToAddress}
     * @memberof ContactsSoldTo
     */
    Address: SoldToAddress;
    /**
     * SoldTo email address.
     * @type {string}
     * @memberof ContactsSoldTo
     */
    EMailAddress?: string;
}
/**
 * The ultimate consignee is the person or company who receives the goods for end-use or the person or company listed on the export license. This is the end-user of the goods.  Applicable for EEI form only.
 * @export
 * @interface ContactsUltimateConsignee
 */
export interface ContactsUltimateConsignee {
    /**
     * Company Name or the Individual name of the Ultimate consignee.  Applicable for EEI form only.
     * @type {string}
     * @memberof ContactsUltimateConsignee
     */
    CompanyName: string;
    /**
     *
     * @type {UltimateConsigneeAddress}
     * @memberof ContactsUltimateConsignee
     */
    Address: UltimateConsigneeAddress;
    /**
     *
     * @type {UltimateConsigneeUltimateConsigneeType}
     * @memberof ContactsUltimateConsignee
     */
    UltimateConsigneeType?: UltimateConsigneeUltimateConsigneeType;
}
/**
 * Base 64 encoded html, EPL2, ZPL or SPL image.�     Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ControlLogReceiptGraphicImage = string;
/**
 * Container for the High Value report format required if parent exist.    Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ControlLogReceiptImageFormat
 */
export interface ControlLogReceiptImageFormat {
    /**
     * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
     * @type {string}
     * @memberof ControlLogReceiptImageFormat
     */
    Code: string;
    /**
     * Description of the image format.
     * @type {string}
     * @memberof ControlLogReceiptImageFormat
     */
    Description?: string;
}
/**
 * Container to hold the Credit card Billing Address.  It is required to provide billing address if credit card information is provided and when the ShipFrom country or territory is the US, PR, and CA.
 * @export
 * @interface CreditCardAddress
 */
export interface CreditCardAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof CreditCardAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof CreditCardAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof CreditCardAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof CreditCardAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof CreditCardAddress
     */
    CountryCode: string;
}
/**
 * Format is MMYYYY where MM is the 2 digit month and YYYY is the 4 digit year.  Valid month values are 01-12 and valid year values are Present Year � (Present Year + 10 years)
 * @export
 */
export type CreditCardExpirationDate = string;
/**
 * Credit Card number.
 * @export
 */
export type CreditCardNumber = string;
/**
 * Three or four digits that can be found either on top of credit card number or on the back of credit card. Number of digits varies for different type of credit card.  Valid values are 3 or 4 digits. It is required to provide the security code if credit card information is provided and when the ShipFrom countries or territories are other than the below mentioned countries or territories. Argentina, Bahamas, Costa Rica, Dominican Republic, Guatemala, Panama, Puerto Rico and Russia.
 * @export
 */
export type CreditCardSecurityCode = string;
/**
 * Valid values: 01 = American Express 03 = Discover 04 = MasterCard 05 = Optima 06 = VISA 07 = Bravo 08 = Diners Club 13=Dankort 14=Hipercard 15=JCB 17=Postepay 18=UnionPay/ExpressPay 19=Visa Electron 20=VPAY 21=Carte Bleue
 * @export
 */
export type CreditCardType = string;
/**
 * Approved Community Member Number (ACM). It is required to be provided along with ITARExemptionNumber for some License code (SGB and SAU). The ACM# for the United Kingdom (License code SGB) must begin with UK followed by 9 numbers.  The ACM# for Australia (License Code SAU) must begin with DTT followed by 8 numbers.  Applies to EEI form only.  It is required for EEIFilingOption code 1A and 3.
 * @export
 */
export type DDTCInformationACMNumber = string;
/**
 * Presence/Absent indicator. Certification by the U.S. exporter that the exporter is an eligible party to participate in the defense trade.
 * @export
 */
export type DDTCInformationEligiblePartyIndicator = string;
/**
 * The specific citation (exemption number) under the International Traffic in Arms Regulations (ITAR) from the Code of Federal Register (see 22 CFR 120-130) that exempts the shipment from the requirements for a license or other written authorization from the Directorate of Trade Controls (DDTC).  Refer to EEI License Codes in the Appendix for valid values.  Applies to EEI Form only. This field is applicable for EEIFiling option 1A and 3.
 * @export
 */
export type DDTCInformationITARExemptionNumber = string;
/**
 * Export Quantity.  Applies to EEI form only. It is required for EEIFilingOption code 3. Only positive integer value is valid.
 * @export
 */
export type DDTCInformationQuantity = string;
/**
 * It is a unique registration code assigned to the registrant. The DDTC registration code consist of a letter prefix, M (assigned to a manufacturer and/or exporter) or K (assigned to a broker), followed by four or five digits (e.g. K-1234 or M12345).  It is required for EEIFilingOption code 3.
 * @export
 */
export type DDTCInformationRegistrationNumber = string;
/**
 * Presence/ Absence Indicator.  Applies to EEI form only.
 * @export
 */
export type DDTCInformationSignificantMilitaryEquipmentIndicator = string;
/**
 * Digit numeric code (e.g. 01-18, 20 or 21). Indicates the U.S. Munitions List (USML) category article, service or related technical data as it applies to the article reported.  Applies to EEI form only. It is required for EEIFilingOption code 3.
 * @export
 */
export type DDTCInformationUSMLCategoryCode = string;
/**
 * Container for unit of measurement.  Applies to EEI form only. It is required for EEIFilingOption code 3.
 * @export
 * @interface DDTCInformationUnitOfMeasurement
 */
export interface DDTCInformationUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof DDTCInformationUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof DDTCInformationUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Date of signing the declaration form.  Valid format is YYYYMMDD.
 * @export
 */
export type DGSignatoryInfoDate = string;
/**
 * Name of the person signing the declaration.   Note: The name of person or department he/she is employed with, are both acceptable.
 * @export
 */
export type DGSignatoryInfoName = string;
/**
 * The city of the Signatory.
 * @export
 */
export type DGSignatoryInfoPlace = string;
/**
 * Valid values: 01 = Shipment level 02 = Package level                                              Valid only for the Shipper Declaration paper. If missing or invalid DGPaperImage will be returned at package level.
 * @export
 */
export type DGSignatoryInfoShipperDeclaration = string;
/**
 * Title of the person signing the declaration. Note: The title of the person or department he/she is employed with, are both acceptable.
 * @export
 */
export type DGSignatoryInfoTitle = string;
/**
 * Dangerous Goods Paper Upload Only Indicator. DG Paper will not be returned in response if UploadOnlyIndicator present.
 * @export
 */
export type DGSignatoryInfoUploadOnlyIndicator = string;
/**
 * Declared value amount currency type. Defaults to the non-Euro currency used in the shippers country or territory.  Code must represent a currency that is a valid for Shipper country or territory.
 * @export
 */
export type DeclaredValueCurrencyCode = string;
/**
 * Declared value amount.
 * @export
 */
export type DeclaredValueMonetaryValue = string;
/**
 * Container for Declared Value Type.
 * @export
 * @interface DeclaredValueType
 */
export interface DeclaredValueType {
    /**
     * The code associated with Handling Unit Type.  Valid values: SKD = Skid CBY = Carboy  PLT = Pallet TOT = Totes  LOO = Loose OTH = Other
     * @type {string}
     * @memberof DeclaredValueType
     */
    Code: string;
    /**
     * A description of the code for the Handling Unit type.
     * @type {string}
     * @memberof DeclaredValueType
     */
    Description?: string;
}
/**
 * Delivery Confirmation Control number associated with the delivery confirmation for the package.  Valid for forward shipments only.
 * @export
 */
export type DeliveryConfirmationDCISNumber = string;
/**
 * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation 2 - Delivery Confirmation Signature Required 3 - Delivery Confirmation Adult Signature Required
 * @export
 */
export type DeliveryConfirmationDCISType = string;
/**
 * UnitOfMeasurement Container.  N/A
 * @export
 * @interface DimWeightUnitOfMeasurement
 */
export interface DimWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units.
     * Valid values: KGS, LBS
     * @type {string}
     * @memberof DimWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof DimWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Actual package weight.  Weight accepted for letters/envelopes.
 * @export
 */
export type DimWeightWeight = string;
/**
 * The height of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsHeight = string;
/**
 * The length of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsLength = string;
/**
 * UnitOfMeasurement container.
 * @export
 * @interface DimensionsUnitOfMeasurement
 */
export interface DimensionsUnitOfMeasurement {
    /**
     * Code of the billing dimensions measurement units.
     * Valid values: IN, CM
     * @type {string}
     * @memberof DimensionsUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing dimensions measurement units.
     * @type {string}
     * @memberof DimensionsUnitOfMeasurement
     */
    Description?: string;
}
/**
 * The width of the line item used to determine dimensional weight.
 * @export
 */
export type DimensionsWidth = string;
/**
 * Code representing type of Disclaimer.   Refer to Disclaimer Codes and Messages in the Appendix for various disclaimers that would be possible for a given shipment.
 * @export
 */
export type DisclaimerCode = string;
/**
 * Disclaimer description.   This field would be returned only if TaxInformationIndicator is present in a request.  Refer to Disclaimer Codes and Messages in the Appendix for various disclaimers that would be possible for a given shipment.
 * @export
 */
export type DisclaimerDescription = string;
/**
 * Discount Amount currency code.
 * @export
 */
export type DiscountAmountCurrencyCode = string;
/**
 * Discount amount monetary value.  Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type DiscountAmountMonetaryValue = string;
/**
 * The discount to be subtracted from the sum of the total value on the invoice.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.�  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places. This value should be greater than or equal to zero or less than or equal to the value of all goods listed on the invoice.
 * @export
 */
export type DiscountMonetaryValue = string;
/**
 * Container for Dry Ice weight.
 * @export
 * @interface DryIceDryIceWeight
 */
export interface DryIceDryIceWeight {
    /**
     *
     * @type {DryIceWeightUnitOfMeasurement}
     * @memberof DryIceDryIceWeight
     */
    UnitOfMeasurement: DryIceWeightUnitOfMeasurement;
    /**
     * Dry Ice Weight.  Cannot be more than package weight. Should be more than 0.0. Valid characters are 0-9 and \".\" (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including \".\" and can hold up to 1 decimal place.
     * @type {string}
     * @memberof DryIceDryIceWeight
     */
    Weight: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 Kgs or 5.7 Lbs.
 * @export
 */
export type DryIceMedicalUseIndicator = string;
/**
 * Regulation set for dryIce Shipment. Valid values: CFR = HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada, IATA= Worldwide Air movement.  The following values are valid: IATA, CFR.
 * @export
 */
export type DryIceRegulationSet = string;
/**
 * Container for Unit of measurement for Dry Ice Weight.
 * @export
 * @interface DryIceWeightUnitOfMeasurement
 */
export interface DryIceWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof DryIceWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof DryIceWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Dry Ice Weight.  Cannot be more than package weight. Should be more than 0.0. Valid characters are 0-9 and \".\" (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including \".\" and can hold up to 1 decimal place.
 * @export
 */
export type DryIceWeightWeight = string;
/**
 * Required for EEI Form.  Applicable for EEI form. Valid values:  1 - Shipper filed, 2 - AES Direct,  3 - UPS filed.
 * @export
 */
export type EEIFilingOptionCode = string;
/**
 * Optional Description of Filing Code.  Applicable for EEI form.
 * @export
 */
export type EEIFilingOptionDescription = string;
/**
 * Email Address where the notification is sent. Valid for UPS filed (option 3), Shipper filed (option 1- A , 1-C)  Applicable for EEI form.
 * @export
 */
export type EEIFilingOptionEMailAddress = string;
/**
 * Indicates the EEI Shipper Filed option or AES Direct. (Option 1 or 2).  Applicable for EEI form.
 * @export
 * @interface EEIFilingOptionShipperFiled
 */
export interface EEIFilingOptionShipperFiled {
    /**
     * Indicates the EEI Shipper sub option.  Applicable for EEI form and is required. Valid value is: A- requires the ITN; B- requires the Exemption Legend; C- requires the post departure filing citation.
     * @type {string}
     * @memberof EEIFilingOptionShipperFiled
     */
    Code: string;
    /**
     * Description of ShipperFiled Code.  Applicable for EEI form.
     * @type {string}
     * @memberof EEIFilingOptionShipperFiled
     */
    Description?: string;
    /**
     * Input for Shipper Filed option A and AES Direct. The format is available from AESDirect website.  Valid and Required for Shipper Filed option A. EEI form only.
     * @type {string}
     * @memberof EEIFilingOptionShipperFiled
     */
    PreDepartureITNNumber?: string;
    /**
     * Input for Shipper Filed option B. 30.2(d)(2), 30.26(a), 30.36, 30.37(a), 30.37(b), 30.37(c), 30.37(d), 30.37(e), 30.37(f), 30.37(h), 30.37(i), 30.30(j), 30.37(k), 30.37(i), 30.37(j), 30.37(k), 30.37(l), 30.37(m), 30.37(n), 30.37(o), 30.37(p), 30.37(q), 30.37(r), 30.37(s), 30.37(t), 30.37(u), 30.37(x), 30.37(y)(1), 30.37(y)(2), 30.37(y)(3), 30.37(y)(4), 30.37(y)(5), 30.37(y)(6), 30.39, 30.40(a), 30.40(b), 30.40(c), 30.40(d), 30.8(b)  Valid and Required for Shipper Filed option B. EEI form only.
     * @type {string}
     * @memberof EEIFilingOptionShipperFiled
     */
    ExemptionLegend?: string;
    /**
     * Shipment Reference Number for use during interaction with AES. Valid for EEI form for Shipper Filed option 'C' and AES Direct Filed.
     * @type {string}
     * @memberof EEIFilingOptionShipperFiled
     */
    EEIShipmentReferenceNumber?: string;
}
/**
 * Indicates the EEI UPS Filed option. (option 3)  Applicable for EEI form.
 * @export
 * @interface EEIFilingOptionUPSFiled
 */
export interface EEIFilingOptionUPSFiled {
    /**
     *
     * @type {UPSFiledPOA}
     * @memberof EEIFilingOptionUPSFiled
     */
    POA: UPSFiledPOA;
}
/**
 * Department of State/ Directorate of Defense Trade Control Information. This element is a container for additional information that is applicable to SDL products. It will only be evaluated if the provided license code is an SDL code.  Applies to EEI Form only.
 * @export
 * @interface EEIInformationDDTCInformation
 */
export interface EEIInformationDDTCInformation {
    /**
     * The specific citation (exemption number) under the International Traffic in Arms Regulations (ITAR) from the Code of Federal Register (see 22 CFR 120-130) that exempts the shipment from the requirements for a license or other written authorization from the Directorate of Trade Controls (DDTC).  Refer to EEI License Codes in the Appendix for valid values.  Applies to EEI Form only. This field is applicable for EEIFiling option 1A and 3.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    ITARExemptionNumber?: string;
    /**
     * Digit numeric code (e.g. 01-18, 20 or 21). Indicates the U.S. Munitions List (USML) category article, service or related technical data as it applies to the article reported.  Applies to EEI form only. It is required for EEIFilingOption code 3.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    USMLCategoryCode?: string;
    /**
     * Presence/Absent indicator. Certification by the U.S. exporter that the exporter is an eligible party to participate in the defense trade.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    EligiblePartyIndicator?: string;
    /**
     * It is a unique registration code assigned to the registrant. The DDTC registration code consist of a letter prefix, M (assigned to a manufacturer and/or exporter) or K (assigned to a broker), followed by four or five digits (e.g. K-1234 or M12345).  It is required for EEIFilingOption code 3.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    RegistrationNumber?: string;
    /**
     * Export Quantity.  Applies to EEI form only. It is required for EEIFilingOption code 3. Only positive integer value is valid.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    Quantity?: string;
    /**
     *
     * @type {DDTCInformationUnitOfMeasurement}
     * @memberof EEIInformationDDTCInformation
     */
    UnitOfMeasurement?: DDTCInformationUnitOfMeasurement;
    /**
     * Presence/ Absence Indicator.  Applies to EEI form only.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    SignificantMilitaryEquipmentIndicator?: string;
    /**
     * Approved Community Member Number (ACM). It is required to be provided along with ITARExemptionNumber for some License code (SGB and SAU). The ACM# for the United Kingdom (License code SGB) must begin with UK followed by 9 numbers.  The ACM# for Australia (License Code SAU) must begin with DTT followed by 8 numbers.  Applies to EEI form only.  It is required for EEIFilingOption code 1A and 3.
     * @type {string}
     * @memberof EEIInformationDDTCInformation
     */
    ACMNumber?: string;
}
/**
 * Required for EEI form id it is a SDL product. Valid values: LC, LV, SS,MS, GS, DP, HR, UG, IC, SC, DD, HH, SR, TE,TL, IS, CR, GP, RJ, TP, IP, IR, DB, CH, RS, OS  Applies to EEI form only. Required if EEIFilingOption code 3 specified for EEI form.
 * @export
 */
export type EEIInformationExportInformation = string;
/**
 * Licence information for SDL commodity.  Applies to EEI form only.
 * @export
 * @interface EEIInformationLicense
 */
export interface EEIInformationLicense {
    /**
     * Represents any one of the following values: export license number, exception code, CFR citation, KPC Number, ACM Number.  Applies to EEI form only.  Refer to EEI License Types and Exemptions in the Appendix  for valid values and formats.
     * @type {string}
     * @memberof EEIInformationLicense
     */
    Number?: string;
    /**
     * The standard license code published by US government.  Refer to EEI License Codes in the Appendix for valid values.  Applies to EEI form only. It is required for EEIFilingOption code 3. It is optionally required for all other filing types; however, it is used to categorize each product as SDL or non-SDL.  It is also used to identify which piece of information is applicable.
     * @type {string}
     * @memberof EEIInformationLicense
     */
    Code?: string;
    /**
     * The export monetary amount allowed per license. Required for a licensable product when the EEI form is selected. Format: Whole numbers only.  Applies to EEI form only. Required if EEIFilingOption code 1A (only for SDL shipments) or 3.
     * @type {string}
     * @memberof EEIInformationLicense
     */
    LicenseLineValue?: string;
    /**
     * Product ECCN Number issued by BIS (Bureau of Industry and Security). If the license number is a commerce license, ECCN must be provided. The format is #A### or EAR99  Applies to EEI forms only. It is required for EEIFilingOption code 3. ECCN is required one of the following License Exception Codes is entered: CIV, CTP, ENC, GBS, KMI, LVS, TSR
     * @type {string}
     * @memberof EEIInformationLicense
     */
    ECCNNumber?: string;
}
/**
 * The destination email address of the receiver returns notification email.
 * @export
 */
export type EMailEMailAddress = string;
/**
 * The email address listed in the Reply To field of the message header, includes name and e-mail address of sender. The \"From\" field of the message header contains pkginfo@ups.com.  Only allowed at the first package.
 * @export
 */
export type EMailFromEMailAddress = string;
/**
 * The name the receiver return notification will appear to be from.  Defaults to the Shipper Name.� Only allowed at the first package.
 * @export
 */
export type EMailFromName = string;
/**
 * User defined text that will be included in the email.  Only allowed at the first package.
 * @export
 */
export type EMailMemo = string;
/**
 * EMailAddress where PreAlertNotification is sent.
 * @export
 */
export type EMailMessageEMailAddress = string;
/**
 * This is used for notification when EMailAddress for PreAlertNotification is undeliverable.
 * @export
 */
export type EMailMessageUndeliverableEMailAddress = string;
/**
 * The eMails subject. Defaults to the UPS Receiver Return Notification plus the shipment ID.  Only allowed at the first package.
 * @export
 */
export type EMailSubject = string;
/**
 * Specifies a reference code and reference number to display in the subject of the Receiver Return Notification.�   When the subject code is provided, the subject will contain the following: UPS Receiver Return Notification.�   The reference code (the reference code will be mapped to the corresponding ANSI value) Plus the reference number.  The valid subject codes are: 01 - Shipment Reference Number 1,  02 - Shipment Reference Number 2,   03 - package Reference Number 1,  04 - package Reference Number 2, 05 - package Reference Number 3, 06 - package Reference Number 4, 07 - package Reference Number 5, 08 - Subject Text (Return Notification only).  If the subject code tag is not provided and the subject text is provided, the subject of the notification will be the subject text.�   If the subject text is provided, and subject code tag exists, then the subject code value must be 08.   If the subject code is 08, the subject text must exist. If a subject code is provided that refers to a nonexistent reference number, the subject will default to the tracking number.� Only allowed at the first package.
 * @export
 */
export type EMailSubjectCode = string;
/**
 * The e-mail address where an undeliverable email message is sent if the Receiver Return Notification email is undeliverable.  Defaults to FromEMailAddress.� Only allowed at the first package.
 * @export
 */
export type EMailUndeliverableEMailAddress = string;
/**
 * Indicates the name of the International form requested to NOT have product information.  Possible Values are 04 � NAFTA CO.  Please note that if this is used and you DO NOT have the corresponding form type requested this will be IGNORED.
 * @export
 */
export type ExcludeFromFormFormType = string;
/**
 * The UPS account number.  If the Ground Freight Pricing indicator and FreightShipmentInformation/DensityEligibleIndicator is present in the request, this account number must be validated to check if it is Ground Freight Pricing Density Based Rating enabled.
 * @export
 */
export type FRSPaymentInformationAccountNumber = string;
/**
 * Container to hold the information for the FreightCollect and PrepaidThirdParty Address.  Note: The Address is required only when the billing option is Freight collect or ThirdParty.
 * @export
 * @interface FRSPaymentInformationAddress
 */
export interface FRSPaymentInformationAddress {
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof FRSPaymentInformationAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof FRSPaymentInformationAddress
     */
    CountryCode: string;
}
/**
 * Container to hold the Ground Freight Pricing payment type information.  It is required if the request has Ground Freight Pricing shipment indicator.
 * @export
 */
export type FRSPaymentInformationType = string;
/**
 * FreightDensityRate container for Density based rating.
 * @export
 * @interface FRSShipmentDataFreightDensityRate
 */
export interface FRSShipmentDataFreightDensityRate {
    /**
     * Density is returned if the Shipper is eligible for Density based rate.   Valid values are 0 to 999.9
     * @type {string}
     * @memberof FRSShipmentDataFreightDensityRate
     */
    Density: string;
    /**
     * Total Cubic feet is returned if the Shipper is eligible for Density based rate.   Valid values are 0 to 99999.999
     * @type {string}
     * @memberof FRSShipmentDataFreightDensityRate
     */
    TotalCubicFeet: string;
}
/**
 * Handling Unit for Density based rating container.
 * @export
 * @interface FRSShipmentDataHandlingUnits
 */
export interface FRSShipmentDataHandlingUnits {
    /**
     * Handling Unit Quantity for Density based rating.
     * @type {string}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Quantity: string;
    /**
     *
     * @type {HandlingUnitsType}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Type: HandlingUnitsType;
    /**
     *
     * @type {HandlingUnitsDimensions}
     * @memberof FRSShipmentDataHandlingUnits
     */
    Dimensions: HandlingUnitsDimensions;
    /**
     *
     * @type {HandlingUnitsAdjustedHeight}
     * @memberof FRSShipmentDataHandlingUnits
     */
    AdjustedHeight?: HandlingUnitsAdjustedHeight;
}
/**
 * Transportation charges container. Ground Freight Pricing transportation charges. These are only returned for Ground Freight Pricing enabled shipper account number when the user includes the FRSShipmentIndicator in the request.
 * @export
 * @interface FRSShipmentDataTransportationCharges
 */
export interface FRSShipmentDataTransportationCharges {
    /**
     *
     * @type {TransportationChargesGrossCharge}
     * @memberof FRSShipmentDataTransportationCharges
     */
    GrossCharge: TransportationChargesGrossCharge;
    /**
     *
     * @type {TransportationChargesDiscountAmount}
     * @memberof FRSShipmentDataTransportationCharges
     */
    DiscountAmount: TransportationChargesDiscountAmount;
    /**
     * It indicates the shipment level discount percentage for transportation charges.
     * @type {string}
     * @memberof FRSShipmentDataTransportationCharges
     */
    DiscountPercentage: string;
    /**
     *
     * @type {TransportationChargesNetCharge}
     * @memberof FRSShipmentDataTransportationCharges
     */
    NetCharge: TransportationChargesNetCharge;
}
/**
 * Code that indicates the type of form.�   Applicable only for ShipmentResponse and ShipAcceptResponse.  Valid values: 01 - All Requested International Forms.
 * @export
 */
export type FormCode = string;
/**
 * Description that indicates the type of form. Possible Values. All Requested International Forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type FormDescription = string;
/**
 * Unique Id for later retrieval of saved version of the completed international forms. Always returned when code = 01. 01 represents international forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type FormFormGroupId = string;
/**
 * Contains description text which identifies the group of International forms. This element is part of both request and response. This element does not appear on the forms.    Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type FormFormGroupIdName = string;
/**
 * Container tag for the International forms image.     Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface FormImage
 */
export interface FormImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof FormImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 Encoded PDF Image.
     * @type {string}
     * @memberof FormImage
     */
    GraphicImage: string;
}
/**
 * Address information of the Forwarding agent.  Applicable for EEI form only.
 * @export
 * @interface ForwardAgentAddress
 */
export interface ForwardAgentAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s town code.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    Town?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof ForwardAgentAddress
     */
    CountryCode: string;
}
/**
 * Company Name or the Individual name of the Forwarding agent.  Applicable for EEI form only.
 * @export
 */
export type ForwardAgentCompanyName = string;
/**
 * Tax ID of the Forwarding agent. Valid Values: (Below values are applicable for EEIFilingOption Code =3) 94-308351500  13-168669100     Applicable for EEI form only.
 * @export
 */
export type ForwardAgentTaxIdentificationNumber = string;
/**
 * Cost to transport the shipment.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.�  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.
 * @export
 */
export type FreightChargesMonetaryValue = string;
/**
 * Container for the adjusted height.  Required if AdjustedHeightIndicator is present.
 * @export
 * @interface FreightDensityInfoAdjustedHeight
 */
export interface FreightDensityInfoAdjustedHeight {
    /**
     * Adjusted Height value for the handling unit.  Height Adjustment is done only when Handling unit type is SKD = Skid or PLT = Pallet.
     * @type {string}
     * @memberof FreightDensityInfoAdjustedHeight
     */
    Value: string;
    /**
     *
     * @type {AdjustedHeightUnitOfMeasurement}
     * @memberof FreightDensityInfoAdjustedHeight
     */
    UnitOfMeasurement: AdjustedHeightUnitOfMeasurement;
}
/**
 * The presence of the AdjustedHeightIndicator indicates that allow the height reduction adjustment for density based rate request.
 * @export
 */
export type FreightDensityInfoAdjustedHeightIndicator = string;
/**
 * Handling Unit for Density based rating container.
 * @export
 * @interface FreightDensityInfoHandlingUnits
 */
export interface FreightDensityInfoHandlingUnits {
    /**
     * Handling Unit Quantity for Density based rating.
     * @type {string}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Quantity: string;
    /**
     *
     * @type {HandlingUnitsType}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Type: HandlingUnitsType;
    /**
     *
     * @type {HandlingUnitsDimensions}
     * @memberof FreightDensityInfoHandlingUnits
     */
    Dimensions: HandlingUnitsDimensions;
}
/**
 * Density is returned if the Shipper is eligible for Density based rate.   Valid values are 0 to 999.9
 * @export
 */
export type FreightDensityRateDensity = string;
/**
 * Total Cubic feet is returned if the Shipper is eligible for Density based rate.   Valid values are 0 to 99999.999
 * @export
 */
export type FreightDensityRateTotalCubicFeet = string;
/**
 * The presence of the tag indicates that the rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.
 * @export
 */
export type FreightShipmentInformationDensityEligibleIndicator = string;
/**
 * Freight Density Info container.  Required if DensityEligibleIndicator is present.
 * @export
 * @interface FreightShipmentInformationFreightDensityInfo
 */
export interface FreightShipmentInformationFreightDensityInfo {
    /**
     * The presence of the AdjustedHeightIndicator indicates that allow the height reduction adjustment for density based rate request.
     * @type {string}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    AdjustedHeightIndicator?: string;
    /**
     *
     * @type {FreightDensityInfoAdjustedHeight}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    AdjustedHeight?: FreightDensityInfoAdjustedHeight;
    /**
     *
     * @type {Array<FreightDensityInfoHandlingUnits>}
     * @memberof FreightShipmentInformationFreightDensityInfo
     */
    HandlingUnits?: Array<FreightDensityInfoHandlingUnits>;
}
/**
 * Gross charges currency code.
 * @export
 */
export type GrossChargeCurrencyCode = string;
/**
 * Gross charges monetary value.  Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type GrossChargeMonetaryValue = string;
/**
 * Handling Instruction for UPS Premier package.  Please refer Apendix UPS Premier Handling Instructions.
 * @export
 */
export type HandlingInstructionsInstruction = string;
/**
 * Container to hold Adjusted Height information.
 * @export
 * @interface HandlingUnitsAdjustedHeight
 */
export interface HandlingUnitsAdjustedHeight {
    /**
     * Adjusted Height value for the handling unit.  Height Adjustment is done only when Handling unit type is SKD = Skid or PLT = Pallet.
     * @type {string}
     * @memberof HandlingUnitsAdjustedHeight
     */
    Value: string;
    /**
     *
     * @type {AdjustedHeightUnitOfMeasurement}
     * @memberof HandlingUnitsAdjustedHeight
     */
    UnitOfMeasurement: AdjustedHeightUnitOfMeasurement;
}
/**
 * Dimension of the HandlingUnit container for density based pricing.
 * @export
 * @interface HandlingUnitsDimensions
 */
export interface HandlingUnitsDimensions {
    /**
     *
     * @type {DimensionsUnitOfMeasurement}
     * @memberof HandlingUnitsDimensions
     */
    UnitOfMeasurement: DimensionsUnitOfMeasurement;
    /**
     * The length of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Length: string;
    /**
     * The width of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Width: string;
    /**
     * The height of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof HandlingUnitsDimensions
     */
    Height: string;
}
/**
 * Handling Unit Quantity for Density based rating.
 * @export
 */
export type HandlingUnitsQuantity = string;
/**
 * Handling Unit Type for Density based rating.
 * @export
 * @interface HandlingUnitsType
 */
export interface HandlingUnitsType {
    /**
     * The code associated with Handling Unit Type.  Valid values: SKD = Skid CBY = Carboy  PLT = Pallet TOT = Totes  LOO = Loose OTH = Other
     * @type {string}
     * @memberof HandlingUnitsType
     */
    Code: string;
    /**
     * A description of the code for the Handling Unit type.
     * @type {string}
     * @memberof HandlingUnitsType
     */
    Description?: string;
}
/**
 * The type of regulated good for an ADR package where ADR is for Europe to Europe ground movement.
 * @export
 */
export type HazMatADRItemNumber = string;
/**
 * Required if the field applies to the material by regulation. Field input is Arabic numerals, output is Roman numerals. Will be shown in Roman Numerals.  Valid values:  �1� = �I�,  �2� = �II�,  �3� = �III�,  and blank.
 * @export
 */
export type HazMatADRPackingGroupLetter = string;
/**
 * Additional remarks or special provision information. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.
 * @export
 */
export type HazMatAdditionalDescription = string;
/**
 * Identifies the Chemical Record.  Required if SubVersion is greater than or equal to 1701.
 * @export
 */
export type HazMatChemicalRecordIdentifier = string;
/**
 * This is the hazard class associated to the specified commodity.   Required if CommodityRegulatedLevelCode is 'EQ', �LQ� or �FR�
 * @export
 */
export type HazMatClassDivisionNumber = string;
/**
 * Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ) or Lightly Regulated (LR).  Valid values are LR, FR, LQ and EQ. Required for subversion 1701 or greater. LR and EQ are validated if subversion is 1701 or greater. FR, LQ will be validated if subversion is 1807 or greater
 * @export
 */
export type HazMatCommodityRegulatedLevelCode = string;
/**
 * The emergency information, contact name and/or contract number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.
 * @export
 */
export type HazMatEmergencyContact = string;
/**
 * 24 Hour Emergency Phone Number of the shipper. Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is 1, area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.                        The following are restricted in the phone number   period �.�, dash �-�, plus sign �+� and conventional parentheses �(� and �)�, �EXT\" or \"OPT�
 * @export
 */
export type HazMatEmergencyPhone = string;
/**
 * Defines the type of label that is required on the package for the commodity.   Not applicable if CommodityRegulatedLevelCode = LR or EQ.
 * @export
 */
export type HazMatHazardLabelRequired = string;
/**
 * This is the ID number (UN/NA/ID) for the specified commodity.  Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation.  UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).
 * @export
 */
export type HazMatIDNumber = string;
/**
 * Proper shipping name in local langauge.
 * @export
 */
export type HazMatLocalProperShippingName = string;
/**
 * Technical name in local language.
 * @export
 */
export type HazMatLocalTechnicalName = string;
/**
 * Presence/Absence Indicator. Any value is ignored. Presence indicates if multiple, different hazmat/chemicals are contained within one box in a package  When number of Hazmat containers in a package is more than one, either AllPackedInOneIndicator or OverPackedIndicator is needed
 * @export
 */
export type HazMatPackageInformationAllPackedInOneIndicator = string;
/**
 * This field is used for the Outer Hazmat packaging type.  Ex. FIBERBOARD BOX, WOOD(EN) BOX, PLASTIC JERRICAN, METAL BOX, STEEL DRUM, OTHER, PLASTIC BOX, PLASTIC DRUM, STYROFOAM BOX, CYLINDERS, ENVIROTAINER, PLYWOOD BOX, ALUMINUM DRUM, ALUMINUM CYLINDERS, PLASTIC PAIL, PLYWOOD DRUM, FIBER DRUM, STEEL JERRICAN, ALUMINUM JERRICAN, STEEL BOX, CARTON, ALUMINUM BOX
 * @export
 */
export type HazMatPackageInformationOuterPackagingType = string;
/**
 * Presence/Absence Indicator. Any value is ignored. Presence indicates that one or more hazmat/chemicals are in separate boxes in a package.  When number of Hazmat containers in a package is more than one, either AllPackedInOneIndicator or OverPackedIndicator is needed
 * @export
 */
export type HazMatPackageInformationOverPackedIndicator = string;
/**
 * When a HazMat shipment specifies AllPackedInOneIndicator and the regulation set for that shipment is IATA, Ship API must require the shipment to specify a Q-Value with exactly one of the following values: 0.1; 0.2; 0.3; 0.4; 0.5; 0.6; 0.7; 0.8; 0.9; 1.0
 * @export
 */
export type HazMatPackageInformationQValue = string;
/**
 * This is the packing group category associated to the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals.   Valid values: I II III blank
 * @export
 */
export type HazMatPackagingGroupType = string;
/**
 * The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.
 * @export
 */
export type HazMatPackagingInstructionCode = string;
/**
 * The type of package used to contain the regulated good. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Ex. FIBERBOARD BOX, WOOD(EN) BOX, PLASTIC JERRICAN, METAL BOX, STEEL DRUM, OTHER, PLASTIC BOX, PLASTIC DRUM, STYROFOAM BOX, CYLINDERS, ENVIROTAINER, PLYWOOD BOX, ALUMINUM DRUM, ALUMINUM CYLINDERS, PLASTIC PAIL, PLYWOOD DRUM, FIBER DRUM, STEEL JERRICAN, ALUMINUM JERRICAN, STEEL BOX, CARTON, ALUMINUM BOX
 * @export
 */
export type HazMatPackagingType = string;
/**
 * The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR.  Valid values are 1 to 999.
 * @export
 */
export type HazMatPackagingTypeQuantity = string;
/**
 * The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.
 * @export
 */
export type HazMatProperShippingName = string;
/**
 * Required if CommodityRegulatedLevelCode = EQ, LQ or FR. The numerical value of the mass capacity of the regulated good.  Should be more than 0.0. Valid characters are 0-9 and \".\" (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including \".\" (Decimal point) and can hold up to 1 decimal place.
 * @export
 */
export type HazMatQuantity = string;
/**
 * Reserved for future use.
 * @export
 */
export type HazMatRecordIdentifier1 = string;
/**
 * Reserved for future use.
 * @export
 */
export type HazMatRecordIdentifier2 = string;
/**
 * Reserved for future use.
 * @export
 */
export type HazMatRecordIdentifier3 = string;
/**
 * Optional reference number. It will be displayed only on label.
 * @export
 */
export type HazMatReferenceNumber = string;
/**
 * The Regulatory set associated with every regulated shipment. It must be same across the shipment.  Valid values:  ADR = Europe to Europe Ground Movement  CFR = HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada  IATA= Worldwide Air movement  TDG= Canada to Canada ground movement or Canada to U.S. standard movement.  Valid values are ADR, CFR, IATA and TDG. For multiple Chemical Records per package or multiple packages containing different RegulationSet, RegulationSet of first Chemical Record would be considered for validating and rating the entire shipment.
 * @export
 */
export type HazMatRegulationSet = string;
/**
 * Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered.
 * @export
 */
export type HazMatReportableQuantity = string;
/**
 * Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.   Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).
 * @export
 */
export type HazMatSubRiskClass = string;
/**
 * The technical name (when required) for the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.
 * @export
 */
export type HazMatTechnicalName = string;
/**
 * Transport Category.  Valid values are 0 to 4.
 * @export
 */
export type HazMatTransportCategory = string;
/**
 * Not applicable for ADR regulation set. Required for any other regulation set. Declares that a package was prepared according to ground passenger aircraft or cargo aircraft only.  Valid values:  Highway=Highway  Ground=Ground  PAX=Passenger Aircraft  Passenger Aircraft=Passenger Aircraft  CAO=Cargo Aircraft Only  Cargo Aircraft Only=Cargo Aircraft Only  Valid entries include: Highway, Ground, PAX, Passenger Aircraft, CAO and Cargo Aircraft Only.
 * @export
 */
export type HazMatTransportationMode = string;
/**
 * Defines what is restricted to pass through a tunnel.
 * @export
 */
export type HazMatTunnelRestrictionCode = string;
/**
 * Required if CommodityRegulatedLevelCode = LQ, EQ or FR. The unit of measure used for the mass capacity of the regulated good.   For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.
 * @export
 */
export type HazMatUOM = string;
/**
 * Container for the High Value Report image for Import Control Shipments.
 * @export
 * @interface HighValueReportImage
 */
export interface HighValueReportImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof HighValueReportImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 Encoded PDF Image.
     * @type {string}
     * @memberof HighValueReportImage
     */
    GraphicImage: string;
}
/**
 * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
 * @export
 */
export type ImageFormatCode = string;
/**
 * Description of the image format.
 * @export
 */
export type ImageFormatDescription = string;
/**
 * Base 64 Encoded PDF Image.
 * @export
 */
export type ImageGraphicImage = string;
/**
 * Container for the High Value Report image format information for Import Control Shipments.
 * @export
 * @interface ImageImageFormat
 */
export interface ImageImageFormat {
    /**
     * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
     * @type {string}
     * @memberof ImageImageFormat
     */
    Code: string;
    /**
     * Description of the image format.
     * @type {string}
     * @memberof ImageImageFormat
     */
    Description?: string;
}
/**
 * For Exchange Forward Shipment, by default Label will have Exchange Routing instruction Text as EXCHANGE-LIKE ITEM ONLY. If code value is: 01- EXCHANGE-LIKE ITEM ONLY, 02- EXCHANGE-DRIVER INSTRUCTIONS INSIDE.
 * @export
 */
export type InstructionCode = string;
/**
 * Description of the label Instruction code.
 * @export
 */
export type InstructionDescription = string;
/**
 * The amount the shipper or receiver pays to cover the cost of replacing the shipment if it is lost or damaged.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and '.'  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including '.' and can hold up to 2 decimal places.
 * @export
 */
export type InsuranceChargesMonetaryValue = string;
/**
 * Address information of the Intermediate Consignee.  Applicable for EEI form only.
 * @export
 * @interface IntermediateConsigneeAddress
 */
export interface IntermediateConsigneeAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s town code.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    Town?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof IntermediateConsigneeAddress
     */
    CountryCode: string;
}
/**
 * Company Name or the Individual name of the Intermediate consignee.  Applicable for EEI form only.
 * @export
 */
export type IntermediateConsigneeCompanyName = string;
/**
 * Presence of the indicator means user will supply additional document, such as EEI, NAFTA_CO or CO.  This indicator should be set when the shipper intends to utilize UPS paperless invoice functionality AND the shipper has SELF-PREPARED other International Forms (EEI, CO, NAFTACO) to accompany the shipment.  It is evaluated only when:  1. Account is paperless enabled.  2. Movement requires an invoice. 3. Destination country or territory accepts paperless invoice.  4. Invoice data is supplied by the client and the data passes validation.
 * @export
 */
export type InternationalFormsAdditionalDocumentIndicator = string;
/**
 * This field should be entered if the  NAFTA Certificate covers multiple shipments of identical goods as described in the Description of Goods field that are imported into a NAFTA country or territory for a specified period of up to one year (the blanket period). The importation of a good for which preferential treatment is claimed based on this certificate must occur between these dates.  Applies to NAFTA CO form only. Required for NAFTA CO.  This is not valid for a paperless shipment.
 * @export
 * @interface InternationalFormsBlanketPeriod
 */
export interface InternationalFormsBlanketPeriod {
    /**
     * Begin date of the blanket period. It is the date upon which the Certificate becomes applicable to the good covered by the blanket Certificate (it may be prior to the date of signing this Certificate).  Applies to NAFTA CO form only. Required for NAFTA CO. Format is yyyyMMdd. This is not valid for a paperless shipment.
     * @type {string}
     * @memberof InternationalFormsBlanketPeriod
     */
    BeginDate: string;
    /**
     * End Date of the blanket period. It is the date upon which the blanket period expires.  Applies to NAFTA CO form only. Required for NAFTA CO. Format is yyyyMMdd.  This is not valid for a paperless shipment.
     * @type {string}
     * @memberof InternationalFormsBlanketPeriod
     */
    EndDate: string;
}
/**
 * Container for the CN22 form.  Required if the customer wants to use the UPS generated CN22.
 * @export
 * @interface InternationalFormsCN22Form
 */
export interface InternationalFormsCN22Form {
    /**
     * Provide the valid values:  6 = 4X6 1 = 8.5X11   Required if the CN22 form container is present.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    LabelSize: string;
    /**
     * Number of label per page. Currently 1 per page is supported.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    PrintsPerPage: string;
    /**
     * Valid Values are pdf, png, gif, zpl, star, epl2 and spl.   Required if the CN22 form container is present.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    LabelPrintType: string;
    /**
     * Valid values:  1 = GIFT 2 = DOCUMENTS 3 = COMMERCIAL SAMPLE 4 = OTHER  Required if the CN22 form container is present.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    CN22Type: string;
    /**
     * Required if CN22Type is OTHER.  Required if the CN22 form container is present.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    CN22OtherDescription?: string;
    /**
     * String will replace default \"Fold Here\" text displayed on the label.
     * @type {string}
     * @memberof InternationalFormsCN22Form
     */
    FoldHereText?: string;
    /**
     *
     * @type {CN22FormCN22Content}
     * @memberof InternationalFormsCN22Form
     */
    CN22Content: CN22FormCN22Content;
}
/**
 * The four-character Standard Carrier Alpha Code (SCAC) for vessel, rail, and truck shipments. For air shipment, enter the two or three character International Air Transport Association (IATA) code.  Applies to EEI forms only. No Validations.
 * @export
 */
export type InternationalFormsCarrierID = string;
/**
 * Any extra information about the current shipment.  Applies to Invoice and Partial Invoice forms only.
 * @export
 */
export type InternationalFormsComments = string;
/**
 * Holds the contact information of various parties.  Applicable for EEI and NAFTA CO only. Required for NAFTA CO and EEI. Ultimate consignee contact information is required for EEI.  Producer contact information is required for NAFTA CO
 * @export
 * @interface InternationalFormsContacts
 */
export interface InternationalFormsContacts {
    /**
     *
     * @type {ContactsForwardAgent}
     * @memberof InternationalFormsContacts
     */
    ForwardAgent?: ContactsForwardAgent;
    /**
     *
     * @type {ContactsUltimateConsignee}
     * @memberof InternationalFormsContacts
     */
    UltimateConsignee?: ContactsUltimateConsignee;
    /**
     *
     * @type {ContactsIntermediateConsignee}
     * @memberof InternationalFormsContacts
     */
    IntermediateConsignee?: ContactsIntermediateConsignee;
    /**
     *
     * @type {ContactsProducer}
     * @memberof InternationalFormsContacts
     */
    Producer?: ContactsProducer;
    /**
     *
     * @type {ContactsSoldTo}
     * @memberof InternationalFormsContacts
     */
    SoldTo?: ContactsSoldTo;
}
/**
 * If present indicates that the goods are containerized. This applies to vessel shipments only.  Applies to EEI forms only.
 * @export
 */
export type InternationalFormsContainerizedIndicator = string;
/**
 * Currency code for all the monetary values of the Invoice form.  Applies to Invoice and Partial Invoice forms only.
 * @export
 */
export type InternationalFormsCurrencyCode = string;
/**
 * This is the legal explanation, used by Customs, for the delivering of this shipment. It must be identical to the set of declarations actually used by Customs. Examples of declarations that might be entered in this field are: I hereby certify that the goods covered by this shipment qualify as originating goods for purposes of preferential tariff treatment under the NAFTA. I hereby certify that the information on this invoice is true and correct and the contents and value of this shipment is as stated above.  EEA statement:  The exporter of the products covered by this document declares that except where otherwise clearly indicated these products are of EEA preferential origin.  Applies to Invoice and Partial Invoice forms only. On the invoice for return shipment, the verbiage is as follows (user input is ignored): The exporter of the products covered by this document declares that except where otherwise clearly indicated these products are of EEA preferential origin
 * @export
 */
export type InternationalFormsDeclarationStatement = string;
/**
 * Container tag that holds the discount.  Applies to Invoice and Partial Invoice forms only.
 * @export
 * @interface InternationalFormsDiscount
 */
export interface InternationalFormsDiscount {
    /**
     * The discount to be subtracted from the sum of the total value on the invoice.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.�  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places. This value should be greater than or equal to zero or less than or equal to the value of all goods listed on the invoice.
     * @type {string}
     * @memberof InternationalFormsDiscount
     */
    MonetaryValue: string;
}
/**
 * EEI Filing option.  Applicable for EEI form and is required.
 * @export
 * @interface InternationalFormsEEIFilingOption
 */
export interface InternationalFormsEEIFilingOption {
    /**
     * Required for EEI Form.  Applicable for EEI form. Valid values:  1 - Shipper filed, 2 - AES Direct,  3 - UPS filed.
     * @type {string}
     * @memberof InternationalFormsEEIFilingOption
     */
    Code: string;
    /**
     * Email Address where the notification is sent. Valid for UPS filed (option 3), Shipper filed (option 1- A , 1-C)  Applicable for EEI form.
     * @type {string}
     * @memberof InternationalFormsEEIFilingOption
     */
    EMailAddress?: string;
    /**
     * Optional Description of Filing Code.  Applicable for EEI form.
     * @type {string}
     * @memberof InternationalFormsEEIFilingOption
     */
    Description?: string;
    /**
     *
     * @type {EEIFilingOptionUPSFiled}
     * @memberof InternationalFormsEEIFilingOption
     */
    UPSFiled?: EEIFilingOptionUPSFiled;
    /**
     *
     * @type {EEIFilingOptionShipperFiled}
     * @memberof InternationalFormsEEIFilingOption
     */
    ShipperFiled?: EEIFilingOptionShipperFiled;
}
/**
 * The Import Entry Number when the export transaction is used as proof of export for import transactions (examples: In Bond, Temporary Import Bond or Drawbacks).  Applies to EEI forms only. Conditionally Required for EEI forms when In bond code value is other than 70 (Not In Bond)
 * @export
 */
export type InternationalFormsEntryNumber = string;
/**
 * The date the goods will be exiting the country or territory.  Applies to CO and EEI forms only. Required for CO and EEI forms. Format is yyyyMMdd.
 * @export
 */
export type InternationalFormsExportDate = string;
/**
 * The name of the carrier that is exporting the shipment. The vessels flag number should also be entered, if the carrier is a vessel.  Applies to CO and EEI forms only. Required for CO and EEI forms.
 * @export
 */
export type InternationalFormsExportingCarrier = string;
/**
 * Contains description text which identifies the group of International forms. This element does not appear on the forms.
 * @export
 */
export type InternationalFormsFormGroupIdName = string;
/**
 * Indicates the name of the International Form requested. Valid values:   01 - Invoice 03 - CO 04 - NAFTA CO 05 - Partial Invoice 06 - Packinglist 07 - Customer Generated Forms 08 � Air Freight Packing List 09 - CN22 Form 10 � UPS Premium Care Form 11 - EEI For shipment with return service, 01, 05 or 10 are the only valid values.  Note: 01 and 05 are mutually exclusive and 05 are only valid for return shipments only.
 * @export
 */
export type InternationalFormsFormType = string;
/**
 * Container tag that holds the Freight Charges.  Applies to Invoice and Partial Invoice forms only.
 * @export
 * @interface InternationalFormsFreightCharges
 */
export interface InternationalFormsFreightCharges {
    /**
     * Cost to transport the shipment.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.�  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.
     * @type {string}
     * @memberof InternationalFormsFreightCharges
     */
    MonetaryValue: string;
}
/**
 * This is an empty tag. Presence of the indicator for EEI form means shipment contains hazardous material.
 * @export
 */
export type InternationalFormsHazardousMaterialsIndicator = string;
/**
 * The two-character In Bond Code.  Applies to EEI forms only. Required for EEI forms. Valid values for EEI are: 70: Not in bond; 67: IE from a FTZ; 68: T&E from a FTZ.
 * @export
 */
export type InternationalFormsInBondCode = string;
/**
 * Container tag that holds the Insurance Charges.  Applies to Invoice and Partial Invoice forms only.
 * @export
 * @interface InternationalFormsInsuranceCharges
 */
export interface InternationalFormsInsuranceCharges {
    /**
     * The amount the shipper or receiver pays to cover the cost of replacing the shipment if it is lost or damaged.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and '.'  (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including '.' and can hold up to 2 decimal places.
     * @type {string}
     * @memberof InternationalFormsInsuranceCharges
     */
    MonetaryValue: string;
}
/**
 * Date when the Invoice is created. Ideally this is the same as the ship date.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Required for Invoice form for forward shipments. For shipment with return service, the user input will be ignored, and the field will be blank on the invoice. Format is yyyyMMdd.
 * @export
 */
export type InternationalFormsInvoiceDate = string;
/**
 * Commercial Invoice number assigned by the exporter.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice.
 * @export
 */
export type InternationalFormsInvoiceNumber = string;
/**
 * Pier where goods are loaded. For vessel shipments only.  Applies to EEI forms only. No validation is performed.
 * @export
 */
export type InternationalFormsLoadingPier = string;
/**
 * Mode of transport by which the goods are exported. Valid values: Air, AirContainerized, Auto, FixedTransportInstallations, Mail, PassengerHandcarried, Pedestrian, Rail, Rail, Containerized, RoadOther, SeaBarge, SeaContainerized, SeaNoncontainerized, Truck, TruckContainerized.  Applies to EEI forms only.  Required for EEI.  Only allowed values can be entered. Only 10 Characters can appear on the form. Anything greater than 10 characters will be truncated on the form.
 * @export
 */
export type InternationalFormsModeOfTransport = string;
/**
 * Container tag that holds the information of amount that covers additional charges not already listed on the invoice.  Applies to Invoice and Partial Invoice forms only.
 * @export
 * @interface InternationalFormsOtherCharges
 */
export interface InternationalFormsOtherCharges {
    /**
     * The Monetary value of Other Charges.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.� (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.
     * @type {string}
     * @memberof InternationalFormsOtherCharges
     */
    MonetaryValue: string;
    /**
     * Description of what the other charges are for.  Applies to Invoice and Partial Invoice forms only. Required for Complete Invoice and Optional for Partial Invoice forms.
     * @type {string}
     * @memberof InternationalFormsOtherCharges
     */
    Description: string;
}
/**
 * The application will automatically provide a copy of the invoice or NAFTA/CO with each response regardless of whether the user has enabled Paperless account. The user now has the option to print or ignore the copy provided.
 * @export
 */
export type InternationalFormsOverridePaperlessIndicator = string;
/**
 * Information about parties to transaction. Use Related, if the parties to the transaction are related. A related party is an export from a U.S. businessperson or business to a foreign business or from a U.S. business to a foreign person or business where the person has at least 10 percent of the voting shares of the business during the fiscal year. If unincorporated, then an equivalent interest in the business.  Applies to EEI forms only.   Valid values: R - Related, N - Non-related.
 * @export
 */
export type InternationalFormsPartiesToTransaction = string;
/**
 * Contains one of the following:  The two-digit U.S. Postal Service abbreviation for the state from which the goods were shipped to the port of export. The state that is the source for the good with the highest value. The state of consolidation. The Foreign Trade Zone number of the zone from where the exports are leaving.  If the goods were shipped from Puerto Rico, enter PR.  Applies to EEI forms only. Required for EEI.
 * @export
 */
export type InternationalFormsPointOfOrigin = string;
/**
 * Valid values are : S (for state postal code abbreviation) , F : FTZ Identifier  Applies EEI forms only. Required for EEI form.
 * @export
 */
export type InternationalFormsPointOfOriginType = string;
/**
 * Should be one of the following-Overland: The U.S. Customs port where the carrier crosses the U.S. border, Vessel and Air: The U.S. Customs port where the goods are loaded on the carrier to be exported from the U.S., Postal: The U.S. Postal Office from where the goods are mailed.  Applies to EEI forms only. No validation is performed.
 * @export
 */
export type InternationalFormsPortOfExport = string;
/**
 * The country or territory and the port where the goods will be unloaded from the exporting carrier. For vessel and air shipments only.  Applies to EEI forms only. No validation is performed.
 * @export
 */
export type InternationalFormsPortOfUnloading = string;
/**
 * Contains the commodity/product information.  Applies to EEI, Invoice, Partial Invoice, CO and NAFTA CO. When any International form is requested, at least one Product must be present.   Maximum number of products allowed for different forms are:  50: Package Packing List  100: Commercial Invoice, NAFTA, CO, EEI  1000: Air Freight packing list  Note: For Partial Invoice this container is optional.
 * @export
 * @interface InternationalFormsProduct
 */
export interface InternationalFormsProduct {
    /**
     * Description of the product.  Applies to all International Forms. Optional for Partial Invoice. Must be present at least once and can occur for a maximum of 3 times.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    Description: string;
    /**
     *
     * @type {ProductUnit}
     * @memberof InternationalFormsProduct
     */
    Unit?: ProductUnit;
    /**
     * 6-to-15-alphanumeric commodity code. Customs uses this code to determine what duties should be assessed on the commodity.  Applies to Invoice, Partial Invoice and NAFTA CO. Required for NAFTA CO and optional for Partial Invoice. Should be at least 6 alphanumeric. For NAFTA CO: For each good described in Description of Goods field, identify the H.S. tariff classification to six digits. If the good is subject to a specific rule of origin in Annex 401 that requires eight digits, identify to eight digits, using the H.S. tariff classification of the country or territory into whose territory the good is imported.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    CommodityCode?: string;
    /**
     * The part number or reference number for the product contained in the invoice line, as indicated on the customs invoice.  Applies to Invoice and Partial Invoice. Required for Invoice forms and optional for Partial Invoice.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    PartNumber?: string;
    /**
     * The country or territory in which the good was manufactured, produced or grown. For detailed information on country or territory of origin, certificate of origin, rules of origin, and any related matters, please refer to the U.S. Customs and Border Protection Web site at www.customs.gov or contact your country or territory's Customs authority.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    OriginCountryCode?: string;
    /**
     * If present, JNT will be used as the origin of country or territory code on the NAFTA form and the Product/Origincountry or territoryCode tag will be ignored.  Applies to NAFTA CO only.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    JointProductionIndicator?: string;
    /**
     * For each good described in the Description of Goods field, where the good is subject to a regional value content (RVC) requirement, indicate NC if the RVC is calculated according to the net cost method; otherwise, indicate NO. If the RVC is calculated over a period of time then indicate �NC with begin/end date� by passing code �ND�  Applies to NAFTA CO only. Required for NAFTA CO.  Valid values: NC, ND and NO.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    NetCostCode?: string;
    /**
     *
     * @type {ProductNetCostDateRange}
     * @memberof InternationalFormsProduct
     */
    NetCostDateRange?: ProductNetCostDateRange;
    /**
     * Indicates the criterion (A through F) for each good described in the Description of Goods field if applicable.   The rules of origin are contained in Chapter Four and Annex 401.   Additional rules are described in Annex 703.2 (certain agricultural goods), Annex 300-B, Appendix 6 (certain textile goods) and Annex 308.1 (certain automatic data processing goods and their parts).  Applies to NAFTA CO only.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    PreferenceCriteria?: string;
    /**
     * Indicate the following:  Yes - If shipper is the producer of the good. If not, state 02, 03, and 04 depending on whether this certificate was based upon:   No [1] - Knowledge of whether the good qualifies as an originating good.  No [2] - Reliance on the producers written representation (other than a Certificate of Origin) that the good qualifies as an originating good.  No [3] - A completed and signed Certificate for the good voluntarily provided to the exporter by the producer.  Applicable for NAFTA CO and is required. Valid values: Yes, No [1], No [2], and No [3].
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    ProducerInfo?: string;
    /**
     * Any special marks, codes, and numbers that may appear on package.  Applies to CO Only.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    MarksAndNumbers?: string;
    /**
     * The total number of packages, cartons, or containers for the commodity.  Applicable for CO and is required. Should be numeric. Valid characters are 0 -9.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    NumberOfPackagesPerCommodity?: string;
    /**
     *
     * @type {ProductProductWeight}
     * @memberof InternationalFormsProduct
     */
    ProductWeight?: ProductProductWeight;
    /**
     * Includes the following information for used self-propelled vehicles as defined in Customs regulations 19 CFR 192.1: The unique Vehicle Identification Number (VIN) in the proper format. Or The Product Identification Number (PIN) for those used self-propelled vehicles for which there are no VINs.  Or the Vehicle Title Number.  Applies to EEI forms only.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    VehicleID?: string;
    /**
     *
     * @type {ProductScheduleB}
     * @memberof InternationalFormsProduct
     */
    ScheduleB?: ProductScheduleB;
    /**
     * Code indicating Domestic: Exports that have been produced, manufactured, or grown in the United States or Puerto Rico. This includes imported merchandise which has been enhanced in value or changed from the form in which imported by further manufacture or processing in the United States or Puerto Rico. Foreign: Merchandise that has entered the United States and is being exported again in the same condition as when imported.   Applies to EEI forms only. Required for EEI form.  Valid values:  D: Domestic; F: Foreign.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    ExportType?: string;
    /**
     * This amount will always be USD.  Applies to EEI forms only. Required for EEI form. Valid characters are 0-9 and �.� (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.  Note: This value is calculated based on the Product/Unit/Value and /Product/Unit/Number (Number of Units * Price per Unit). If the total value is incorrect it will be replaced by the actual calculated total value.
     * @type {string}
     * @memberof InternationalFormsProduct
     */
    SEDTotalValue?: string;
    /**
     *
     * @type {ProductExcludeFromForm}
     * @memberof InternationalFormsProduct
     */
    ExcludeFromForm?: ProductExcludeFromForm;
    /**
     *
     * @type {ProductPackingListInfo}
     * @memberof InternationalFormsProduct
     */
    PackingListInfo?: ProductPackingListInfo;
    /**
     *
     * @type {ProductEEIInformation}
     * @memberof InternationalFormsProduct
     */
    EEIInformation?: ProductEEIInformation;
}
/**
 * The customer's order reference number.  Applies to Invoice and Partial Invoice forms only.
 * @export
 */
export type InternationalFormsPurchaseOrderNumber = string;
/**
 * A reason to export the current international shipment. Valid values: SALE, GIFT, SAMPLE, RETURN, REPAIR, INTERCOMPANYDATA, Any other reason.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and Optional for Partial Invoice. No validation.
 * @export
 */
export type InternationalFormsReasonForExport = string;
/**
 * If Present, indicates that it is a routed export transaction. A routed export transaction is one, where the foreign principal party in interest authorizes a U.S. forwarding (or other) agent to export the merchandise outside the U.S.  Applies to EEI forms only.
 * @export
 */
export type InternationalFormsRoutedExportTransactionIndicator = string;
/**
 * Text for the shipper to add additional information.  Forward shipment only.
 * @export
 */
export type InternationalFormsShipperMemo = string;
/**
 * Indicates the rights to the seller from the buyer. Also, it refers to Terms of Sale.  Applies to Invoice and Partial Invoice forms only.   Valid values:  CFR: Cost and Freight  CIF: Cost Insurance and Freight  CIP: Carriage and Insurance Paid  CPT: Carriage Paid To  DAF: Delivered at Frontier  DDP: Delivery Duty Paid  DDU: Delivery Duty Unpaid  DEQ: Delivered Ex Quay  DES: Delivered Ex Ship  EXW: Ex Works  FAS: Free Alongside Ship  FCA: Free Carrier  FOB: Free On Board
 * @export
 */
export type InternationalFormsTermsOfShipment = string;
/**
 * UPS Premium Care Form is required if UPS Premium Care Indicator is present on a package.  Valid only for Canada to Canada movements.
 * @export
 * @interface InternationalFormsUPSPremiumCareForm
 */
export interface InternationalFormsUPSPremiumCareForm {
    /**
     * Shipment Date associated with UPS Premium Care Shipment.   Valid Format: yyyyMMdd
     * @type {string}
     * @memberof InternationalFormsUPSPremiumCareForm
     */
    ShipmentDate: string;
    /**
     * Size of UPS Premium Care Form.  Valid values:  01 = A4 Size 02 = Letter Size
     * @type {string}
     * @memberof InternationalFormsUPSPremiumCareForm
     */
    PageSize: string;
    /**
     * Format of UPS Premium Care Form.  Valid values:  01 = PNG 02 = PDF
     * @type {string}
     * @memberof InternationalFormsUPSPremiumCareForm
     */
    PrintType: string;
    /**
     * Number of Copies of UPS Premium Care Form.  Valid value is 02.
     * @type {string}
     * @memberof InternationalFormsUPSPremiumCareForm
     */
    NumOfCopies: string;
    /**
     *
     * @type {UPSPremiumCareFormLanguageForUPSPremiumCare}
     * @memberof InternationalFormsUPSPremiumCareForm
     */
    LanguageForUPSPremiumCare: UPSPremiumCareFormLanguageForUPSPremiumCare;
}
/**
 * Data container for DocumentID(s).  Required if Form Type is 07.
 * @export
 * @interface InternationalFormsUserCreatedForm
 */
export interface InternationalFormsUserCreatedForm {
    /**
     * DocumentID represents a document uploaded to Forms History.
     * @type {string}
     * @memberof InternationalFormsUserCreatedForm
     */
    DocumentID: string;
}
/**
 * Invoice Line Total currency type.
 * @export
 */
export type InvoiceLineTotalCurrencyCode = string;
/**
 * Invoice Line Total amount for the entire shipment.  Valid values are from 1 to 99999999
 * @export
 */
export type InvoiceLineTotalMonetaryValue = string;
/**
 * Identification code for itemized charge.
 * @export
 */
export type ItemizedChargesCode = string;
/**
 * The IATA currency code associated with the Itemized Charge costs for the shipment.
 * @export
 */
export type ItemizedChargesCurrencyCode = string;
/**
 * Description of Itemized Charge that had been charged.
 * @export
 */
export type ItemizedChargesDescription = string;
/**
 * Itemized Charges value amount.
 * @export
 */
export type ItemizedChargesMonetaryValue = string;
/**
 * The sub-type of ItemizedCharges type.
 * @export
 */
export type ItemizedChargesSubType = string;
/**
 * N/A
 * @export
 * @interface LABELRECOVERYRequestWrapper
 */
export interface LABELRECOVERYRequestWrapper {
    /**
     *
     * @type {LabelRecoveryRequest}
     * @memberof LABELRECOVERYRequestWrapper
     */
    LabelRecoveryRequest: LabelRecoveryRequest;
}
/**
 * N/A
 * @export
 * @interface LABELRECOVERYResponseWrapper
 */
export interface LABELRECOVERYResponseWrapper {
    /**
     *
     * @type {LabelRecoveryResponse}
     * @memberof LABELRECOVERYResponseWrapper
     */
    LabelRecoveryResponse: LabelRecoveryResponse;
}
/**
 * Container for COD Turnin Page Image.
 * @export
 * @interface LRCODTurnInPageImage
 */
export interface LRCODTurnInPageImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof LRCODTurnInPageImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 encoded High Value Report image.
     * @type {string}
     * @memberof LRCODTurnInPageImage
     */
    GraphicImage: string;
}
/**
 * Container tag for the International Forms image.
 * @export
 * @interface LRFormImage
 */
export interface LRFormImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof LRFormImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 encoded High Value Report image.
     * @type {string}
     * @memberof LRFormImage
     */
    GraphicImage: string;
}
/**
 * Required if TrackingNumber or Mail Innovations Tracking Number is not populated. Customer supplied reference number. Supports up to 2 customer supplied combinations of Reference code- value combinations.
 * @export
 */
export type LRReferenceNumberValue = string;
/**
 * Container that identifies transactions between client and server.
 * @export
 * @interface LRRequestTransactionReference
 */
export interface LRRequestTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response
     * @type {string}
     * @memberof LRRequestTransactionReference
     */
    CustomerContext?: string;
}
/**
 * Response Status container
 * @export
 * @interface LRResponseResponseStatus
 */
export interface LRResponseResponseStatus {
    /**
     * Identifies the success status of the transaction. 1=Success
     * @type {string}
     * @memberof LRResponseResponseStatus
     */
    Code: string;
    /**
     * Describes Response Status Code. Returns the text \"Success\"
     * @type {string}
     * @memberof LRResponseResponseStatus
     */
    Description: string;
}
/**
 * Transaction Reference Container
 * @export
 * @interface LRResponseTransactionReference
 */
export interface LRResponseTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response
     * @type {string}
     * @memberof LRResponseTransactionReference
     */
    CustomerContext?: string;
}
/**
 * Container for the email message.
 * @export
 * @interface LabelDeliveryEMail
 */
export interface LabelDeliveryEMail {
    /**
     * The destination email address of the receiver returns notification email.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    EMailAddress: string;
    /**
     * The e-mail address where an undeliverable email message is sent if the Receiver Return Notification email is undeliverable.  Defaults to FromEMailAddress.� Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    UndeliverableEMailAddress?: string;
    /**
     * The email address listed in the Reply To field of the message header, includes name and e-mail address of sender. The \"From\" field of the message header contains pkginfo@ups.com.  Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    FromEMailAddress?: string;
    /**
     * The name the receiver return notification will appear to be from.  Defaults to the Shipper Name.� Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    FromName?: string;
    /**
     * User defined text that will be included in the email.  Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    Memo?: string;
    /**
     * The eMails subject. Defaults to the UPS Receiver Return Notification plus the shipment ID.  Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    Subject?: string;
    /**
     * Specifies a reference code and reference number to display in the subject of the Receiver Return Notification.�   When the subject code is provided, the subject will contain the following: UPS Receiver Return Notification.�   The reference code (the reference code will be mapped to the corresponding ANSI value) Plus the reference number.  The valid subject codes are: 01 - Shipment Reference Number 1,  02 - Shipment Reference Number 2,   03 - package Reference Number 1,  04 - package Reference Number 2, 05 - package Reference Number 3, 06 - package Reference Number 4, 07 - package Reference Number 5, 08 - Subject Text (Return Notification only).  If the subject code tag is not provided and the subject text is provided, the subject of the notification will be the subject text.�   If the subject text is provided, and subject code tag exists, then the subject code value must be 08.   If the subject code is 08, the subject text must exist. If a subject code is provided that refers to a nonexistent reference number, the subject will default to the tracking number.� Only allowed at the first package.
     * @type {string}
     * @memberof LabelDeliveryEMail
     */
    SubjectCode?: string;
}
/**
 * Indicates the Label Recovery and Receipt Recovery URL links are to be returned in the XML Response. Valid for following shipment - Print/Electronic Return Label Print/Electronic Import Control Label Forward shipment except for Mail Innovations Forward
 * @export
 */
export type LabelDeliveryLabelLinkIndicator = string;
/**
 * Indicates the Label and Receipt URLs are to be returned in the XML response.
 * @export
 */
export type LabelDeliveryLabelLinksIndicator = string;
/**
 * Not Used. If this tag is present, resend the Label Delivery notification email.
 * @export
 */
export type LabelDeliveryResendEMailIndicator = string;
/**
 * Label print method code determines the format in which Labels are to be generated. For EPL2 formatted Labels use EPL, for SPL formatted Labels use SPL, for ZPL formatted Labels use ZPL and for image formats use GIF.  For shipments without return service the valid value is GIF, ZPL, EPL and SPL. For shipments with PRL return service, the valid values are EPL, ZPL, SPL and GIF. For UPS Premier Silver shipment only ZPL is supported.
 * @export
 */
export type LabelImageFormatCode = string;
/**
 * Description of the label image format code.
 * @export
 */
export type LabelImageFormatDescription = string;
/**
 * Base 64 encoded graphic image.
 * @export
 */
export type LabelImageGraphicImage = string;
/**
 * Base 64 encoded html browser image rendering software. This is only returned for GIF image formats.
 * @export
 */
export type LabelImageHTMLImage = string;
/**
 * Base 64 encoded graphic image of the Warsaw text and signature box.
 * @export
 */
export type LabelImageInternationalSignatureGraphicImage = string;
/**
 * The format of a label image byte stream.
 * @export
 * @interface LabelImageLabelImageFormat
 */
export interface LabelImageLabelImageFormat {
    /**
     * Code type that the label image is to be generated in. Valid value returned is gif, pdf, zpl. Spl, epl2
     * @type {string}
     * @memberof LabelImageLabelImageFormat
     */
    Code: string;
}
/**
 * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular.   The PDF417 image will be returned when the shipment is trans-border and the service option is one of the following: Standard Express, Saver Express Plus. The image is Base 64 encoded and only returned for GIF image format.
 * @export
 */
export type LabelImagePDF417 = string;
/**
 * This is only returned if the label link is requested to be returned and only at the first package result  Applicable for following types of shipments: Print/Electronic Return Label Print/Electronic Import Control Label Forward shipment except for Mail Innovations Forward
 * @export
 */
export type LabelImageURL = string;
/**
 * Valid LabelMethod types are: 01 = ImportControl Print and Mail 02 = ImportControl One-Attempt 03 = ImportControl Three-Attempt 04 = ImportControl Electronic Label 05 = ImportControl Print Label
 * @export
 */
export type LabelMethodCode = string;
/**
 * LabelMethod description.
 * @export
 */
export type LabelMethodDescription = string;
/**
 * Request for obtaining the Label for the return shipment.
 * @export
 * @interface LabelRecoveryRequest
 */
export interface LabelRecoveryRequest {
    /**
     *
     * @type {LabelRecoveryRequestRequest}
     * @memberof LabelRecoveryRequest
     */
    Request: LabelRecoveryRequestRequest;
    /**
     *
     * @type {LabelRecoveryRequestLabelSpecification}
     * @memberof LabelRecoveryRequest
     */
    LabelSpecification?: LabelRecoveryRequestLabelSpecification;
    /**
     *
     * @type {LabelRecoveryRequestTranslate}
     * @memberof LabelRecoveryRequest
     */
    Translate?: LabelRecoveryRequestTranslate;
    /**
     *
     * @type {LabelRecoveryRequestLabelDelivery}
     * @memberof LabelRecoveryRequest
     */
    LabelDelivery?: LabelRecoveryRequestLabelDelivery;
    /**
     * Small Package Tracking Number. Required if Mail Innovations Tracking Number or ReferenceNumber/Value and ShipperNumber is not provided.  If only TrackingNumber is provided, the request will be treated as Small Package Shipment. Label Recovery will return label for Small Package Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
     * @type {string}
     * @memberof LabelRecoveryRequest
     */
    TrackingNumber?: string;
    /**
     * Mail Innovations Tracking Number.  Required if Tracking Number or ReferenceNumber/Value is not populated.  If only MailInnovationsTrackingNumber is provided, the request will be treated as Single Mail Innovations Return Shipment. Label Recovery will return label for Mail Innovations Return Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
     * @type {string}
     * @memberof LabelRecoveryRequest
     */
    MailInnovationsTrackingNumber?: string;
    /**
     *
     * @type {LabelRecoveryRequestReferenceValues}
     * @memberof LabelRecoveryRequest
     */
    ReferenceValues?: LabelRecoveryRequestReferenceValues;
    /**
     * Represents 5 character ISO Locale that allows the user to request Reference Number Code on Label, Label instructions, Receipt instructions (if available for given tracking number) and High Value Report (if available for given tracking number) in desired language.  Locale is specified by the combination of language code and country or territory code - 2 character language code and 2 character country code seperated by an underscore ('_') character. Example - de_DE. Please refer to Appendix for supported values for Locale.  Either Translate container or Locale element can be present in a given request. Both can't be requested together in same request.
     * @type {string}
     * @memberof LabelRecoveryRequest
     */
    Locale?: string;
    /**
     *
     * @type {LabelRecoveryRequestUPSPremiumCareForm}
     * @memberof LabelRecoveryRequest
     */
    UPSPremiumCareForm?: LabelRecoveryRequestUPSPremiumCareForm;
}
/**
 * Container for the Label Delivery accessorial. One Label Delivery per shipment.
 * @export
 * @interface LabelRecoveryRequestLabelDelivery
 */
export interface LabelRecoveryRequestLabelDelivery {
    /**
     * Indicates the Label Recovery and Receipt Recovery URL links are to be returned in the XML Response. Valid for following shipment - Print/Electronic Return Label Print/Electronic Import Control Label Forward shipment except for Mail Innovations Forward
     * @type {string}
     * @memberof LabelRecoveryRequestLabelDelivery
     */
    LabelLinkIndicator?: string;
    /**
     * Not Used. If this tag is present, resend the Label Delivery notification email.
     * @type {string}
     * @memberof LabelRecoveryRequestLabelDelivery
     */
    ResendEMailIndicator?: string;
}
/**
 * Container that is used to define the properties required by the user to print and/ or display the UPS shipping label.  Required for the shipment without return service, or shipment with PRL return service.
 * @export
 * @interface LabelRecoveryRequestLabelSpecification
 */
export interface LabelRecoveryRequestLabelSpecification {
    /**
     * Browser HTTPUserAgent String. This is the preferred way of identifying GIF image type to be generated.  Required if <Root node>/ LabelSpecification/LabelImageFormat/Code = Gif. Default to Mozilla/4.5 if this field is missing or has invalid value.
     * @type {string}
     * @memberof LabelRecoveryRequestLabelSpecification
     */
    HTTPUserAgent?: string;
    /**
     *
     * @type {LabelSpecificationLabelImageFormat}
     * @memberof LabelRecoveryRequestLabelSpecification
     */
    LabelImageFormat?: LabelSpecificationLabelImageFormat;
    /**
     *
     * @type {LabelSpecificationLabelStockSize}
     * @memberof LabelRecoveryRequestLabelSpecification
     */
    LabelStockSize?: LabelSpecificationLabelStockSize;
}
/**
 * Represents 5 character ISO Locale that allows the user to request Reference Number Code on Label, Label instructions, Receipt instructions (if available for given tracking number) and High Value Report (if available for given tracking number) in desired language.  Locale is specified by the combination of language code and country or territory code - 2 character language code and 2 character country code seperated by an underscore ('_') character. Example - de_DE. Please refer to Appendix for supported values for Locale.  Either Translate container or Locale element can be present in a given request. Both can't be requested together in same request.
 * @export
 */
export type LabelRecoveryRequestLocale = string;
/**
 * Mail Innovations Tracking Number.  Required if Tracking Number or ReferenceNumber/Value is not populated.  If only MailInnovationsTrackingNumber is provided, the request will be treated as Single Mail Innovations Return Shipment. Label Recovery will return label for Mail Innovations Return Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
 * @export
 */
export type LabelRecoveryRequestMailInnovationsTrackingNumber = string;
/**
 * Container that holds reference number and shipper number  If tracking number is not present use reference Number
 * @export
 * @interface LabelRecoveryRequestReferenceValues
 */
export interface LabelRecoveryRequestReferenceValues {
    /**
     *
     * @type {ReferenceValuesReferenceNumber}
     * @memberof LabelRecoveryRequestReferenceValues
     */
    ReferenceNumber: ReferenceValuesReferenceNumber;
    /**
     * Required if ReferenceNumber/Value is populated. Shippers six digit account number. Must be six alphanumeric characters. Must be associated with the Internet account used to login.
     * @type {string}
     * @memberof LabelRecoveryRequestReferenceValues
     */
    ShipperNumber: string;
}
/**
 * Request Container.  N/A
 * @export
 * @interface LabelRecoveryRequestRequest
 */
export interface LabelRecoveryRequestRequest {
    /**
     * When UPS introduces new elements in the response that are not associated with new request elements, Subversion is used. This ensures backward compatibility.  To get such elements you need to have the right Subversion. The value of the subversion is explained in the Response element Description.  Format: YYMM = Year and month of the release. Example: 1701 = 2017 January  Supported values: 1701, 1707, 1903
     * @type {string}
     * @memberof LabelRecoveryRequestRequest
     */
    SubVersion?: string;
    /**
     * Request option is no longer used.
     * @type {string}
     * @memberof LabelRecoveryRequestRequest
     */
    RequestOption?: string;
    /**
     *
     * @type {LRRequestTransactionReference}
     * @memberof LabelRecoveryRequestRequest
     */
    TransactionReference?: LRRequestTransactionReference;
}
/**
 * Small Package Tracking Number. Required if Mail Innovations Tracking Number or ReferenceNumber/Value and ShipperNumber is not provided.  If only TrackingNumber is provided, the request will be treated as Small Package Shipment. Label Recovery will return label for Small Package Tracking Number. If both, TrackingNumber and MailInnovationsTrackingNumber are provided, the request will be treated as Dual Mail Innovations Return Shipment. Label Recovery will return two labels one each for - Small Package Tracking Number and Mail Innovations Return Tracking Number.
 * @export
 */
export type LabelRecoveryRequestTrackingNumber = string;
/**
 * Translate container allows the user to specify the language he/she would like a specific portion of response to return.  The language is specified by the combination of language code and dialect code.  Valid combinations are: LanguageCode + DialectCode.  Either Translate container or Locale element can be present in a given request. Both can't be requested together in same request. Combinations:  eng GB = Queen's English  Spa 97 = Castilian Spanish  ita 97 = Italian  fra 97 = France French  fra CA = Canadian French  deu 97 = German  por 97 = Portugal Portuguese  nld 97 = Dutch  dan 97 = Danish  fin 97 = Finnish  swe 97 = Swedish  eng CA = Canadian English  Eng US = US English  Default language is Queen's English   If the Ship from country or territory is Canada, the Language defaults to Canadian English.   If the ship from country or territory is US, the language defaults to US English.  If shipping from some other country or territory, the language defaults to Queens English.
 * @export
 * @interface LabelRecoveryRequestTranslate
 */
export interface LabelRecoveryRequestTranslate {
    /**
     * The Language code. The language codes are three letter language codes.  Supported languages are:  eng - English  spa - Spanish  ita - Italian fra - French  deu - German  por -Portuguese  nld  Dutch dan - Danish  fin - Finnish  swe  Swedish  nor  Norwegian
     * @type {string}
     * @memberof LabelRecoveryRequestTranslate
     */
    LanguageCode: string;
    /**
     * Valid dialect codes are:  CA - Canada GB - Great Britain US - United States 97  Not Applicable
     * @type {string}
     * @memberof LabelRecoveryRequestTranslate
     */
    DialectCode: string;
    /**
     * Used to specify what will be translated.  Valid code:  01 = label direction instructions and receipt
     * @type {string}
     * @memberof LabelRecoveryRequestTranslate
     */
    Code: string;
}
/**
 * UPS Premium Care Form container.  Default is PDF when container is not provided.    Valid only for Canada to Canada movements. UPS Premium Care Form will be returned in  both US English and Canadian French language.
 * @export
 * @interface LabelRecoveryRequestUPSPremiumCareForm
 */
export interface LabelRecoveryRequestUPSPremiumCareForm {
    /**
     * Size of UPS Premium Care Form.  Valid values:  01 = A4 Size 02 = Letter Size
     * @type {string}
     * @memberof LabelRecoveryRequestUPSPremiumCareForm
     */
    PageSize: string;
    /**
     * Format of UPS Premium Care Form.  Valid values:  01 = PNG 02 = PDF
     * @type {string}
     * @memberof LabelRecoveryRequestUPSPremiumCareForm
     */
    PrintType: string;
}
/**
 * Response for the Label recovery request  Validates the date range and label being present. Also if the shipment is return or not
 * @export
 * @interface LabelRecoveryResponse
 */
export interface LabelRecoveryResponse {
    /**
     *
     * @type {LabelRecoveryResponseResponse}
     * @memberof LabelRecoveryResponse
     */
    Response: LabelRecoveryResponseResponse;
    /**
     * Tracking number of the leading package in the shipment
     * @type {string}
     * @memberof LabelRecoveryResponse
     */
    ShipmentIdentificationNumber?: string;
    /**
     *
     * @type {Array<LabelRecoveryResponseLabelResults>}
     * @memberof LabelRecoveryResponse
     */
    LabelResults: Array<LabelRecoveryResponseLabelResults>;
    /**
     *
     * @type {LabelRecoveryResponseCODTurnInPage}
     * @memberof LabelRecoveryResponse
     */
    CODTurnInPage?: LabelRecoveryResponseCODTurnInPage;
    /**
     *
     * @type {LabelRecoveryResponseForm}
     * @memberof LabelRecoveryResponse
     */
    Form?: LabelRecoveryResponseForm;
    /**
     *
     * @type {LabelRecoveryResponseHighValueReport}
     * @memberof LabelRecoveryResponse
     */
    HighValueReport?: LabelRecoveryResponseHighValueReport;
    /**
     *
     * @type {Array<LabelRecoveryResponseTrackingCandidate>}
     * @memberof LabelRecoveryResponse
     */
    TrackingCandidate?: Array<LabelRecoveryResponseTrackingCandidate>;
}
/**
 * Container for COD Turnin Page.
 * @export
 * @interface LabelRecoveryResponseCODTurnInPage
 */
export interface LabelRecoveryResponseCODTurnInPage {
    /**
     *
     * @type {LRCODTurnInPageImage}
     * @memberof LabelRecoveryResponseCODTurnInPage
     */
    Image: LRCODTurnInPageImage;
}
/**
 * Container tag for the International Forms. Currently, represents Commercial Invoice for Electronic Returns Label and Electronic Import Control Label.  Applicable for Electronic Return Label and Electronic Import Control Label shipments only. Returned for request with SubVersion greater than or equal to 1707.
 * @export
 * @interface LabelRecoveryResponseForm
 */
export interface LabelRecoveryResponseForm {
    /**
     *
     * @type {FormImage}
     * @memberof LabelRecoveryResponseForm
     */
    Image: FormImage;
}
/**
 * Container tag for the High Value Report for Electronic Returns Label and Electronic Import Control Label.  Applicable for Electronic Return Label and Electronic Import Control Label shipments only. Returned for request with SubVersion greater than or equal to 1707.
 * @export
 * @interface LabelRecoveryResponseHighValueReport
 */
export interface LabelRecoveryResponseHighValueReport {
    /**
     *
     * @type {HighValueReportImage}
     * @memberof LabelRecoveryResponseHighValueReport
     */
    Image: HighValueReportImage;
}
/**
 * Container that stores the label results. Information containing the results of the user's Label Recovery Request.
 * @export
 * @interface LabelRecoveryResponseLabelResults
 */
export interface LabelRecoveryResponseLabelResults {
    /**
     * Package Tracking number.  Package 1Z number. Returned only if TrackingNumber or Combination of Reference Number and Shipper Number present in request.
     * @type {string}
     * @memberof LabelRecoveryResponseLabelResults
     */
    TrackingNumber?: string;
    /**
     *
     * @type {LabelResultsLabelImage}
     * @memberof LabelRecoveryResponseLabelResults
     */
    LabelImage?: LabelResultsLabelImage;
    /**
     * Mail Innovations Tracking Number.  Applicable for Single Mail Innovations Returns and Dual Mail Innovations Returns shipment. Returned only if MailInnovationsTrackingNumber is provided in request.
     * @type {string}
     * @memberof LabelRecoveryResponseLabelResults
     */
    MailInnovationsTrackingNumber?: string;
    /**
     *
     * @type {LabelResultsMailInnovationsLabelImage}
     * @memberof LabelRecoveryResponseLabelResults
     */
    MailInnovationsLabelImage?: LabelResultsMailInnovationsLabelImage;
    /**
     *
     * @type {LabelResultsReceipt}
     * @memberof LabelRecoveryResponseLabelResults
     */
    Receipt?: LabelResultsReceipt;
    /**
     *
     * @type {LabelResultsForm}
     * @memberof LabelRecoveryResponseLabelResults
     */
    Form?: LabelResultsForm;
}
/**
 * Response Container
 * @export
 * @interface LabelRecoveryResponseResponse
 */
export interface LabelRecoveryResponseResponse {
    /**
     *
     * @type {LRResponseResponseStatus}
     * @memberof LabelRecoveryResponseResponse
     */
    ResponseStatus: LRResponseResponseStatus;
    /**
     *
     * @type {ResponseAlert}
     * @memberof LabelRecoveryResponseResponse
     */
    Alert?: ResponseAlert;
    /**
     *
     * @type {LRResponseTransactionReference}
     * @memberof LabelRecoveryResponseResponse
     */
    TransactionReference?: LRResponseTransactionReference;
}
/**
 * Tracking number of the leading package in the shipment
 * @export
 */
export type LabelRecoveryResponseShipmentIdentificationNumber = string;
/**
 * Information containing the results of the users Label Recovery Request. Returned in the event the Shipper Number and Reference Number are supplied in the request.
 * @export
 * @interface LabelRecoveryResponseTrackingCandidate
 */
export interface LabelRecoveryResponseTrackingCandidate {
    /**
     * Packaging Tracking Number  Only supported for the web small package shipment so only supported 18 digit
     * @type {string}
     * @memberof LabelRecoveryResponseTrackingCandidate
     */
    TrackingNumber: string;
    /**
     * Destination postal code candidate
     * @type {string}
     * @memberof LabelRecoveryResponseTrackingCandidate
     */
    DestinationPostalCode?: string;
    /**
     * Destination country or territory code candidate, like US = USA, CA = Canada  Must be valid ups country or territory code
     * @type {string}
     * @memberof LabelRecoveryResponseTrackingCandidate
     */
    DestinationCountryCode?: string;
    /**
     *
     * @type {TrackingCandidatePickupDateRange}
     * @memberof LabelRecoveryResponseTrackingCandidate
     */
    PickupDateRange?: TrackingCandidatePickupDateRange;
}
/**
 * Container tag for the International Forms. Currently, represents UPS Premium Care Form for Electronic Returns Label and Electronic Import Control Label. UPS  Premium Care Form for Forward shipment if Subverion is 1903 or greater  Applicable for Electronic Return Label and Electronic Import Control Label shipments only. Applies only for Canada domestic shipments. Returned for request with SubVersion greater than or equal to 1707.  UPS  Premium Care Form for Forward shipment if Subverion is 1903 or greater
 * @export
 * @interface LabelResultsForm
 */
export interface LabelResultsForm {
    /**
     *
     * @type {LRFormImage}
     * @memberof LabelResultsForm
     */
    Image: LRFormImage;
}
/**
 * The elements needed to render a label on a printer or in a browser. Specifies the format in which GraphicImage is represented. If LabelImageFormat is GIF, LabelImage contains GraphicImage and HTMLImage. Otherwise, it contains only GraphicImage. If LabelImageFormat is PDF, LabelImage is only returned at the first package result. If entered in the request, the response mirrors, else the default values are returned.  Returned only if TrackingNumber or Combination of Reference Number and Shipper Number present in request.
 * @export
 * @interface LabelResultsLabelImage
 */
export interface LabelResultsLabelImage {
    /**
     *
     * @type {LabelImageLabelImageFormat}
     * @memberof LabelResultsLabelImage
     */
    LabelImageFormat: LabelImageLabelImageFormat;
    /**
     * Base 64 encoded graphic image.
     * @type {string}
     * @memberof LabelResultsLabelImage
     */
    GraphicImage: string;
    /**
     * Base 64 encoded html browser image rendering software. This is only returned for GIF image formats.
     * @type {string}
     * @memberof LabelResultsLabelImage
     */
    HTMLImage?: string;
    /**
     * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular.   The PDF417 image will be returned when the shipment is trans-border and the service option is one of the following: Standard Express, Saver Express Plus. The image is Base 64 encoded and only returned for GIF image format.
     * @type {string}
     * @memberof LabelResultsLabelImage
     */
    PDF417?: string;
    /**
     * Base 64 encoded graphic image of the Warsaw text and signature box.
     * @type {string}
     * @memberof LabelResultsLabelImage
     */
    InternationalSignatureGraphicImage?: string;
    /**
     * This is only returned if the label link is requested to be returned and only at the first package result  Applicable for following types of shipments: Print/Electronic Return Label Print/Electronic Import Control Label Forward shipment except for Mail Innovations Forward
     * @type {string}
     * @memberof LabelResultsLabelImage
     */
    URL?: string;
}
/**
 * Container to hold Mail Innovations shipments label. The elements needed to render a label on a printer or in a browser. Specifies the format in which GraphicImage is represented. If LabelImageFormat is GIF, LabelImage contains GraphicImage and HTMLImage. Otherwise, it contains only GraphicImage.   Applicable for Single Mail Innovations Returns and Dual Mail Innovations Returns shipment. Returned only if MailInnovationsTrackingNumber is provided in request. If LabelImageFormat requested was PDF and TrackingNumber was present along with MailInnovationsTrackingNumber in the request, only LabelImage container is returned. MailInnovationsLabelImage will not be returned. In that case, the labels for Small Package Tracking Number and Mail Innovations Tracking Number will be stitched in single PDF file.
 * @export
 * @interface LabelResultsMailInnovationsLabelImage
 */
export interface LabelResultsMailInnovationsLabelImage {
    /**
     *
     * @type {MailInnovationsLabelImageLabelImageFormat}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    LabelImageFormat: MailInnovationsLabelImageLabelImageFormat;
    /**
     * Base 64 encoded graphic image.
     * @type {string}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    GraphicImage: string;
    /**
     * Base 64 encoded html browser image rendering software. This is only returned for GIF image formats.
     * @type {string}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    HTMLImage?: string;
    /**
     * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular. The PDF417 image will be returned when the shipment is trans-border and the service option is one of the following: Standard, Express Saver or Express Plus.  The image is Base 64 encoded and only returned for GIF image format
     * @type {string}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    PDF417?: string;
    /**
     * Base 64 encoded graphic image of the Warsaw text and signature box.  EPL2, ZPL and SPL labels. The image will be returned for non-US based shipments. One image will be given per shipment and it will be in the first PackageResults container.
     * @type {string}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    InternationalSignatureGraphicImage?: string;
    /**
     * This is only returned if the label link is requested to be returned and only at the first package result  Applicable for following types of shipments: Print/Electronic Return Label
     * @type {string}
     * @memberof LabelResultsMailInnovationsLabelImage
     */
    URL?: string;
}
/**
 * Mail Innovations Tracking Number.  Applicable for Single Mail Innovations Returns and Dual Mail Innovations Returns shipment. Returned only if MailInnovationsTrackingNumber is provided in request.
 * @export
 */
export type LabelResultsMailInnovationsTrackingNumber = string;
/**
 * Container for the HTML receipt and the receipt link.
 * @export
 * @interface LabelResultsReceipt
 */
export interface LabelResultsReceipt {
    /**
     * Base 64 encoded html browser image.
     * @type {string}
     * @memberof LabelResultsReceipt
     */
    HTMLImage?: string;
    /**
     *
     * @type {ReceiptImage}
     * @memberof LabelResultsReceipt
     */
    Image?: ReceiptImage;
    /**
     * Receipt's url  Applicable for following types of shipments: Print/Electronic Return Label Print/Electronic Import Control Label
     * @type {string}
     * @memberof LabelResultsReceipt
     */
    URL?: string;
}
/**
 * Package Tracking number.  Package 1Z number. Returned only if TrackingNumber or Combination of Reference Number and Shipper Number present in request.
 * @export
 */
export type LabelResultsTrackingNumber = string;
/**
 * Language character set expected on label. Valid values: dan = Danish (Latin-1) nld = Dutch (Latin-1) fin = Finnish (Latin-1) fra = French (Latin-1) deu = German (Latin-1) itl = Italian (Latin-1) nor = Norwegian (Latin-1) pol  = Polish (Latin-2) por = Poruguese (Latin-1) spa = Spanish (Latin-1)  swe = Swedish (Latin-1)  ces = Czech (Latin-2) hun = Hungarian (Latin-2) slk = Slovak (Latin-2) rus = Russian (Cyrillic) tur = Turkish (Latin-5) ron = Romanian (Latin-2) bul = Bulgarian (Latin-2) est = Estonian (Latin-2) ell = Greek (Latin-2) lav = Latvian (Latin-2) lit = Lithuanian (Latin-2) eng = English (Latin-1)  Default is English (Latin-1).
 * @export
 */
export type LabelSpecificationCharacterSet = string;
/**
 * Browser HTTPUserAgent String. This is the preferred way of identifying GIF image type to be generated.  Required if /ShipmentRequest/LabelSpecificationLabelSpecification/LabelImageFormat/Code = Gif. Default to Mozilla/4.5 if this field is missing or has invalid value.
 * @export
 */
export type LabelSpecificationHTTPUserAgent = string;
/**
 * Routing Instruction Container.
 * @export
 * @interface LabelSpecificationInstruction
 */
export interface LabelSpecificationInstruction {
    /**
     * For Exchange Forward Shipment, by default Label will have Exchange Routing instruction Text as EXCHANGE-LIKE ITEM ONLY. If code value is: 01- EXCHANGE-LIKE ITEM ONLY, 02- EXCHANGE-DRIVER INSTRUCTIONS INSIDE.
     * @type {string}
     * @memberof LabelSpecificationInstruction
     */
    Code: string;
    /**
     * Description of the label Instruction code.
     * @type {string}
     * @memberof LabelSpecificationInstruction
     */
    Description?: string;
}
/**
 * LabelImageFormat Container.
 * @export
 * @interface LabelSpecificationLabelImageFormat
 */
export interface LabelSpecificationLabelImageFormat {
    /**
     * Label print method code determines the format in which Labels are to be generated. For EPL2 formatted Labels use EPL, for SPL formatted Labels use SPL, for ZPL formatted Labels use ZPL and for image formats use GIF.  For shipments without return service the valid value is GIF, ZPL, EPL and SPL. For shipments with PRL return service, the valid values are EPL, ZPL, SPL and GIF. For UPS Premier Silver shipment only ZPL is supported.
     * @type {string}
     * @memberof LabelSpecificationLabelImageFormat
     */
    Code: string;
    /**
     * Description of the label image format code.
     * @type {string}
     * @memberof LabelSpecificationLabelImageFormat
     */
    Description?: string;
}
/**
 * Container for the EPL2, ZPL or SPL label size.  Valid for EPL2, ZPL and SPL Labels.
 * @export
 * @interface LabelSpecificationLabelStockSize
 */
export interface LabelSpecificationLabelStockSize {
    /**
     * Height of the label image. For IN, use whole inches.  For EPL2, ZPL and SPL Labels. Only valid values are 6 or 8.� Note: Label Image will only scale up to 4 X 6, even when requesting 4 X 8.
     * @type {string}
     * @memberof LabelSpecificationLabelStockSize
     */
    Height: string;
    /**
     * Width of the label image. For IN, use whole inches.  For EPL2, ZPL and SPL Labels. Valid value is 4.� Note: Label Image will only scale up to 4 X 6, even when requesting 4 X 8.
     * @type {string}
     * @memberof LabelSpecificationLabelStockSize
     */
    Width: string;
}
/**
 * Height of the label image. For IN, use whole inches.  For EPL2, ZPL and SPL Labels. Only valid values are 6 or 8� Note: Label Image will only scale up to 4 X 6, even when requesting 4 X 8.
 * @export
 */
export type LabelStockSizeHeight = string;
/**
 * Width of the label image. For IN, use whole inches.  For EPL2, ZPL and SPL Labels. Valid value is 4.� Note: Label Image will only scale up to 4 X 6, even when requesting 4 X 8.
 * @export
 */
export type LabelStockSizeWidth = string;
/**
 * Languages for UPS Premium Care Form. Two languages are required for UPS Premium Care Form.   Valid values:  eng = US English fra = Canadian French
 * @export
 */
export type LanguageForUPSPremiumCareLanguage = string;
/**
 * The standard license code published by US government.  Refer to EEI License Codes in the Appendix for valid values.  Applies to EEI form only. It is required for EEIFilingOption code 3. It is optionally required for all other filing types; however, it is used to categorize each product as SDL or non-SDL.  It is also used to identify which piece of information is applicable.
 * @export
 */
export type LicenseCode = string;
/**
 * Product ECCN Number issued by BIS (Bureau of Industry and Security). If the license number is a commerce license, ECCN must be provided. The format is #A### or EAR99  Applies to EEI forms only. It is required for EEIFilingOption code 3. ECCN is required one of the following License Exception Codes is entered: CIV, CTP, ENC, GBS, KMI, LVS, TSR
 * @export
 */
export type LicenseECCNNumber = string;
/**
 * The export monetary amount allowed per license. Required for a licensable product when the EEI form is selected. Format: Whole numbers only.  Applies to EEI form only. Required if EEIFilingOption code 1A (only for SDL shipments) or 3.
 * @export
 */
export type LicenseLicenseLineValue = string;
/**
 * Represents any one of the following values: export license number, exception code, CFR citation, KPC Number, ACM Number.  Applies to EEI form only.  Refer to EEI License Types and Exemptions in the Appendix  for valid values and formats.
 * @export
 */
export type LicenseNumber = string;
/**
 * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
 * @export
 */
export type LocaleDialect = string;
/**
 * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
 * @export
 */
export type LocaleLanguage = string;
/**
 * Base 64 encoded graphic image.
 * @export
 */
export type MailInnovationsLabelImageGraphicImage = string;
/**
 * Base 64 encoded html browser image rendering software. This is only returned for GIF image formats.
 * @export
 */
export type MailInnovationsLabelImageHTMLImage = string;
/**
 * Base 64 encoded graphic image of the Warsaw text and signature box.  EPL2, ZPL and SPL labels. The image will be returned for non-US based shipments. One image will be given per shipment and it will be in the first PackageResults container.
 * @export
 */
export type MailInnovationsLabelImageInternationalSignatureGraphicImage =
    string;
/**
 * The format of a label image byte stream.
 * @export
 * @interface MailInnovationsLabelImageLabelImageFormat
 */
export interface MailInnovationsLabelImageLabelImageFormat {
    /**
     * Code type that the label image is to be generated in. Valid value returned is gif, pdf, zpl. Spl, epl2
     * @type {string}
     * @memberof MailInnovationsLabelImageLabelImageFormat
     */
    Code: string;
}
/**
 * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular. The PDF417 image will be returned when the shipment is trans-border and the service option is one of the following: Standard, Express Saver or Express Plus.  The image is Base 64 encoded and only returned for GIF image format
 * @export
 */
export type MailInnovationsLabelImagePDF417 = string;
/**
 * This is only returned if the label link is requested to be returned and only at the first package result  Applicable for following types of shipments: Print/Electronic Return Label
 * @export
 */
export type MailInnovationsLabelImageURL = string;
/**
 * Specifies the Commodity�s NMFC prime code.  Required if NMFC Container is present.
 * @export
 */
export type NMFCPrimeCode = string;
/**
 * Specifies the Commodity�s NMFC sub code.  Needs to be provided when the SubCode associated with the PrimeCode is other than 00. UPS defaults the sub value to 00 if not provided. If provided the Sub Code should be associated with the PrimeCode of the NMFC.
 * @export
 */
export type NMFCSubCode = string;
/**
 * Negotiated Itemized Accessorial and SurCharges.  Negotiated itemized charges are only returned for certain contract-only shipments as well as Worldwide Express Freight, Ground Freight Pricing, and Hazmat movements.  Negotiated Itemized Accessorial and Sur Charges are returned only when the subversion element is present and greater than or equal to 1607.  Package level itemized charges are only returned for US domestic movements
 * @export
 * @interface NegotiatedChargesItemizedCharges
 */
export interface NegotiatedChargesItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    CurrencyCode: string;
    /**
     * Itemized Charges value amount.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of ItemizedCharges type.
     * @type {string}
     * @memberof NegotiatedChargesItemizedCharges
     */
    SubType?: string;
}
/**
 * Itemized Charges are returned only when the Subversion element is present and greater than or equal to 1601.  Negotiated itemized charges are only returned for certain contract-only shipments as well as Worldwide Express Freight, Ground Freight Pricing, and Hazmat movements.
 * @export
 * @interface NegotiatedRateChargesItemizedCharges
 */
export interface NegotiatedRateChargesItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    CurrencyCode: string;
    /**
     * Itemized Charges value amount.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of ItemizedCharges type.
     * @type {string}
     * @memberof NegotiatedRateChargesItemizedCharges
     */
    SubType?: string;
}
/**
 * TaxCharges container are returned only when TaxInformationIndicator is present in request. TaxCharges container contains Tax information for a given shipment.
 * @export
 * @interface NegotiatedRateChargesTaxCharges
 */
export interface NegotiatedRateChargesTaxCharges {
    /**
     * Tax Type code. The code represents the type of Tax applied to a shipment.   Refer to Tax Type Values/Abbreviations in the Appendix for valid values.
     * @type {string}
     * @memberof NegotiatedRateChargesTaxCharges
     */
    Type: string;
    /**
     * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof NegotiatedRateChargesTaxCharges
     */
    MonetaryValue: string;
}
/**
 * Total charges container. Account Based Rates info.��� Total charges are only returned for ABR eligible shipper account/UserId combinations when the user includes the NegotiatedRatesIndicator in the request.
 * @export
 * @interface NegotiatedRateChargesTotalCharge
 */
export interface NegotiatedRateChargesTotalCharge {
    /**
     * Total charges currency code.
     * @type {string}
     * @memberof NegotiatedRateChargesTotalCharge
     */
    CurrencyCode: string;
    /**
     * Total charges monetary value.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof NegotiatedRateChargesTotalCharge
     */
    MonetaryValue: string;
}
/**
 * TotalChargesWithTaxes container would be returned only if TaxInformationIndicator is present in request. TotalChargesWithTaxes contains total charges including total taxes applied to a shipment.
 * @export
 * @interface NegotiatedRateChargesTotalChargesWithTaxes
 */
export interface NegotiatedRateChargesTotalChargesWithTaxes {
    /**
     * TotalChargesWithTaxes currency code type.� The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof NegotiatedRateChargesTotalChargesWithTaxes
     */
    CurrencyCode: string;
    /**
     * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof NegotiatedRateChargesTotalChargesWithTaxes
     */
    MonetaryValue: string;
}
/**
 * Net Charge currency code.
 * @export
 */
export type NetChargeCurrencyCode = string;
/**
 * Net charges monetary value.  Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type NetChargeMonetaryValue = string;
/**
 * If the RVC is calculated over a period of time, it should be identified by the begin date (yyyyMMdd) of that period. (Reference: Articles 402.1, 402.5).  Applies to NAFTA CO only. Format is yyyyMMdd.
 * @export
 */
export type NetCostDateRangeBeginDate = string;
/**
 * If the RVC is calculated over a period of time, it should be identified by the End date (yyyyMMdd) of that period. (Reference: Articles 402.1, 402.5).  Applies to NAFTA CO only. Format is yyyyMMdd.
 * @export
 */
export type NetCostDateRangeEndDate = string;
/**
 * Container for the e-mail message.
 * @export
 * @interface NotificationEMail
 */
export interface NotificationEMail {
    /**
     * The destination email address of the receiver returns notification email.
     * @type {Array<string>}
     * @memberof NotificationEMail
     */
    EMailAddress: Array<string>;
    /**
     * The e-mail address where an undeliverable email message is sent if the Receiver Return Notification email is undeliverable.  Defaults to FromEMailAddress.� Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    UndeliverableEMailAddress?: string;
    /**
     * The email address listed in the Reply To field of the message header, includes name and e-mail address of sender. The \"From\" field of the message header contains pkginfo@ups.com.  Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    FromEMailAddress?: string;
    /**
     * The name the receiver return notification will appear to be from.  Defaults to the Shipper Name.� Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    FromName?: string;
    /**
     * User defined text that will be included in the email.  Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    Memo?: string;
    /**
     * The eMails subject. Defaults to the UPS Receiver Return Notification plus the shipment ID.  Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    Subject?: string;
    /**
     * Specifies a reference code and reference number to display in the subject of the Receiver Return Notification.�   When the subject code is provided, the subject will contain the following: UPS Receiver Return Notification.�   The reference code (the reference code will be mapped to the corresponding ANSI value) Plus the reference number.  The valid subject codes are: 01 - Shipment Reference Number 1,  02 - Shipment Reference Number 2,   03 - package Reference Number 1,  04 - package Reference Number 2, 05 - package Reference Number 3, 06 - package Reference Number 4, 07 - package Reference Number 5, 08 - Subject Text (Return Notification only).  If the subject code tag is not provided and the subject text is provided, the subject of the notification will be the subject text.�   If the subject text is provided, and subject code tag exists, then the subject code value must be 08.   If the subject code is 08, the subject text must exist. If a subject code is provided that refers to a nonexistent reference number, the subject will default to the tracking number.� Only allowed at the first package.
     * @type {string}
     * @memberof NotificationEMail
     */
    SubjectCode?: string;
}
/**
 * This container is used for providing Language and dialect details for Alternate Delivery Location notifications and UAP Shipper notifications.  Valid only for Alternate Delivery Location notification and UAP Shipper notification.
 * @export
 * @interface NotificationLocale
 */
export interface NotificationLocale {
    /**
     * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
     * @type {string}
     * @memberof NotificationLocale
     */
    Language: string;
    /**
     * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
     * @type {string}
     * @memberof NotificationLocale
     */
    Dialect: string;
}
/**
 * Notification Code.  Valid values: 3 - Receiver Return Notification 6 - QV Email Notification 7 - QV Exception Notification 8 - QV Delivery Notification  For Mail Innovations forward shipments, QV Email Notifications are allowed for First Class, Priority Mail, and Expedited Mail Innovation services.
 * @export
 */
export type NotificationNotificationCode = string;
/**
 * TextMessage container is used for specifying phone number for receiving text Alternate Delivery Location notification and UAP Shipper notification.  Valid only for Alternate Delivery Location notification and UAP Shipper notification. VoiceMessage phone number or TextMessage phone number or email address is required for ADL notification and UAP Shipper notification.
 * @export
 * @interface NotificationTextMessage
 */
export interface NotificationTextMessage {
    /**
     * Phone number for receiving Text PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
     * @type {string}
     * @memberof NotificationTextMessage
     */
    PhoneNumber: string;
}
/**
 * VoiceMessage container is used for specifying phone number for receiving voice Alternate Delivery Location notification and UAP Shipper notification.  Valid only for Alternate Delivery Location notification and UAP Shipper notification. VoiceMessage phone number or TextMessage phone number or email address is required for ADL notification and UAP Shipper notification.
 * @export
 * @interface NotificationVoiceMessage
 */
export interface NotificationVoiceMessage {
    /**
     * Phone number for receiving Voice PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
     * @type {string}
     * @memberof NotificationVoiceMessage
     */
    PhoneNumber: string;
}
/**
 * Description of what the other charges are for.  Applies to Invoice and Partial Invoice forms only. Required for Complete Invoice and Optional for Partial Invoice forms.
 * @export
 */
export type OtherChargesDescription = string;
/**
 * The Monetary value of Other Charges.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Valid characters are 0-9 and �.� (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.
 * @export
 */
export type OtherChargesMonetaryValue = string;
/**
 * Indicates the EEI UPS Filed POA filing option.  Applicable for EEI form. Valid values are 1- One Time POA; 2- Blanket POA.
 * @export
 */
export type POACode = string;
/**
 * Description for POA Code.  Applicable for EEI form.
 * @export
 */
export type POADescription = string;
/**
 * Additional Handling Required. The presence indicates additional handling is required, the absence indicates no additional handling is required. Additional Handling indicator indicates it�s a non-corrugated package.
 * @export
 */
export type PackageAdditionalHandlingIndicator = string;
/**
 * Package number the product should be allocated to ont he packing list.  Required for packaging list and Air Freight Packing list.
 * @export
 */
export type PackageAssociatedPackageNumber = string;
/**
 * Amount of Product associated with a package.  Required for packaging list and Air Freight Packing list.
 * @export
 */
export type PackageAssociatedProductAmount = string;
/**
 * Product Note.
 * @export
 */
export type PackageAssociatedProductNote = string;
/**
 * Container to hold the Commodity information.  It is required if the Ground Freight Pricing Shipment indicator is present in the request.
 * @export
 * @interface PackageCommodity
 */
export interface PackageCommodity {
    /**
     * Freight Classification. Freight class partially determines the freight rate for the article.  Required for Ground Freight Pricing Shipments only.
     * @type {string}
     * @memberof PackageCommodity
     */
    FreightClass: string;
    /**
     *
     * @type {CommodityNMFC}
     * @memberof PackageCommodity
     */
    NMFC?: CommodityNMFC;
}
/**
 * Merchandise description of package.  Required for shipment with return service.
 * @export
 */
export type PackageDescription = string;
/**
 * Dimensional weight of shipment. Please visit ups.com for rules on calculating. There is one implied decimal place (e.g. 115 = 11.5).  If dimensions are provided, dimensional weight is ignored. For US/PR/CA shipments, dimensional weight is ignored
 * @export
 * @interface PackageDimWeight
 */
export interface PackageDimWeight {
    /**
     *
     * @type {DimWeightUnitOfMeasurement}
     * @memberof PackageDimWeight
     */
    UnitOfMeasurement?: DimWeightUnitOfMeasurement;
    /**
     * Actual package weight.  Weight accepted for letters/envelopes.
     * @type {string}
     * @memberof PackageDimWeight
     */
    Weight?: string;
}
/**
 * Dimensions information container. Note: Currently dimensions are not applicable to Ground Freight Pricing.  Length + 2*(Width + Height) must be less than or equal to 165 IN or 330 CM.�Required for Heavy Goods service. Package Dimension will be ignored for Simple Rate
 * @export
 * @interface PackageDimensions
 */
export interface PackageDimensions {
    /**
     *
     * @type {DimensionsUnitOfMeasurement}
     * @memberof PackageDimensions
     */
    UnitOfMeasurement: DimensionsUnitOfMeasurement;
    /**
     * The length of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Length: string;
    /**
     * The width of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Width: string;
    /**
     * The height of the line item used to determine dimensional weight.
     * @type {string}
     * @memberof PackageDimensions
     */
    Height: string;
}
/**
 * Required when number of hazmat containers in a package is greater than 1. It indicates whether all the hazmat materials are kept in a single box or multiple boxes.  Required when number of hazmat container in a package is greater than 1.
 * @export
 * @interface PackageHazMatPackageInformation
 */
export interface PackageHazMatPackageInformation {
    /**
     * Presence/Absence Indicator. Any value is ignored. Presence indicates if multiple, different hazmat/chemicals are contained within one box in a package  When number of Hazmat containers in a package is more than one, either AllPackedInOneIndicator or OverPackedIndicator is needed
     * @type {string}
     * @memberof PackageHazMatPackageInformation
     */
    AllPackedInOneIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. Presence indicates that one or more hazmat/chemicals are in separate boxes in a package.  When number of Hazmat containers in a package is more than one, either AllPackedInOneIndicator or OverPackedIndicator is needed
     * @type {string}
     * @memberof PackageHazMatPackageInformation
     */
    OverPackedIndicator?: string;
    /**
     * When a HazMat shipment specifies AllPackedInOneIndicator and the regulation set for that shipment is IATA, Ship API must require the shipment to specify a Q-Value with exactly one of the following values: 0.1; 0.2; 0.3; 0.4; 0.5; 0.6; 0.7; 0.8; 0.9; 1.0
     * @type {string}
     * @memberof PackageHazMatPackageInformation
     */
    QValue?: string;
    /**
     * This field is used for the Outer Hazmat packaging type.  Ex. FIBERBOARD BOX, WOOD(EN) BOX, PLASTIC JERRICAN, METAL BOX, STEEL DRUM, OTHER, PLASTIC BOX, PLASTIC DRUM, STYROFOAM BOX, CYLINDERS, ENVIROTAINER, PLYWOOD BOX, ALUMINUM DRUM, ALUMINUM CYLINDERS, PLASTIC PAIL, PLYWOOD DRUM, FIBER DRUM, STEEL JERRICAN, ALUMINUM JERRICAN, STEEL BOX, CARTON, ALUMINUM BOX
     * @type {string}
     * @memberof PackageHazMatPackageInformation
     */
    OuterPackagingType?: string;
}
/**
 * Presence of the indicator mentions that the package is Large Package.  This is an empty tag, any value inside is ignored.
 * @export
 */
export type PackageLargePackageIndicator = string;
/**
 * Contains the status code tags.
 * @export
 * @interface PackageLevelResultStatus
 */
export interface PackageLevelResultStatus {
    /**
     * The Package Level void status code.  A numeric value that describes the status code. 1 = Voided or Already Voided;  0 = Not Voided
     * @type {string}
     * @memberof PackageLevelResultStatus
     */
    Code: string;
    /**
     * A text description of the status code.
     * @type {string}
     * @memberof PackageLevelResultStatus
     */
    Description: string;
}
/**
 * The package's identification number
 * @export
 */
export type PackageLevelResultTrackingNumber = string;
/**
 * Number of Pieces. Applicable for Air Freight only
 * @export
 */
export type PackageNumOfPieces = string;
/**
 * Package Service Options container.
 * @export
 * @interface PackagePackageServiceOptions
 */
export interface PackagePackageServiceOptions {
    /**
     *
     * @type {PackageServiceOptionsDeliveryConfirmation}
     * @memberof PackagePackageServiceOptions
     */
    DeliveryConfirmation?: PackageServiceOptionsDeliveryConfirmation;
    /**
     *
     * @type {PackageServiceOptionsDeclaredValue}
     * @memberof PackagePackageServiceOptions
     */
    DeclaredValue?: PackageServiceOptionsDeclaredValue;
    /**
     *
     * @type {PackageServiceOptionsCOD}
     * @memberof PackagePackageServiceOptions
     */
    COD?: PackageServiceOptionsCOD;
    /**
     *
     * @type {PackageServiceOptionsAccessPointCOD}
     * @memberof PackagePackageServiceOptions
     */
    AccessPointCOD?: PackageServiceOptionsAccessPointCOD;
    /**
     * The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    ShipperReleaseIndicator?: string;
    /**
     *
     * @type {PackageServiceOptionsNotification}
     * @memberof PackagePackageServiceOptions
     */
    Notification?: PackageServiceOptionsNotification;
    /**
     *
     * @type {PackageServiceOptionsHazMat}
     * @memberof PackagePackageServiceOptions
     */
    HazMat?: PackageServiceOptionsHazMat;
    /**
     *
     * @type {PackageServiceOptionsDryIce}
     * @memberof PackagePackageServiceOptions
     */
    DryIce?: PackageServiceOptionsDryIce;
    /**
     * An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   The UPSPremiumCareIndicator cannot be requested for package with Delivery Confirmation - Adult Signature Required and Delivery Confirmation- Signature Required.   UPSPremiumCareIndicator is valid for following Return services:�  Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label  Return Service Three Attempt  The UPSPremiumCareIndicator can be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver  UPS Standard Valid only for Canada to Canada movements.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    UPSPremiumCareIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. If present, the package is rated for UPS Proactive Response and proactive package tracking. Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Reponse.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    ProactiveIndicator?: string;
    /**
     * Identifies the package containing Dangerous Goods.  Required for Hazmat shipment if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    PackageIdentifier?: string;
    /**
     * Unique identifier for clinical trials
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    ClinicalTrialsID?: string;
    /**
     * Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.
     * @type {string}
     * @memberof PackagePackageServiceOptions
     */
    RefrigerationIndicator?: string;
}
/**
 * Container to hold package weight information.  Package weight is a required for Ground Freight Pricing shipments and Heavy Goods service. Package Weight will be ignored for Simple Rate.
 * @export
 * @interface PackagePackageWeight
 */
export interface PackagePackageWeight {
    /**
     *
     * @type {PackageWeightUnitOfMeasurement}
     * @memberof PackagePackageWeight
     */
    UnitOfMeasurement: PackageWeightUnitOfMeasurement;
    /**
     * Packages weight. Weight accepted for letters/envelopes.  Only average package weight is required for Ground Freight Pricing Shipment.
     * @type {string}
     * @memberof PackagePackageWeight
     */
    Weight: string;
}
/**
 * Packaging container.  Container for Packaging Type.
 * @export
 * @interface PackagePackaging
 */
export interface PackagePackaging {
    /**
     * Package types. Values are:  01 = UPS Letter  02 = Customer Supplied Package  03 = Tube  04 = PAK  21 = UPS Express Box  24 = UPS 25KG Box  25 = UPS 10KG Box  30 = Pallet  2a = Small Express Box  2b = Medium Express Box  2c = Large Express Box  56 = Flats  57 = Parcels  58 = BPM  59 = First Class  60 = Priority  61 = Machineables  62 = Irregulars  63 = Parcel Post  64 = BPM Parcel  65 = Media Mail  66 = BPM Flat  67 = Standard Flat.   Note: Only packaging type code 02 is applicable to Ground Freight Pricing.   Package type 24, or 25 is only allowed for shipment without return service.� Packaging type must be valid for all the following:� ShipTo country or territory, ShipFrom country or territory, a shipment going from ShipTo country or territory to ShipFrom country or territory, all Accessorials at both the shipment and package level, and the shipment service type. UPS will not accept raw wood pallets and please refer the UPS packaging guidelines for pallets on UPS.com.
     * @type {string}
     * @memberof PackagePackaging
     */
    Code: string;
    /**
     * Description of packaging type. Examples are letter, customer supplied, express box.
     * @type {string}
     * @memberof PackagePackaging
     */
    Description?: string;
}
/**
 * Description of articles & special marks. Applicable for Air Freight only
 * @export
 */
export type PackagePalletDescription = string;
/**
 * Package reference number information container.  For Mail Innovation shipments, up to 3 reference numbers are supported. If 5 reference numbers are specified (CostCenter, PackageID, and 3 ReferenceNumbers) the 3 desigated by the ReferenceNumber container will not be visible on 4x6 label supported by the API. These additional reference numbers are only be visible on the 4x8 label..  For non-Mail Innovation shipments only the first 2 reference numbers will be visible on labels.
 * @export
 * @interface PackageReferenceNumber
 */
export interface PackageReferenceNumber {
    /**
     * If the indicator is present then the reference numbers value will be bar coded on the label.  This is an empty tag, any value inside is ignored.   Only one shipment-level or package-level reference number can be bar coded per shipment.   In order to barcode a reference number, its value must be no longer than 14 alphanumeric characters or 24 numeric characters and cannot contain spaces.
     * @type {string}
     * @memberof PackageReferenceNumber
     */
    BarCodeIndicator?: string;
    /**
     * Reference number type code, for the entire shipment. The code specifies the Reference name.   Refer to the Reference Number Code table.  Valid if the origin/destination pair is US/US or PR/PR and character should be alpha-numeric.
     * @type {string}
     * @memberof PackageReferenceNumber
     */
    Code?: string;
    /**
     * Customer supplied reference number.  Valid if the origin/destination pair is US/US or PR/PR.
     * @type {string}
     * @memberof PackageReferenceNumber
     */
    Value: string;
}
/**
 * The container for Accessorial indicators. This information would be returned only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service request with Dry Ice or Oversize Pallet and SubVersion greater than or equal to 1707.  This is valid only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service.
 * @export
 * @interface PackageResultsAccessorial
 */
export interface PackageResultsAccessorial {
    /**
     * Code for Accessorial Indicator.
     * @type {string}
     * @memberof PackageResultsAccessorial
     */
    Code: string;
    /**
     * Description for Accessorial Indicator.
     * @type {string}
     * @memberof PackageResultsAccessorial
     */
    Description?: string;
}
/**
 * Base Service Charge container. Transportation charge = BaseServiceCharge + Fuel charge  Returned only if Subversion >=1701.
 * @export
 * @interface PackageResultsBaseServiceCharge
 */
export interface PackageResultsBaseServiceCharge {
    /**
     * BaseServiceCharge currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof PackageResultsBaseServiceCharge
     */
    CurrencyCode: string;
    /**
     * Base Service Charge value amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof PackageResultsBaseServiceCharge
     */
    MonetaryValue: string;
}
/**
 * USPS defined CN22 ID number format varies based on destination country or territory.  Not applicable as of Jan 2015.  Mail Innovations shipments US to VI, PR, and GU are not considered international.
 * @export
 */
export type PackageResultsCN22Number = string;
/**
 * Container tag for the International forms image.  Currently this container would be returned for UPS Premium Care shipments. Form is returned for following shipments - Forward shipments, Shipments with PRL ReturnService, Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707. CN22 data for Worlwide economy services will be returned within the PDF417 barcode of the label.
 * @export
 * @interface PackageResultsForm
 */
export interface PackageResultsForm {
    /**
     * Code that indicates the type of form.�   Applicable only for ShipmentResponse and ShipAcceptResponse.  Valid values: 01 - All Requested International Forms.
     * @type {string}
     * @memberof PackageResultsForm
     */
    Code: string;
    /**
     * Description that indicates the type of form. Possible Values. All Requested International Forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsForm
     */
    Description: string;
    /**
     *
     * @type {FormImage}
     * @memberof PackageResultsForm
     */
    Image?: FormImage;
    /**
     * Unique Id for later retrieval of saved version of the completed international forms. Always returned when code = 01. 01 represents international forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsForm
     */
    FormGroupId?: string;
    /**
     * Contains description text which identifies the group of International forms. This element is part of both request and response. This element does not appear on the forms.    Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsForm
     */
    FormGroupIdName?: string;
}
/**
 * Itemized Charges are returned only when the subversion element is present and greater than or equal to 1607.  Package level itemized charges are only returned for US domestic movements
 * @export
 * @interface PackageResultsItemizedCharges
 */
export interface PackageResultsItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof PackageResultsItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof PackageResultsItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof PackageResultsItemizedCharges
     */
    CurrencyCode: string;
    /**
     * Itemized Charges value amount.
     * @type {string}
     * @memberof PackageResultsItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of ItemizedCharges type.
     * @type {string}
     * @memberof PackageResultsItemizedCharges
     */
    SubType?: string;
}
/**
 * Negotiated Rates Charge Container.  These charges are returned when: 1) Subversion is greater than or equal to 1607 2) If negotiated rates were requested for GFP shipments and account number is eligible to receive negotiated rates.
 * @export
 * @interface PackageResultsNegotiatedCharges
 */
export interface PackageResultsNegotiatedCharges {
    /**
     *
     * @type {Array<NegotiatedChargesItemizedCharges>}
     * @memberof PackageResultsNegotiatedCharges
     */
    ItemizedCharges?: Array<NegotiatedChargesItemizedCharges>;
}
/**
 * Container for returned Rate Modifier information. Applies only if SubVersion is 2205 or greater.
 * @export
 * @interface PackageResultsRateModifier
 */
export interface PackageResultsRateModifier {
    /**
     * Rate Modifier Type. Example: \"ORM\". Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof PackageResultsRateModifier
     */
    ModifierType: string;
    /**
     * Rate Modifier Description. Example: \"Origin Modifier\". Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof PackageResultsRateModifier
     */
    ModifierDesc: string;
    /**
     * Rate Currency Code. Example: \"USD\"
     * @type {string}
     * @memberof PackageResultsRateModifier
     */
    CurrencyCode: string;
    /**
     * Amount. Example: \"-1.00\",\"0.25\". It contains positive or negative values. Applies only if SubVersion is 2205 or greater.
     * @type {string}
     * @memberof PackageResultsRateModifier
     */
    Amount: string;
}
/**
 * Shipment charges info. Shipment charges are only guaranteed to be returned for shipments whose origin country or territory is US or Puerto Rico.�   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface PackageResultsServiceOptionsCharges
 */
export interface PackageResultsServiceOptionsCharges {
    /**
     * Package accessorial charges currency code type.� The currency code used in the Shipment request is returned.   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsServiceOptionsCharges
     */
    CurrencyCode: string;
    /**
     * Package accessorial charges value amount.   Applicable only for ShipmentResponse and ShipAcceptResponse. Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof PackageResultsServiceOptionsCharges
     */
    MonetaryValue: string;
}
/**
 * The container for UPS shipping label. Returned for following shipments - Forward shipments, Shipments with PRL returns service,  Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707. Shipping label wont be returned if BarCodeImageIndicator is present. Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface PackageResultsShippingLabel
 */
export interface PackageResultsShippingLabel {
    /**
     *
     * @type {ShippingLabelImageFormat}
     * @memberof PackageResultsShippingLabel
     */
    ImageFormat: ShippingLabelImageFormat;
    /**
     * Base 64 encoded graphic image.   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsShippingLabel
     */
    GraphicImage: string;
    /**
     * Base 64 encoded graphic image.  Applicable only for ShipmentResponse and ShipAcceptResponse for Mail Innovations CN22 Combination Forward Label with more than 3 commodities.
     * @type {Array<string>}
     * @memberof PackageResultsShippingLabel
     */
    GraphicImagePart: Array<string>;
    /**
     * Base 64 encoded graphic image of the Warsaw text and signature box. EPL2, ZPL and SPL labels. The image will be returned for non-US based shipments. One image will be given per shipment and it will be in the first PackageResults container.   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsShippingLabel
     */
    InternationalSignatureGraphicImage?: string;
    /**
     * Base 64 encoded html browser image rendering software. This is only returned for gif and png image formats.   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsShippingLabel
     */
    HTMLImage?: string;
    /**
     * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular. The image is Base 64 encoded and returned if the LabelImageFormat code is GIF.� Shipment with PRL return service only.�   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof PackageResultsShippingLabel
     */
    PDF417?: string;
}
/**
 * Supported for following shipments - PRL shipments, Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707.  Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface PackageResultsShippingReceipt
 */
export interface PackageResultsShippingReceipt {
    /**
     *
     * @type {ShippingReceiptImageFormat}
     * @memberof PackageResultsShippingReceipt
     */
    ImageFormat: ShippingReceiptImageFormat;
    /**
     * Base 64 encoded receipt in HTML format.�    Applicable only for ShipmentResponse and ShipAcceptResponse.  The receipt image is only returned for the first 5 packages.
     * @type {string}
     * @memberof PackageResultsShippingReceipt
     */
    GraphicImage: string;
}
/**
 * Package 1Z number.   For Mail Innovations shipments, please use the USPSPICNumber when tracking packages (a non-1Z number Mail Manifest Id is returned).  Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type PackageResultsTrackingNumber = string;
/**
 * USPSPICNumber is USPS Package Identification; it should be used for tracking Mail Innovations shipments.
 * @export
 */
export type PackageResultsUSPSPICNumber = string;
/**
 * Access Point COD indicates Package COD is requested for a shipment.  Valid only for \"01 - Hold For Pickup At UPS Access Point\" Shipment Indication type. Package Access Point COD is valid only for shipment without return service from US/PR to US/PR and CA to CA. Not valid with COD at package level.
 * @export
 * @interface PackageServiceOptionsAccessPointCOD
 */
export interface PackageServiceOptionsAccessPointCOD {
    /**
     * Access Point COD Currency Code.
     * @type {string}
     * @memberof PackageServiceOptionsAccessPointCOD
     */
    CurrencyCode: string;
    /**
     * Access Point COD Monetary Value.
     * @type {string}
     * @memberof PackageServiceOptionsAccessPointCOD
     */
    MonetaryValue: string;
}
/**
 * Container for COD.  Indicates COD is requested. Package level COD is available for shipment without return service from US/PR to US/PR, CA to CA, and CA to US. CA to US COD is not allowed for package Letter/ Envelope. COD is not valid for return service movements.
 * @export
 * @interface PackageServiceOptionsCOD
 */
export interface PackageServiceOptionsCOD {
    /**
     * For valid values refer to:�Rating and Shipping COD Supported Countries or Territories in the Appendix.
     * @type {string}
     * @memberof PackageServiceOptionsCOD
     */
    CODFundsCode: string;
    /**
     *
     * @type {CODCODAmount}
     * @memberof PackageServiceOptionsCOD
     */
    CODAmount: CODCODAmount;
}
/**
 * Unique identifier for clinical trials
 * @export
 */
export type PackageServiceOptionsClinicalTrialsID = string;
/**
 * Container for Declared Value.
 * @export
 * @interface PackageServiceOptionsDeclaredValue
 */
export interface PackageServiceOptionsDeclaredValue {
    /**
     *
     * @type {DeclaredValueType}
     * @memberof PackageServiceOptionsDeclaredValue
     */
    Type?: DeclaredValueType;
    /**
     * Declared value amount currency type. Defaults to the non-Euro currency used in the shippers country or territory.  Code must represent a currency that is a valid for Shipper country or territory.
     * @type {string}
     * @memberof PackageServiceOptionsDeclaredValue
     */
    CurrencyCode: string;
    /**
     * Declared value amount.
     * @type {string}
     * @memberof PackageServiceOptionsDeclaredValue
     */
    MonetaryValue: string;
}
/**
 * Delivery Confirmation container.  Refer to Delivery Confirmation Origin- Destination Pairs in the Appendix for a list of valid values.  Valid only for forward shipment only.
 * @export
 * @interface PackageServiceOptionsDeliveryConfirmation
 */
export interface PackageServiceOptionsDeliveryConfirmation {
    /**
     * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation 2 - Delivery Confirmation Signature Required 3 - Delivery Confirmation Adult Signature Required
     * @type {string}
     * @memberof PackageServiceOptionsDeliveryConfirmation
     */
    DCISType: string;
    /**
     * Delivery Confirmation Control number associated with the delivery confirmation for the package.  Valid for forward shipments only.
     * @type {string}
     * @memberof PackageServiceOptionsDeliveryConfirmation
     */
    DCISNumber?: string;
}
/**
 * Container for Dry Ice.  Maximum 1 Dry Ice is allowed. Lane check will happen based on postal code/ city.
 * @export
 * @interface PackageServiceOptionsDryIce
 */
export interface PackageServiceOptionsDryIce {
    /**
     * Regulation set for dryIce Shipment. Valid values: CFR = HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada, IATA= Worldwide Air movement.  The following values are valid: IATA, CFR.
     * @type {string}
     * @memberof PackageServiceOptionsDryIce
     */
    RegulationSet: string;
    /**
     *
     * @type {DryIceDryIceWeight}
     * @memberof PackageServiceOptionsDryIce
     */
    DryIceWeight: DryIceDryIceWeight;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 Kgs or 5.7 Lbs.
     * @type {string}
     * @memberof PackageServiceOptionsDryIce
     */
    MedicalUseIndicator?: string;
}
/**
 * Container to hold HazMat Chemical Records.
 * @export
 * @interface PackageServiceOptionsHazMat
 */
export interface PackageServiceOptionsHazMat {
    /**
     * The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR.  Valid values are 1 to 999.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    PackagingTypeQuantity?: string;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    RecordIdentifier1?: string;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    RecordIdentifier2?: string;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    RecordIdentifier3?: string;
    /**
     * Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.   Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    SubRiskClass?: string;
    /**
     * The type of regulated good for an ADR package where ADR is for Europe to Europe ground movement.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    aDRItemNumber?: string;
    /**
     * Required if the field applies to the material by regulation. Field input is Arabic numerals, output is Roman numerals. Will be shown in Roman Numerals.  Valid values:  �1� = �I�,  �2� = �II�,  �3� = �III�,  and blank.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    aDRPackingGroupLetter?: string;
    /**
     * The technical name (when required) for the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    TechnicalName?: string;
    /**
     * Defines the type of label that is required on the package for the commodity.   Not applicable if CommodityRegulatedLevelCode = LR or EQ.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    HazardLabelRequired?: string;
    /**
     * This is the hazard class associated to the specified commodity.   Required if CommodityRegulatedLevelCode is 'EQ', �LQ� or �FR�
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    ClassDivisionNumber?: string;
    /**
     * Optional reference number. It will be displayed only on label.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    ReferenceNumber?: string;
    /**
     * Required if CommodityRegulatedLevelCode = EQ, LQ or FR. The numerical value of the mass capacity of the regulated good.  Should be more than 0.0. Valid characters are 0-9 and \".\" (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including \".\" (Decimal point) and can hold up to 1 decimal place.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    Quantity?: string;
    /**
     * Required if CommodityRegulatedLevelCode = LQ, EQ or FR. The unit of measure used for the mass capacity of the regulated good.   For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    UOM?: string;
    /**
     * The type of package used to contain the regulated good. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Ex. FIBERBOARD BOX, WOOD(EN) BOX, PLASTIC JERRICAN, METAL BOX, STEEL DRUM, OTHER, PLASTIC BOX, PLASTIC DRUM, STYROFOAM BOX, CYLINDERS, ENVIROTAINER, PLYWOOD BOX, ALUMINUM DRUM, ALUMINUM CYLINDERS, PLASTIC PAIL, PLYWOOD DRUM, FIBER DRUM, STEEL JERRICAN, ALUMINUM JERRICAN, STEEL BOX, CARTON, ALUMINUM BOX
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    PackagingType?: string;
    /**
     * This is the ID number (UN/NA/ID) for the specified commodity.  Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation.  UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    IDNumber?: string;
    /**
     * The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    ProperShippingName: string;
    /**
     * Additional remarks or special provision information. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    AdditionalDescription?: string;
    /**
     * This is the packing group category associated to the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals.   Valid values: I II III blank
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    PackagingGroupType?: string;
    /**
     * The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    PackagingInstructionCode?: string;
    /**
     * 24 Hour Emergency Phone Number of the shipper. Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is 1, area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.                        The following are restricted in the phone number   period �.�, dash �-�, plus sign �+� and conventional parentheses �(� and �)�, �EXT\" or \"OPT�
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    EmergencyPhone?: string;
    /**
     * The emergency information, contact name and/or contract number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    EmergencyContact?: string;
    /**
     * Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    ReportableQuantity?: string;
    /**
     * The Regulatory set associated with every regulated shipment. It must be same across the shipment.  Valid values:  ADR = Europe to Europe Ground Movement  CFR = HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada  IATA= Worldwide Air movement  TDG= Canada to Canada ground movement or Canada to U.S. standard movement.  Valid values are ADR, CFR, IATA and TDG. For multiple Chemical Records per package or multiple packages containing different RegulationSet, RegulationSet of first Chemical Record would be considered for validating and rating the entire shipment.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    RegulationSet: string;
    /**
     * Not applicable for ADR regulation set. Required for any other regulation set. Declares that a package was prepared according to ground passenger aircraft or cargo aircraft only.  Valid values:  Highway=Highway  Ground=Ground  PAX=Passenger Aircraft  Passenger Aircraft=Passenger Aircraft  CAO=Cargo Aircraft Only  Cargo Aircraft Only=Cargo Aircraft Only  Valid entries include: Highway, Ground, PAX, Passenger Aircraft, CAO and Cargo Aircraft Only.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    TransportationMode: string;
    /**
     * Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ) or Lightly Regulated (LR).  Valid values are LR, FR, LQ and EQ. Required for subversion 1701 or greater. LR and EQ are validated if subversion is 1701 or greater. FR, LQ will be validated if subversion is 1807 or greater
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    CommodityRegulatedLevelCode?: string;
    /**
     * Transport Category.  Valid values are 0 to 4.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    TransportCategory?: string;
    /**
     * Defines what is restricted to pass through a tunnel.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    TunnelRestrictionCode?: string;
    /**
     * Identifies the Chemical Record.  Required if SubVersion is greater than or equal to 1701.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    ChemicalRecordIdentifier?: string;
    /**
     * Technical name in local language.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    LocalTechnicalName?: string;
    /**
     * Proper shipping name in local langauge.
     * @type {string}
     * @memberof PackageServiceOptionsHazMat
     */
    LocalProperShippingName?: string;
}
/**
 * Receiver Return Notification.  Applicable for Shipment with returned service.
 * @export
 * @interface PackageServiceOptionsNotification
 */
export interface PackageServiceOptionsNotification {
    /**
     * Notification Code.  Valid values: 3 - Receiver Return Notification 6 - QV Email Notification 7 - QV Exception Notification 8 - QV Delivery Notification  For Mail Innovations forward shipments, QV Email Notifications are allowed for First Class, Priority Mail, and Expedited Mail Innovation services.
     * @type {string}
     * @memberof PackageServiceOptionsNotification
     */
    NotificationCode: string;
    /**
     *
     * @type {NotificationEMail}
     * @memberof PackageServiceOptionsNotification
     */
    EMail: NotificationEMail;
}
/**
 * Identifies the package containing Dangerous Goods.  Required for Hazmat shipment if SubVersion is greater than or equal to 1701.
 * @export
 */
export type PackageServiceOptionsPackageIdentifier = string;
/**
 * Presence/Absence Indicator. Any value is ignored. If present, the package is rated for UPS Proactive Response and proactive package tracking. Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Reponse.
 * @export
 */
export type PackageServiceOptionsProactiveIndicator = string;
/**
 * Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.
 * @export
 */
export type PackageServiceOptionsRefrigerationIndicator = string;
/**
 * The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.
 * @export
 */
export type PackageServiceOptionsShipperReleaseIndicator = string;
/**
 * An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   The UPSPremiumCareIndicator cannot be requested for package with Delivery Confirmation - Adult Signature Required and Delivery Confirmation- Signature Required.   UPSPremiumCareIndicator is valid for following Return services:�  Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label  Return Service Three Attempt  The UPSPremiumCareIndicator can be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver  UPS Standard Valid only for Canada to Canada movements.
 * @export
 */
export type PackageServiceOptionsUPSPremiumCareIndicator = string;
/**
 * UPS Premier Container.
 * @export
 * @interface PackageUPSPremier
 */
export interface PackageUPSPremier {
    /**
     * UPS Premier Category.  Valid values are 01,02,03                             UPS Premier Silver -01 UPS Premier Gold - 02 UPS Premier Platinum - 03
     * @type {string}
     * @memberof PackageUPSPremier
     */
    Category: string;
    /**
     * SensorID is RFID for UPS Premier Silver. SensorID is MeshID for UPS Premier Gold or UPS Premier Platinum Package.
     * @type {string}
     * @memberof PackageUPSPremier
     */
    SensorID: string;
    /**
     *
     * @type {UPSPremierHandlingInstructions}
     * @memberof PackageUPSPremier
     */
    HandlingInstructions: UPSPremierHandlingInstructions;
}
/**
 * Unit price of the commodity. Applicable for Air Freight only  Limit to 2 digit after the decimal. The maximum length of the field is 12 including �.� and can hold up to 2 decimal place. (e.g. 999999999.99)
 * @export
 */
export type PackageUnitPrice = string;
/**
 * Container to hold UnitOfMeasurement information for package weight.
 * @export
 * @interface PackageWeightUnitOfMeasurement
 */
export interface PackageWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof PackageWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof PackageWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Packages weight. Weight accepted for letters/envelopes.  Only average package weight is required for Ground Freight Pricing Shipment.
 * @export
 */
export type PackageWeightWeight = string;
/**
 * Package types. Values are:  01 = UPS Letter  02 = Customer Supplied Package  03 = Tube  04 = PAK  21 = UPS Express Box  24 = UPS 25KG Box  25 = UPS 10KG Box  30 = Pallet  2a = Small Express Box  2b = Medium Express Box  2c = Large Express Box  56 = Flats  57 = Parcels  58 = BPM  59 = First Class  60 = Priority  61 = Machineables  62 = Irregulars  63 = Parcel Post  64 = BPM Parcel  65 = Media Mail  66 = BPM Flat  67 = Standard Flat.   Note: Only packaging type code 02 is applicable to Ground Freight Pricing.   Package type 24, or 25 is only allowed for shipment without return service.� Packaging type must be valid for all the following:� ShipTo country or territory, ShipFrom country or territory, a shipment going from ShipTo country or territory to ShipFrom country or territory, all Accessorials at both the shipment and package level, and the shipment service type. UPS will not accept raw wood pallets and please refer the UPS packaging guidelines for pallets on UPS.com.
 * @export
 */
export type PackagingCode = string;
/**
 * Description of packaging type. Examples are letter, customer supplied, express box.
 * @export
 */
export type PackagingDescription = string;
/**
 * Data Container holding package/product related information that will break up the product into each package on the packing list.  Total product amount must equal the product unit value above. Required for packaging list and Air Freight Packing list.                                                      Packaging list max allowed : 20 Air Freight Packaging list max allowed: 200
 * @export
 * @interface PackingListInfoPackageAssociated
 */
export interface PackingListInfoPackageAssociated {
    /**
     * Package number the product should be allocated to ont he packing list.  Required for packaging list and Air Freight Packing list.
     * @type {string}
     * @memberof PackingListInfoPackageAssociated
     */
    PackageNumber: string;
    /**
     * Amount of Product associated with a package.  Required for packaging list and Air Freight Packing list.
     * @type {string}
     * @memberof PackingListInfoPackageAssociated
     */
    ProductAmount: string;
    /**
     * Product Note.
     * @type {string}
     * @memberof PackingListInfoPackageAssociated
     */
    ProductNote?: string;
}
/**
 * Shipment charge container.  If Duty and Tax charges are applicable to a shipment and a payer is not specified, the default payer of Duty and Tax charges is Bill to Receiver.
 * @export
 * @interface PaymentInformationShipmentCharge
 */
export interface PaymentInformationShipmentCharge {
    /**
     * Valid values:  01 = Transportation 02 = Duties and Taxes                                                                03 = Broker of Choice  A shipment charge type of 01 = Transportation is required.   A shipment charge type of 02 = Duties and Taxes is not required; however, this charge type is invalid for Qualified Domestic Shipments.   A Qualified Domestic Shipment is any shipment in which one of the following applies:   1) The origin and destination country or territory is the same.  2) US to PR shipment.  3) PR to US shipment.  4) The origin and destination country or territory are both European Union countries or territories and the GoodsNotInFreeCirculation indicator is not present.  5) The origin and destination IATA code is the same.                                                                                                                                                                                                                                                                                                                                                                                                                                                      03 = Broker of Choice
     * @type {string}
     * @memberof PaymentInformationShipmentCharge
     */
    Type: string;
    /**
     *
     * @type {ShipmentChargeBillShipper}
     * @memberof PaymentInformationShipmentCharge
     */
    BillShipper?: ShipmentChargeBillShipper;
    /**
     *
     * @type {ShipmentChargeBillReceiver}
     * @memberof PaymentInformationShipmentCharge
     */
    BillReceiver?: ShipmentChargeBillReceiver;
    /**
     *
     * @type {ShipmentChargeBillThirdParty}
     * @memberof PaymentInformationShipmentCharge
     */
    BillThirdParty?: ShipmentChargeBillThirdParty;
    /**
     * Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  This is an empty tag, any value inside is ignored. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.  This payment method allows you to bill the charges for a specified shipment to a consignee who has agreed to pay the charges. All shipping charges are billed to the consignees UPS account number including the following accessorials: Additional Handling, Delivery Area Surcharges, Delivery Change Requests, Early AM Premium, Early AM Out of Territory, Fuel Surcharge, Hazardous Material Surcharges, Large Package Surcharge, Over Max Limits, and Saturday Delivery.  Declared Value, Delivery Confirmation, On Call Pickup, Remote Area Surcharge, Saturday Pickup of Delivery fees are not passed to the consignee. These charges are billed to the shippers UPS account number.
     * @type {string}
     * @memberof PaymentInformationShipmentCharge
     */
    ConsigneeBilledIndicator?: string;
}
/**
 * Split Duty VAT Indicator. The presence indicates the payer specified for Transportation Charges will pay transportation charges and any duties that apply to the shipment. The payer specified for Duties and Taxes will pay the VAT (Value-Added Tax) only.  This is an empty tag, any value inside is ignored. The payment method for Transportation charges must be UPS account. The UPS account must be a daily pickup account or an occasional account.
 * @export
 */
export type PaymentInformationSplitDutyVATIndicator = string;
/**
 * Sold To contacts phone extension.
 * @export
 */
export type PhoneExtension = string;
/**
 * Sold To contacts phone number.
 * @export
 */
export type PhoneNumber = string;
/**
 * The beginning of the date range for the candidate. Format: YYYYMMDD  Service is only supported for 30 days
 * @export
 */
export type PickupDateRangeBeginDate = string;
/**
 * The end of the date range for the candidate. Format: YYYYMMDD
 * @export
 */
export type PickupDateRangeEndDate = string;
/**
 * This container is used for Populating EMailMessage details for PreAlertNotification.
 * @export
 * @interface PreAlertNotificationEMailMessage
 */
export interface PreAlertNotificationEMailMessage {
    /**
     * EMailAddress where PreAlertNotification is sent.
     * @type {string}
     * @memberof PreAlertNotificationEMailMessage
     */
    EMailAddress: string;
    /**
     * This is used for notification when EMailAddress for PreAlertNotification is undeliverable.
     * @type {string}
     * @memberof PreAlertNotificationEMailMessage
     */
    UndeliverableEMailAddress?: string;
}
/**
 * This container is used for providing Language and dialect details for PreAlertNotification.
 * @export
 * @interface PreAlertNotificationLocale
 */
export interface PreAlertNotificationLocale {
    /**
     * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
     * @type {string}
     * @memberof PreAlertNotificationLocale
     */
    Language: string;
    /**
     * Refer to Language/Dialect Combinations in the Appendix for valid pairs.
     * @type {string}
     * @memberof PreAlertNotificationLocale
     */
    Dialect: string;
}
/**
 * TextMessage container is used for specifying phone number for receiving text preAlertNotification.
 * @export
 * @interface PreAlertNotificationTextMessage
 */
export interface PreAlertNotificationTextMessage {
    /**
     * Phone number for receiving Text PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
     * @type {string}
     * @memberof PreAlertNotificationTextMessage
     */
    PhoneNumber: string;
}
/**
 * VoiceMessage container is used for specifying phone number for receiving voice PreAlertNotification.
 * @export
 * @interface PreAlertNotificationVoiceMessage
 */
export interface PreAlertNotificationVoiceMessage {
    /**
     * Phone number for receiving Voice PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
     * @type {string}
     * @memberof PreAlertNotificationVoiceMessage
     */
    PhoneNumber: string;
}
/**
 * Address information of the Producer.  Applies to NAFTA CO. Only applicable if producer option is empty or not present. Conditionally required for: NAFTA CO, when Producer option is not specified.
 * @export
 * @interface ProducerAddress
 */
export interface ProducerAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ProducerAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof ProducerAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof ProducerAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s town code.
     * @type {string}
     * @memberof ProducerAddress
     */
    Town?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof ProducerAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof ProducerAddress
     */
    CountryCode: string;
}
/**
 * Contact name at the Producer location.  Applies to NAFTA CO.
 * @export
 */
export type ProducerAttentionName = string;
/**
 * Company Name or the Individual name of the Producer.  Applies to NAFTA CO.  Only applicable when producer option is empty or not present. Conditionally required for: NAFTA CO, when Producer option is not specified.
 * @export
 */
export type ProducerCompanyName = string;
/**
 * Producer email address.  Applies to NAFTA CO.
 * @export
 */
export type ProducerEMailAddress = string;
/**
 * The text associated with the code will be printed in the producer section instead of producer contact information.  Use attached List if more than one producer�s good is included on the Certificate, attach a list of additional producers, including the legal name, address (including country or territory), and legal tax identification number, cross-referenced to the goods described in the Description of Goods field.  Applies to NAFTA CO.   Valid values:  01 - AVAILABLE TO CUSTOMS UPON REQUEST 02 - SAME AS EXPORTER 03 - ATTACHED LIST 04 - UNKNOWN
 * @export
 */
export type ProducerOption = string;
/**
 * Phone number information of Producer.  Applies to NAFTA CO.
 * @export
 * @interface ProducerPhone
 */
export interface ProducerPhone {
    /**
     * Sold To contacts phone number.
     * @type {string}
     * @memberof ProducerPhone
     */
    Number: string;
    /**
     * Sold To contacts phone extension.
     * @type {string}
     * @memberof ProducerPhone
     */
    Extension?: string;
}
/**
 * Tax ID of the Producer.  Applies to NAFTA CO. Only applicable when producer option is empty or not present
 * @export
 */
export type ProducerTaxIdentificationNumber = string;
/**
 * 6-to-15-alphanumeric commodity code. Customs uses this code to determine what duties should be assessed on the commodity.  Applies to Invoice, Partial Invoice and NAFTA CO. Required for NAFTA CO and optional for Partial Invoice. Should be at least 6 alphanumeric. For NAFTA CO: For each good described in Description of Goods field, identify the H.S. tariff classification to six digits. If the good is subject to a specific rule of origin in Annex 401 that requires eight digits, identify to eight digits, using the H.S. tariff classification of the country or territory into whose territory the good is imported.
 * @export
 */
export type ProductCommodityCode = string;
/**
 * Description of the product.  Applies to all International Forms. Optional for Partial Invoice. Must be present at least once and can occur for a maximum of 3 times.
 * @export
 */
export type ProductDescription = string;
/**
 * Required for EEI form.  Applies to EEI form only.
 * @export
 * @interface ProductEEIInformation
 */
export interface ProductEEIInformation {
    /**
     * Required for EEI form id it is a SDL product. Valid values: LC, LV, SS,MS, GS, DP, HR, UG, IC, SC, DD, HH, SR, TE,TL, IS, CR, GP, RJ, TP, IP, IR, DB, CH, RS, OS  Applies to EEI form only. Required if EEIFilingOption code 3 specified for EEI form.
     * @type {string}
     * @memberof ProductEEIInformation
     */
    ExportInformation?: string;
    /**
     *
     * @type {EEIInformationLicense}
     * @memberof ProductEEIInformation
     */
    License?: EEIInformationLicense;
    /**
     *
     * @type {EEIInformationDDTCInformation}
     * @memberof ProductEEIInformation
     */
    DDTCInformation?: EEIInformationDDTCInformation;
}
/**
 * Container tag for determining whether or not to exclude product information from a particular form.  If this container is not present we assume that the DEFAULT is selected which is \"none\" and all products will appear on all forms.
 * @export
 * @interface ProductExcludeFromForm
 */
export interface ProductExcludeFromForm {
    /**
     * Indicates the name of the International form requested to NOT have product information.  Possible Values are 04 � NAFTA CO.  Please note that if this is used and you DO NOT have the corresponding form type requested this will be IGNORED.
     * @type {string}
     * @memberof ProductExcludeFromForm
     */
    FormType: string;
}
/**
 * Code indicating Domestic: Exports that have been produced, manufactured, or grown in the United States or Puerto Rico. This includes imported merchandise which has been enhanced in value or changed from the form in which imported by further manufacture or processing in the United States or Puerto Rico. Foreign: Merchandise that has entered the United States and is being exported again in the same condition as when imported.   Applies to EEI forms only. Required for EEI form.  Valid values:  D: Domestic; F: Foreign.
 * @export
 */
export type ProductExportType = string;
/**
 * If present, JNT will be used as the origin of country or territory code on the NAFTA form and the Product/Origincountry or territoryCode tag will be ignored.  Applies to NAFTA CO only.
 * @export
 */
export type ProductJointProductionIndicator = string;
/**
 * Any special marks, codes, and numbers that may appear on package.  Applies to CO Only.
 * @export
 */
export type ProductMarksAndNumbers = string;
/**
 * For each good described in the Description of Goods field, where the good is subject to a regional value content (RVC) requirement, indicate NC if the RVC is calculated according to the net cost method; otherwise, indicate NO. If the RVC is calculated over a period of time then indicate �NC with begin/end date� by passing code �ND�  Applies to NAFTA CO only. Required for NAFTA CO.  Valid values: NC, ND and NO.
 * @export
 */
export type ProductNetCostCode = string;
/**
 * Date Range for regional value content (RVC).  Applies to NAFTA CO only.
 * @export
 * @interface ProductNetCostDateRange
 */
export interface ProductNetCostDateRange {
    /**
     * If the RVC is calculated over a period of time, it should be identified by the begin date (yyyyMMdd) of that period. (Reference: Articles 402.1, 402.5).  Applies to NAFTA CO only. Format is yyyyMMdd.
     * @type {string}
     * @memberof ProductNetCostDateRange
     */
    BeginDate: string;
    /**
     * If the RVC is calculated over a period of time, it should be identified by the End date (yyyyMMdd) of that period. (Reference: Articles 402.1, 402.5).  Applies to NAFTA CO only. Format is yyyyMMdd.
     * @type {string}
     * @memberof ProductNetCostDateRange
     */
    EndDate: string;
}
/**
 * The total number of packages, cartons, or containers for the commodity.  Applicable for CO and is required. Should be numeric. Valid characters are 0 -9.
 * @export
 */
export type ProductNumberOfPackagesPerCommodity = string;
/**
 * The country or territory in which the good was manufactured, produced or grown. For detailed information on country or territory of origin, certificate of origin, rules of origin, and any related matters, please refer to the U.S. Customs and Border Protection Web site at www.customs.gov or contact your country or territory's Customs authority.
 * @export
 */
export type ProductOriginCountryCode = string;
/**
 * Data Container holding package related information.  Required for packaging list and Air Freight Packing list.
 * @export
 * @interface ProductPackingListInfo
 */
export interface ProductPackingListInfo {
    /**
     *
     * @type {PackingListInfoPackageAssociated}
     * @memberof ProductPackingListInfo
     */
    PackageAssociated: PackingListInfoPackageAssociated;
}
/**
 * The part number or reference number for the product contained in the invoice line, as indicated on the customs invoice.  Applies to Invoice and Partial Invoice. Required for Invoice forms and optional for Partial Invoice.
 * @export
 */
export type ProductPartNumber = string;
/**
 * Indicates the criterion (A through F) for each good described in the Description of Goods field if applicable.   The rules of origin are contained in Chapter Four and Annex 401.   Additional rules are described in Annex 703.2 (certain agricultural goods), Annex 300-B, Appendix 6 (certain textile goods) and Annex 308.1 (certain automatic data processing goods and their parts).  Applies to NAFTA CO only.
 * @export
 */
export type ProductPreferenceCriteria = string;
/**
 * Indicate the following:  Yes - If shipper is the producer of the good. If not, state 02, 03, and 04 depending on whether this certificate was based upon:   No [1] - Knowledge of whether the good qualifies as an originating good.  No [2] - Reliance on the producers written representation (other than a Certificate of Origin) that the good qualifies as an originating good.  No [3] - A completed and signed Certificate for the good voluntarily provided to the exporter by the producer.  Applicable for NAFTA CO and is required. Valid values: Yes, No [1], No [2], and No [3].
 * @export
 */
export type ProductProducerInfo = string;
/**
 * The shipping weight, including containers, for each commodity with a separate Harmonized Tariff Code / Schedule B Number. This weight does not include carrier equipment.  Applies to CO and EEI forms only. Required for CO and EEI forms.
 * @export
 * @interface ProductProductWeight
 */
export interface ProductProductWeight {
    /**
     *
     * @type {ProductWeightUnitOfMeasurement}
     * @memberof ProductProductWeight
     */
    UnitOfMeasurement: ProductWeightUnitOfMeasurement;
    /**
     * Weight of Product.  Applies to CO and EEI forms only. Valid characters are 0-9 and �.�  (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including �.� and can hold up to 1 decimal place.
     * @type {string}
     * @memberof ProductProductWeight
     */
    Weight: string;
}
/**
 * This amount will always be USD.  Applies to EEI forms only. Required for EEI form. Valid characters are 0-9 and �.� (Decimal point). Limit to 2 digit after the decimal. The maximum length of the field is 15 including �.� and can hold up to 2 decimal places.  Note: This value is calculated based on the Product/Unit/Value and /Product/Unit/Number (Number of Units * Price per Unit). If the total value is incorrect it will be replaced by the actual calculated total value.
 * @export
 */
export type ProductSEDTotalValue = string;
/**
 * Container tag for the schedule B information of a commodity.  Applies to EEI forms only. Required for EEI form
 * @export
 * @interface ProductScheduleB
 */
export interface ProductScheduleB {
    /**
     * A unique 10-digit commodity classification code for the item being exported. (To classify a commodity access the following Web page: http://www.census.gov/foreign-trade/schedules/b/#search).  Applies to EEI forms only. Has to be 10 characters.
     * @type {string}
     * @memberof ProductScheduleB
     */
    Number: string;
    /**
     * The count of how many Schedule B units of the current good are in the shipment (EEI only). For example, if the Schedule B unit of measure is dozens and eight dozen, is being shipped, indicate 8 in this field.  Applies to EEI forms only. Conditionally required for EEI forms if ScheduleB UnitOfMeasurement is not X. Should be Numeric. Valid characters are 0 -9.
     * @type {string}
     * @memberof ProductScheduleB
     */
    Quantity?: string;
    /**
     *
     * @type {ScheduleBUnitOfMeasurement}
     * @memberof ProductScheduleB
     */
    UnitOfMeasurement: ScheduleBUnitOfMeasurement;
}
/**
 * Container tag for the Unit information of each product. (also called as commodity)  Required for Invoice forms and optional for Partial Invoice.
 * @export
 * @interface ProductUnit
 */
export interface ProductUnit {
    /**
     * Total quantity of each commodity to be shipped, measured in the units specified in the Unit of Measure field.  Required for Invoice forms and optional for Partial Invoice. Must be numeric. Valid characters are 0-9.
     * @type {string}
     * @memberof ProductUnit
     */
    Number: string;
    /**
     *
     * @type {UnitUnitOfMeasurement}
     * @memberof ProductUnit
     */
    UnitOfMeasurement: UnitUnitOfMeasurement;
    /**
     * Monetary amount used to specify the worth or price of the commodity. Amount should be greater than zero.  Applies to Invoice and Partial Invoice form. Required for Invoice forms and optional for Partial Invoice. Amount should be greater than zero.  Valid characters are 0-9 and. (Decimal point). Limit to 6 digits after the decimal. The maximum length of the field is 19 including '.' and can hold up to 6 decimal places.(#####.######, ######.#####, #######.####, ########.###, #########.##,##########.#,############). The value of this product  and the other products should be such that the invoice line total which is the sum of ( number*values) of all products should not exceed 9999999999999999.99
     * @type {string}
     * @memberof ProductUnit
     */
    Value: string;
}
/**
 * Includes the following information for used self-propelled vehicles as defined in Customs regulations 19 CFR 192.1: The unique Vehicle Identification Number (VIN) in the proper format. Or The Product Identification Number (PIN) for those used self-propelled vehicles for which there are no VINs.  Or the Vehicle Title Number.  Applies to EEI forms only.
 * @export
 */
export type ProductVehicleID = string;
/**
 * Container tag for the Unit of Measurement of weight.  Applies to CO and EEI forms only.
 * @export
 * @interface ProductWeightUnitOfMeasurement
 */
export interface ProductWeightUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof ProductWeightUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof ProductWeightUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Weight of Product.  Applies to CO and EEI forms only. Valid characters are 0-9 and �.�  (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including �.� and can hold up to 1 decimal place.
 * @export
 */
export type ProductWeightWeight = string;
/**
 * Promotion Alias code  Required if PromotionalDiscountInformation container is present.
 * @export
 */
export type PromotionalDiscountInformationPromoAliasCode = string;
/**
 * Promotion Code. A discount that is applied to the user.  Required if PromotionalDiscountInformation container is present.
 * @export
 */
export type PromotionalDiscountInformationPromoCode = string;
/**
 * Base 64 encoded html browser image.
 * @export
 */
export type ReceiptHTMLImage = string;
/**
 * Container for the receipt in the format other than HTML.
 * @export
 * @interface ReceiptImage
 */
export interface ReceiptImage {
    /**
     *
     * @type {ImageImageFormat}
     * @memberof ReceiptImage
     */
    ImageFormat: ImageImageFormat;
    /**
     * Base 64 encoded High Value Report image.
     * @type {string}
     * @memberof ReceiptImage
     */
    GraphicImage: string;
}
/**
 * ImageFormat Container.
 * @export
 * @interface ReceiptSpecificationImageFormat
 */
export interface ReceiptSpecificationImageFormat {
    /**
     * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
     * @type {string}
     * @memberof ReceiptSpecificationImageFormat
     */
    Code: string;
    /**
     * Description of the image format.
     * @type {string}
     * @memberof ReceiptSpecificationImageFormat
     */
    Description?: string;
}
/**
 * Receipt's url  Applicable for following types of shipments: Print/Electronic Return Label Print/Electronic Import Control Label
 * @export
 */
export type ReceiptURL = string;
/**
 * If the indicator is present then the reference numbers value will be bar coded on the label.  This is an empty tag, any value inside is ignored.   Only one shipment-level or package-level reference number can be bar coded per shipment.   In order to barcode a reference number, its value must be no longer than 14 alphanumeric characters or 24 numeric characters and cannot contain spaces.
 * @export
 */
export type ReferenceNumberBarCodeIndicator = string;
/**
 * Reference number type code, for the entire shipment. The code specifies the Reference name.   Refer to the Reference Number Code table.  Valid if the origin/destination pair is US/US or PR/PR and character should be alpha-numeric.
 * @export
 */
export type ReferenceNumberCode = string;
/**
 * Customer supplied reference number.  Valid if the origin/destination pair is US/US or PR/PR.
 * @export
 */
export type ReferenceNumberValue = string;
/**
 * Container for reference number
 * @export
 * @interface ReferenceValuesReferenceNumber
 */
export interface ReferenceValuesReferenceNumber {
    /**
     * Required if TrackingNumber or Mail Innovations Tracking Number is not populated. Customer supplied reference number. Supports up to 2 customer supplied combinations of Reference code- value combinations.
     * @type {string}
     * @memberof ReferenceValuesReferenceNumber
     */
    Value: string;
}
/**
 * Required if ReferenceNumber/Value is populated. Shippers six digit account number. Must be six alphanumeric characters. Must be associated with the Internet account used to login.
 * @export
 */
export type ReferenceValuesShipperNumber = string;
/**
 * Optional Processing.    Note: Full address validation is not performed.� Therefore, it is the responsibility of the Shipping Tool User to ensure the address entered is correct to avoid an address correction fee.  Valid values: nonvalidate = No street level address validation would be performed, but Postal Code/State combination validation would still be performed.��  validate = No street level address validation would be performed, but City/State/Postal Code/ combination validation would still be performed.
 * @export
 */
export type RequestRequestOption = string;
/**
 * When UPS introduces new elements in the response that are not associated with new request elements, Subversion is used. This ensures backward compatibility.  To get such elements you need to have the right Subversion. The value of the subversion is explained in the Response element Description.  Example: Itemized Charges are returned only when the Subversion element is present and greater than or equal to 1601.   Format: YYMM = Year and month of the release.  Example: 1607 = 2016 July  Supported values: 1601, 1607, 1701, 1707, 1801, 1807
 * @export
 */
export type RequestSubVersion = string;
/**
 * TransactionReference identifies transactions between client and server.
 * @export
 * @interface RequestTransactionReference
 */
export interface RequestTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof RequestTransactionReference
     */
    CustomerContext?: string;
}
/**
 * Alert Container. There can be zero to many alert containers with code and description.
 * @export
 * @interface ResponseAlert
 */
export interface ResponseAlert {
    /**
     * Warning code returned by the system.
     * @type {string}
     * @memberof ResponseAlert
     */
    Code: string;
    /**
     * Warning messages returned by the system.
     * @type {string}
     * @memberof ResponseAlert
     */
    Description: string;
}
/**
 * Response status container.
 * @export
 * @interface ResponseResponseStatus
 */
export interface ResponseResponseStatus {
    /**
     * Identifies the success or failure of the transaction. 1 = Successful
     * @type {string}
     * @memberof ResponseResponseStatus
     */
    Code: string;
    /**
     * Describes Response Status Code. Returns text of Success.
     * @type {string}
     * @memberof ResponseResponseStatus
     */
    Description: string;
}
/**
 * Identifies the success or failure of the transaction. 1 = Successful
 * @export
 */
export type ResponseStatusCode = string;
/**
 * Describes Response Status Code. Returns text of Success.
 * @export
 */
export type ResponseStatusDescription = string;
/**
 * Transaction Reference Container.
 * @export
 * @interface ResponseTransactionReference
 */
export interface ResponseTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof ResponseTransactionReference
     */
    CustomerContext?: string;
}
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Alcoholic Beverages  Shippers account needs to have a valid contract for Alcohol.
 * @export
 */
export type RestrictedArticlesAlcoholicBeveragesIndicator = string;
/**
 * This field is a flag to indicate if the package has Biological substances. True if present; false otherwise.  Shippers account needs to have a valid contract for Biological Substances. Lane check will happen based on postal code/ city.
 * @export
 */
export type RestrictedArticlesDiagnosticSpecimensIndicator = string;
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Perishable items.  Shippers account needs to have a valid contract for Perishables.
 * @export
 */
export type RestrictedArticlesPerishablesIndicator = string;
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Plants  Shippers account needs to have a valid contract for Plants.
 * @export
 */
export type RestrictedArticlesPlantsIndicator = string;
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Seeds.  Shippers account needs to have a valid contract for Seeds.
 * @export
 */
export type RestrictedArticlesSeedsIndicator = string;
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Special Exception items.  Shippers account needs to have a valid contract for Special Exceptions.
 * @export
 */
export type RestrictedArticlesSpecialExceptionsIndicator = string;
/**
 * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Tobacco  Shippers account needs to have a valid contract for Tobacco.
 * @export
 */
export type RestrictedArticlesTobaccoIndicator = string;
/**
 * Return Service types:   2 = UPS Print and Mail (PNM)  3 = UPS Return Service 1-Attempt (RS1)  5 = UPS Return Service 3-Attempt (RS3)  8 = UPS Electronic Return Label (ERL)  9 = UPS Print Return Label (PRL)  10 = UPS Exchange Print Return Label  11 = UPS Pack & Collect Service 1-Attempt Box 1  12 = UPS Pack & Collect Service 1-Attempt Box 2  13 = UPS Pack & Collect Service 1-Attempt Box 3  14 = UPS Pack & Collect Service 1-Attempt Box 4  15 = UPS Pack & Collect Service 1-Attempt Box 5  16 = UPS Pack & Collect Service 3-Attempt Box 1  17 = UPS Pack & Collect Service 3-Attempt Box 2  18 = UPS Pack & Collect Service 3-Attempt Box 3  19 = UPS Pack & Collect Service 3-Attempt Box 4  20 = UPS Pack & Collect Service 3-Attempt Box 5
 * @export
 */
export type ReturnServiceCode = string;
/**
 * Return Service description.
 * @export
 */
export type ReturnServiceDescription = string;
/**
 * N/A
 * @export
 * @interface SHIPRequestWrapper
 */
export interface SHIPRequestWrapper {
    /**
     *
     * @type {ShipmentRequest}
     * @memberof SHIPRequestWrapper
     */
    ShipmentRequest: ShipmentRequest;
}
/**
 * N/A
 * @export
 * @interface SHIPResponseWrapper
 */
export interface SHIPResponseWrapper {
    /**
     *
     * @type {ShipmentResponse}
     * @memberof SHIPResponseWrapper
     */
    ShipmentResponse: ShipmentResponse;
}
/**
 * A unique 10-digit commodity classification code for the item being exported. (To classify a commodity access the following Web page: http://www.census.gov/foreign-trade/schedules/b/#search).  Applies to EEI forms only. Has to be 10 characters.
 * @export
 */
export type ScheduleBNumber = string;
/**
 * The count of how many Schedule B units of the current good are in the shipment (EEI only). For example, if the Schedule B unit of measure is dozens and eight dozen, is being shipped, indicate 8 in this field.  Applies to EEI forms only. Conditionally required for EEI forms if ScheduleB UnitOfMeasurement is not X. Should be Numeric. Valid characters are 0 -9.
 * @export
 */
export type ScheduleBQuantity = string;
/**
 * The unit of measure indicated on the Export License.  Applies to EEI forms only.
 * @export
 * @interface ScheduleBUnitOfMeasurement
 */
export interface ScheduleBUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof ScheduleBUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof ScheduleBUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Valid values:  01 = Next Day Air 02 = 2nd Day Air 03 = Ground 07 = Express 08 = Expedited 11 = UPS Standard 12 = 3 Day Select 13 = Next Day Air Saver 14 = UPS Next Day Air� Early                           17 = UPS Worldwide Economy DDU 54 = Express Plus 59 = 2nd Day Air A.M.  65 = UPS Saver M2 = First Class Mail M3 = Priority Mail M4 = Expedited MaiI Innovations M5 = Priority Mail Innovations M6 = Economy Mail Innovations                                                                                                                                                                                                                                                                   M7 = MaiI Innovations (MI) Returns 70 = UPS Access Point� Economy 71 = UPS Worldwide Express Freight Midday            72 = UPS Worldwide Economy DDP 74 = UPS Express�12:00                                    75 = UPS Heavy Goods 82 = UPS Today Standard 83 = UPS Today Dedicated Courier 84 = UPS Today Intercity 85 = UPS Today Express 86 = UPS Today Express Saver 96 = UPS Worldwide Express Freight.�   Note: Only service code 03 is used for Ground Freight Pricing� shipments  The following Services are not available to return shipment: 13, 59, 82, 83, 84, 85, 86
 * @export
 */
export type ServiceCode = string;
/**
 * Description of the service code. Examples are Next Day Air, Worldwide Express, and Ground.
 * @export
 */
export type ServiceDescription = string;
/**
 * Package accessorial charges currency code type.� The currency code used in the Shipment request is returned.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ServiceOptionsChargesCurrencyCode = string;
/**
 * Package accessorial charges value amount.   Applicable only for ShipmentResponse and ShipAcceptResponse. Valid values are from 0 to 99999999999999.99
 * @export
 */
export type ServiceOptionsChargesMonetaryValue = string;
/**
 * Ship from Address Container.  The package will be originating from or being shipped from this address. The shipment will be rated from this origin address to the destination ship to address.
 * @export
 * @interface ShipFromAddress
 */
export interface ShipFromAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ShipFromAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof ShipFromAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof ShipFromAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof ShipFromAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof ShipFromAddress
     */
    CountryCode: string;
}
/**
 * The ship from Attention name.  35 characters are accepted, but for return Shipment only 30 characters will be printed on the label.  Required if ShipFrom tag is in the XML and Invoice or CO International forms is requested. If not present, will default to the Shipper Attention Name.
 * @export
 */
export type ShipFromAttentionName = string;
/**
 * Not applicable for ShipFrom.
 * @export
 */
export type ShipFromCompanyDisplayableName = string;
/**
 * The Ship from fax number.  If Ship from country or territory is US 10 digits allowed, otherwise 1-15 digits allowed.
 * @export
 */
export type ShipFromFaxNumber = string;
/**
 * The ship from location�s name or company name.  35 characters are accepted, but for return Shipment only 30 characters will be printed on the label.  Required if ShipFrom tag is in the XML.
 * @export
 */
export type ShipFromName = string;
/**
 * Container for Phone Number.  If ShipFrom country or territory is US, PR, CA, and VI, the layout is: area code, 7 digit phone number or  area code, 7 digit phone number, 4 digit extension number.  For other countries or territories, the layout is: country or territory code, area code, 7 digit number.    If ShipFrom tag is in the XML and International forms is requested.
 * @export
 * @interface ShipFromPhone
 */
export interface ShipFromPhone {
    /**
     * Sold To contacts phone number.
     * @type {string}
     * @memberof ShipFromPhone
     */
    Number: string;
    /**
     * Sold To contacts phone extension.
     * @type {string}
     * @memberof ShipFromPhone
     */
    Extension?: string;
}
/**
 * Tax Identification Container.  Applies to EEI form only.
 * @export
 * @interface ShipFromTaxIDType
 */
export interface ShipFromTaxIDType {
    /**
     * Company's tax Identification type.  Valid values: EIN, DNS, and FGN.  Applies to EEI form only.
     * @type {string}
     * @memberof ShipFromTaxIDType
     */
    Code: string;
    /**
     * Description of TaxID submitted.  Applies to EEI form only.
     * @type {string}
     * @memberof ShipFromTaxIDType
     */
    Description?: string;
}
/**
 * Company�s Tax Identification Number at the pick up location.  Conditionally required if EEI form (International forms) is requested.  Applies to EEI Form only.
 * @export
 */
export type ShipFromTaxIdentificationNumber = string;
/**
 * Vendor Information Container
 * @export
 * @interface ShipFromVendorInfo
 */
export interface ShipFromVendorInfo {
    /**
     * Code that identifies the type of Vendor Collect ID Number                                                                   Valid Values                                                                   0356 = IOSS                                                 0357 = VOEC                                                 0358 = HMRC                                                    Vendor Collect ID Number type code will be printed on commercial invoice if present.
     * @type {string}
     * @memberof ShipFromVendorInfo
     */
    VendorCollectIDTypeCode: string;
    /**
     * Shipper�s VAT Tax collection registration number to be entered by Shipper at time of shipment creation.   Presence of this number as part of the shipment information implies the shipper has collected/paid the required VAT tax (outside of UPS/UPS systems).  Vendor Colect ID Number will be printed on commercial invoice if present.                                   Sample Values:   �IMDEU1234567� (IOSS #),  �VOEC1234567� (VOEC #),  �GB1234567� (HMRC #)     Required if the shipment is subject to Vendor Collect ID collection
     * @type {string}
     * @memberof ShipFromVendorInfo
     */
    VendorCollectIDNumber: string;
    /**
     * Consignee Type.                                             01 = Business                                                 02 = Consumer                                                           NA = Not Applicable
     * @type {string}
     * @memberof ShipFromVendorInfo
     */
    ConsigneeType?: string;
}
/**
 * Address Container.
 * @export
 * @interface ShipToAddress
 */
export interface ShipToAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ShipToAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof ShipToAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof ShipToAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof ShipToAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof ShipToAddress
     */
    CountryCode: string;
    /**
     * This field is a flag to indicate if the receiver is a residential location.  True if ResidentialAddressIndicator tag exists.  This is an empty tag, any value inside is ignored.
     * @type {string}
     * @memberof ShipToAddress
     */
    ResidentialAddressIndicator?: string;
}
/**
 * Contact name at the consignee�s location.  Required for: UPS Next Day Air� Early service, and when ShipTo country or territory is different than ShipFrom country or territory.   Required if Invoice International form is requested.
 * @export
 */
export type ShipToAttentionName = string;
/**
 * Not applicable for ShipTo
 * @export
 */
export type ShipToCompanyDisplayableName = string;
/**
 * Consignee�s email address.
 * @export
 */
export type ShipToEMailAddress = string;
/**
 * Consignee�s fax number.  If ShipTo country or territory is US 10 digits allowed, otherwise 1-15 digits allowed.
 * @export
 */
export type ShipToFaxNumber = string;
/**
 * Location ID is a unique identifier referring to a specific shipping/receiving location.  Location ID must be alphanumeric characters. All letters must be capitalized.
 * @export
 */
export type ShipToLocationID = string;
/**
 * Consignee�s company name.  All other accounts must be either a daily pickup account or an occasional account.
 * @export
 */
export type ShipToName = string;
/**
 * Container for Phone Number
 * @export
 * @interface ShipToPhone
 */
export interface ShipToPhone {
    /**
     * Sold To contacts phone number.
     * @type {string}
     * @memberof ShipToPhone
     */
    Number: string;
    /**
     * Sold To contacts phone extension.
     * @type {string}
     * @memberof ShipToPhone
     */
    Extension?: string;
}
/**
 * Consignee�s tax identification number.
 * @export
 */
export type ShipToTaxIdentificationNumber = string;
/**
 * AlternateDeliveryAddress Container.  Alternate Delivery Address (UPS Access Point Address) required if ShipmentIndicationType is 01 or 02.
 * @export
 * @interface ShipmentAlternateDeliveryAddress
 */
export interface ShipmentAlternateDeliveryAddress {
    /**
     * Retail Location Name.
     * @type {string}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    Name: string;
    /**
     * Attention Name.
     * @type {string}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    AttentionName: string;
    /**
     * UPS Access Point ID.
     * @type {string}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    UPSAccessPointID?: string;
    /**
     *
     * @type {AlternateDeliveryAddressAddress}
     * @memberof ShipmentAlternateDeliveryAddress
     */
    Address: AlternateDeliveryAddressAddress;
}
/**
 * Container for the BillReceiver billing option.  This element or its sibling element, BillShipper, BillThirdParty or Consignee Billed, must be present but no more than one can be present. For a return shipment, Bill Receiver is invalid for Transportation charges.
 * @export
 * @interface ShipmentChargeBillReceiver
 */
export interface ShipmentChargeBillReceiver {
    /**
     * The UPS account number.  The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be a daily pickup account, an occasional account, a customer B.I.N account, or a dropper shipper account.   All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
     * @type {string}
     * @memberof ShipmentChargeBillReceiver
     */
    AccountNumber: string;
    /**
     *
     * @type {BillReceiverAddress}
     * @memberof ShipmentChargeBillReceiver
     */
    Address?: BillReceiverAddress;
}
/**
 * Container for the BillShipper billing option. The three payment methods that are available for the Bill Shipper billing option are alternate payment method, account number or credit card.  This element or its sibling element, BillReceiver, BillThirdParty or ConsigneeBilledIndicator, must be present but no more than one can be present.
 * @export
 * @interface ShipmentChargeBillShipper
 */
export interface ShipmentChargeBillShipper {
    /**
     * UPS account number.  Must be the same UPS account number as the one provided in Shipper/ShipperNumber.   Either this element or one of the sibling elements CreditCard or AlternatePaymentMethod must be provided, but all of them may not be provided.
     * @type {string}
     * @memberof ShipmentChargeBillShipper
     */
    AccountNumber?: string;
    /**
     *
     * @type {BillShipperCreditCard}
     * @memberof ShipmentChargeBillShipper
     */
    CreditCard?: BillShipperCreditCard;
    /**
     * Alternate Payment Method.  Valid value: 01= PayPal  Only valid for forward shipments. It is not valid for Return or Import Control shipments.   This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided.   PayPal 01: Is only valid for forward shipments. It is not valid for Return or Import Control shipments.   This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided.
     * @type {string}
     * @memberof ShipmentChargeBillShipper
     */
    AlternatePaymentMethod?: string;
}
/**
 * Container for the third party billing option.  This element or its sibling element, BillShipper, BillReceiver or Consignee Billed, must be present but no more than one can be present.
 * @export
 * @interface ShipmentChargeBillThirdParty
 */
export interface ShipmentChargeBillThirdParty {
    /**
     * The UPS account number of the third party shipper.  The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account, or a drop shipper account.   All other accounts must be either a daily pickup account, an occasional account, a drop shipper account, or a non-shipping account.
     * @type {string}
     * @memberof ShipmentChargeBillThirdParty
     */
    AccountNumber?: string;
    /**
     * Posta Elettronica Certificata (PEC) which is the recipient code for the customers certified electronic mail value.
     * @type {string}
     * @memberof ShipmentChargeBillThirdParty
     */
    CertifiedElectronicMail?: string;
    /**
     * Sistema Di Interscambio(SDI) which is the recipient code for the customer's interchange value or Interchange System Code
     * @type {string}
     * @memberof ShipmentChargeBillThirdParty
     */
    InterchangeSystemCode?: string;
    /**
     *
     * @type {BillThirdPartyAddress}
     * @memberof ShipmentChargeBillThirdParty
     */
    Address: BillThirdPartyAddress;
}
/**
 * Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  This is an empty tag, any value inside is ignored. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.  This payment method allows you to bill the charges for a specified shipment to a consignee who has agreed to pay the charges. All shipping charges are billed to the consignees UPS account number including the following accessorials: Additional Handling, Delivery Area Surcharges, Delivery Change Requests, Early AM Premium, Early AM Out of Territory, Fuel Surcharge, Hazardous Material Surcharges, Large Package Surcharge, Over Max Limits, and Saturday Delivery.  Declared Value, Delivery Confirmation, On Call Pickup, Remote Area Surcharge, Saturday Pickup of Delivery fees are not passed to the consignee. These charges are billed to the shippers UPS account number.
 * @export
 */
export type ShipmentChargeConsigneeBilledIndicator = string;
/**
 * Valid values:  01 = Transportation 02 = Duties and Taxes                                                                03 = Broker of Choice  A shipment charge type of 01 = Transportation is required.   A shipment charge type of 02 = Duties and Taxes is not required; however, this charge type is invalid for Qualified Domestic Shipments.   A Qualified Domestic Shipment is any shipment in which one of the following applies:   1) The origin and destination country or territory is the same.  2) US to PR shipment.  3) PR to US shipment.  4) The origin and destination country or territory are both European Union countries or territories and the GoodsNotInFreeCirculation indicator is not present.  5) The origin and destination IATA code is the same.                                                                                                                                                                                                                                                                                                                                                                                                                                                      03 = Broker of Choice
 * @export
 */
export type ShipmentChargeType = string;
/**
 * Base Service Charge container. Transportation charge = BaseServiceCharge + Fuel charge  Returned only if Subversion >=1701.
 * @export
 * @interface ShipmentChargesBaseServiceCharge
 */
export interface ShipmentChargesBaseServiceCharge {
    /**
     * BaseServiceCharge currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof ShipmentChargesBaseServiceCharge
     */
    CurrencyCode: string;
    /**
     * Base Service Charge value amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof ShipmentChargesBaseServiceCharge
     */
    MonetaryValue: string;
}
/**
 * Itemized Charges are returned only when the Subversion element is present and greater than or equal to 1601.
 * @export
 * @interface ShipmentChargesItemizedCharges
 */
export interface ShipmentChargesItemizedCharges {
    /**
     * Identification code for itemized charge.
     * @type {string}
     * @memberof ShipmentChargesItemizedCharges
     */
    Code: string;
    /**
     * Description of Itemized Charge that had been charged.
     * @type {string}
     * @memberof ShipmentChargesItemizedCharges
     */
    Description?: string;
    /**
     * The IATA currency code associated with the Itemized Charge costs for the shipment.
     * @type {string}
     * @memberof ShipmentChargesItemizedCharges
     */
    CurrencyCode: string;
    /**
     * Itemized Charges value amount.
     * @type {string}
     * @memberof ShipmentChargesItemizedCharges
     */
    MonetaryValue: string;
    /**
     * The sub-type of ItemizedCharges type.
     * @type {string}
     * @memberof ShipmentChargesItemizedCharges
     */
    SubType?: string;
}
/**
 * Rate Type with which Shipment is rated. Possible RateChart values for different regions will be:  US 48 origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.  Alaska/Hawaii origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.   All Other origins:  1 � Rates  5 - Regional Rates  6 - General List Rates.  3 and 4 do not apply.
 * @export
 */
export type ShipmentChargesRateChart = string;
/**
 * Service Option Charges container.
 * @export
 * @interface ShipmentChargesServiceOptionsCharges
 */
export interface ShipmentChargesServiceOptionsCharges {
    /**
     * Package accessorial charges currency code type.� The currency code used in the Shipment request is returned.   Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentChargesServiceOptionsCharges
     */
    CurrencyCode: string;
    /**
     * Package accessorial charges value amount.   Applicable only for ShipmentResponse and ShipAcceptResponse. Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof ShipmentChargesServiceOptionsCharges
     */
    MonetaryValue: string;
}
/**
 * TaxCharges container are returned only when TaxInformationIndicator is present in request and when Negotiated Rates are not applicable. TaxCharges container contains Tax information for a given shipment.
 * @export
 * @interface ShipmentChargesTaxCharges
 */
export interface ShipmentChargesTaxCharges {
    /**
     * Tax Type code. The code represents the type of Tax applied to a shipment.   Refer to Tax Type Values/Abbreviations in the Appendix for valid values.
     * @type {string}
     * @memberof ShipmentChargesTaxCharges
     */
    Type: string;
    /**
     * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof ShipmentChargesTaxCharges
     */
    MonetaryValue: string;
}
/**
 * Total charges container.
 * @export
 * @interface ShipmentChargesTotalCharges
 */
export interface ShipmentChargesTotalCharges {
    /**
     * Total charges currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof ShipmentChargesTotalCharges
     */
    CurrencyCode: string;
    /**
     * Total charges value amount.  Valid values are from 0 to 99999999999999.99.
     * @type {string}
     * @memberof ShipmentChargesTotalCharges
     */
    MonetaryValue: string;
}
/**
 * TotalChargesWithTaxes container would be returned only if TaxInformationIndicator is present in request and when Negotiated Rates are not applicable. TotalChargesWithTaxes contains total charges including total taxes applied to a shipment.
 * @export
 * @interface ShipmentChargesTotalChargesWithTaxes
 */
export interface ShipmentChargesTotalChargesWithTaxes {
    /**
     * TotalChargesWithTaxes currency code type.� The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof ShipmentChargesTotalChargesWithTaxes
     */
    CurrencyCode: string;
    /**
     * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof ShipmentChargesTotalChargesWithTaxes
     */
    MonetaryValue: string;
}
/**
 * Transportation Charges container.
 * @export
 * @interface ShipmentChargesTransportationCharges
 */
export interface ShipmentChargesTransportationCharges {
    /**
     * Transportation charges currency code type. The currency code used in the Shipment request is returned.
     * @type {string}
     * @memberof ShipmentChargesTransportationCharges
     */
    CurrencyCode: string;
    /**
     * Transportation and surcharges value amount.  Valid values are from 0 to 99999999999999.99
     * @type {string}
     * @memberof ShipmentChargesTransportationCharges
     */
    MonetaryValue: string;
}
/**
 * Customer assigned identifier for report and billing summarization displays to the right of the Cost Center title.  Required for Mail Innovations Return shipments. It is shown on the bottom of the shipping label as reference 2.  Cost Center length is alphanumeric with a max length of 30 for Mail Innovations forward shipments.  Cost Center length is numeric with a max length of 4 for Mail Innovations Return shipments.
 * @export
 */
export type ShipmentCostCenter = string;
/**
 * Presence/Absence indicator. Presence of this indicator means that the customer is requesting for the CostCenter field to be barcoded at the bottom of the label.
 * @export
 */
export type ShipmentCostCenterBarcodeIndicator = string;
/**
 * DGSignatoryInfo Container  DGPaperImage will be returned if DGSignatoryInfo container present
 * @export
 * @interface ShipmentDGSignatoryInfo
 */
export interface ShipmentDGSignatoryInfo {
    /**
     * Name of the person signing the declaration.   Note: The name of person or department he/she is employed with, are both acceptable.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    Name?: string;
    /**
     * Title of the person signing the declaration. Note: The title of the person or department he/she is employed with, are both acceptable.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    Title?: string;
    /**
     * The city of the Signatory.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    Place?: string;
    /**
     * Date of signing the declaration form.  Valid format is YYYYMMDD.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    Date?: string;
    /**
     * Valid values: 01 = Shipment level 02 = Package level                                              Valid only for the Shipper Declaration paper. If missing or invalid DGPaperImage will be returned at package level.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    ShipperDeclaration?: string;
    /**
     * Dangerous Goods Paper Upload Only Indicator. DG Paper will not be returned in response if UploadOnlyIndicator present.
     * @type {string}
     * @memberof ShipmentDGSignatoryInfo
     */
    UploadOnlyIndicator?: string;
}
/**
 * The Description of Goods for the shipment. Applies to international and domestic shipments.   Provide a detailed description of items being shipped for documents and non-documents.   Examples: \"annual reports\" and \"9 mm steel screws\".  Required if all of the listed conditions are true:  ShipFrom and ShipTo countries or territories are not the same; The packaging type is not UPS Letter; The ShipFrom and or ShipTo countries or territories are not in the European Union or the ShipFrom and ShipTo countries or territories are both in the European Union and the shipments service type is not UPS Standard.
 * @export
 */
export type ShipmentDescription = string;
/**
 * Indicates a shipment contains written, typed, or printed communication of no commercial value.   If DocumentsOnly is not specified then it implies that the shipment contains non documents or documents of commercial value.   Default is a shipment contains non- documents or documents of commercial value.  This is an empty tag, any value inside is ignored.   Valid only for shipments with different origin and destination countries or territories. The origin country or territory is not US, and the destination country or territory is not CA, PR or MX.
 * @export
 */
export type ShipmentDocumentsOnlyIndicator = string;
/**
 * Container to hold the Payment information for the Ground Freight Pricing Shipments.  Required for Ground Freight Pricing Shipments only.
 * @export
 * @interface ShipmentFRSPaymentInformation
 */
export interface ShipmentFRSPaymentInformation {
    /**
     * Container to hold the Ground Freight Pricing payment type information.  It is required if the request has Ground Freight Pricing shipment indicator.
     * @type {string}
     * @memberof ShipmentFRSPaymentInformation
     */
    Type: string;
    /**
     * The UPS account number.  If the Ground Freight Pricing indicator and FreightShipmentInformation/DensityEligibleIndicator is present in the request, this account number must be validated to check if it is Ground Freight Pricing Density Based Rating enabled.
     * @type {string}
     * @memberof ShipmentFRSPaymentInformation
     */
    AccountNumber: string;
    /**
     *
     * @type {FRSPaymentInformationAddress}
     * @memberof ShipmentFRSPaymentInformation
     */
    Address?: FRSPaymentInformationAddress;
}
/**
 * Container to hold Freight Shipment information.
 * @export
 * @interface ShipmentFreightShipmentInformation
 */
export interface ShipmentFreightShipmentInformation {
    /**
     *
     * @type {FreightShipmentInformationFreightDensityInfo}
     * @memberof ShipmentFreightShipmentInformation
     */
    FreightDensityInfo?: FreightShipmentInformationFreightDensityInfo;
    /**
     * The presence of the tag indicates that the rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.
     * @type {string}
     * @memberof ShipmentFreightShipmentInformation
     */
    DensityEligibleIndicator?: string;
}
/**
 * Goods Not In Free Circulation indicator.  This is an empty tag, any value inside is ignored. This indicator is invalid for a package type of UPS Letter and DocumentsOnly.
 * @export
 */
export type ShipmentGoodsNotInFreeCirculationIndicator = string;
/**
 * Valid values:  '01' - Hold for Pickup at UPS Access Point aka Direct to Retail (D2R) '02' - UPS Access Point� Delivery aka Retail to Retail (R2R)  If '01' code is present indicates shipment will be send to Retail location where it is held to consignee to claim.
 * @export
 */
export type ShipmentIndicationTypeCode = string;
/**
 * Description for the code.
 * @export
 */
export type ShipmentIndicationTypeDescription = string;
/**
 * Container to hold InvoiceLineTotal Information.  Required for forward shipments whose origin is the US and destination is Puerto Rico or Canada. Not available for any other shipments. FOR OTHER DESTINATIONS the InvoiceLineTotal in the International Forms Container must be used.
 * @export
 * @interface ShipmentInvoiceLineTotal
 */
export interface ShipmentInvoiceLineTotal {
    /**
     * Invoice Line Total currency type.
     * @type {string}
     * @memberof ShipmentInvoiceLineTotal
     */
    CurrencyCode: string;
    /**
     * Invoice Line Total amount for the entire shipment.  Valid values are from 1 to 99999999
     * @type {string}
     * @memberof ShipmentInvoiceLineTotal
     */
    MonetaryValue: string;
}
/**
 * Mail classification defined by the USPS.   Valid values:  1 = Balloon 2 = Oversize 3 = Not Applicable
 * @export
 */
export type ShipmentIrregularIndicator = string;
/**
 * Represents 5 character ISO Locale that allows the user to request Reference Number Code on Label, Label instructions and Receipt instructions (if applicable) in desired language.  Locale is specified by the combination of language code and country or territory code - 2 character language code and 2 character country or territory code seperated by an underscore ('_') character.  If Locale element is requested along with LabelLinksIndicator, the URL to retrieve Label and Receipts (if applicable) will be returned in the requested Locale. Please note only LabelURL and ReceiptURL (if applicable) will be returned. LocalLanguageLabelURL and LocalLanguageReceiptURL will not be returned if Locale element is present in request. Queen�s English (en_GB) is the default
 * @export
 */
export type ShipmentLocale = string;
/**
 * MIDualReturnShipmentIndicator is an indicator to identify a Package Shipment is part of UPS Mail Innovations Dual Label Shipment.   Its presence means Package Shipment is part of UPS Mail Innovations Dual Label shipment.  If the indicator is present in Package Shipment request, shipment would be considered as part of a Dual Mail Innovations Returns.   This indicator is not valid with UPS Mail Innovations Returns Service code.
 * @export
 */
export type ShipmentMIDualReturnShipmentIndicator = string;
/**
 * MIDualReturnShipmentKey is unique key required to process Mail Innovations Dual Return Shipment.   The unique identifier (key) would be returned in response of first phase of Mail Innovations Dual Return Shipments.   This unique identifier (key) would be part of request for second phase of Mail Innovations Dual Return Shipments.  Format:  For Package return shipments, the package tracking number is concatenated with the system time (YYYY-MM-DDHH.MM.SS.NNN), followed by service code.   For MI Return shipments, the Mail Manifest ID (MMI) is concatenated with the system time.  The unique identifier (key) is required to link the package and the Mail Innovations portion of Dual Return shipment.   If unique identifier (key) is empty in the request for UPS Mail Innovations Return Service, the request will be treated as the first phase of the Mail Innovations Dual Returns Request.   If the MIDualReturnShipmentIndicator is present with empty or null MIDualReturnShipmentKey in UPS Package Return Shipment, the request will be treated as the first phase of Dual MI Return Label Shipment.   This field would be ignored if MIDualReturnShipmentIndicator is not present in UPS Package Return Shipment request.
 * @export
 */
export type ShipmentMIDualReturnShipmentKey = string;
/**
 * Indicates single label with both MI label and CN22 form.  International CN22 form is required.
 * @export
 */
export type ShipmentMILabelCN22Indicator = string;
/**
 * Master Carton ID.                                              If Economy Service (17 or 72) : Economy Shipment will be associated with given Master Carton ID.                                                                          If Non-Economy Service: Master Carton Shipment will be created for given Master Carton ID.
 * @export
 */
export type ShipmentMasterCartonID = string;
/**
 * Master Carton Indicator. Presence of the indicator means Master Carton ID will be created and returned to client.  This is an empty tag, any value inside is ignored.                                                                  MasterCartonIndicator is only valid with Econmoy Shipment (Service Code 17 or 72). Will be ignored if master carton id present.
 * @export
 */
export type ShipmentMasterCartonIndicator = string;
/**
 * Movement Reference Number (MRN) information.  Must contain alphanumeric characters only. Must be a length of 18 characters. The 3rd and 4th Characters must be the Shipper country or territory ISO Code.
 * @export
 */
export type ShipmentMovementReferenceNumber = string;
/**
 * Total number of pieces in all pallets in a UPS Worldwide Express Freight Shipment.  It is required for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment. Valid values are 1 to 99999.
 * @export
 */
export type ShipmentNumOfPiecesInShipment = string;
/**
 * Package Information container.  For Return Shipments up to and including 20 packages are allowed.� US/PR origin return movements are limited to only one package. For Mail Innovations and Simple Rate shipments only one package is allowed.
 * @export
 * @interface ShipmentPackage
 */
export interface ShipmentPackage {
    /**
     * Merchandise description of package.  Required for shipment with return service.
     * @type {string}
     * @memberof ShipmentPackage
     */
    Description?: string;
    /**
     * Description of articles & special marks. Applicable for Air Freight only
     * @type {string}
     * @memberof ShipmentPackage
     */
    PalletDescription?: string;
    /**
     * Number of Pieces. Applicable for Air Freight only
     * @type {string}
     * @memberof ShipmentPackage
     */
    NumOfPieces?: string;
    /**
     * Unit price of the commodity. Applicable for Air Freight only  Limit to 2 digit after the decimal. The maximum length of the field is 12 including �.� and can hold up to 2 decimal place. (e.g. 999999999.99)
     * @type {string}
     * @memberof ShipmentPackage
     */
    UnitPrice?: string;
    /**
     *
     * @type {PackagePackaging}
     * @memberof ShipmentPackage
     */
    Packaging: PackagePackaging;
    /**
     *
     * @type {PackageDimensions}
     * @memberof ShipmentPackage
     */
    Dimensions?: PackageDimensions;
    /**
     *
     * @type {PackageDimWeight}
     * @memberof ShipmentPackage
     */
    DimWeight?: PackageDimWeight;
    /**
     *
     * @type {PackagePackageWeight}
     * @memberof ShipmentPackage
     */
    PackageWeight?: PackagePackageWeight;
    /**
     * Presence of the indicator mentions that the package is Large Package.  This is an empty tag, any value inside is ignored.
     * @type {string}
     * @memberof ShipmentPackage
     */
    LargePackageIndicator?: string;
    /**
     *
     * @type {PackageReferenceNumber}
     * @memberof ShipmentPackage
     */
    ReferenceNumber?: PackageReferenceNumber;
    /**
     * Additional Handling Required. The presence indicates additional handling is required, the absence indicates no additional handling is required. Additional Handling indicator indicates it�s a non-corrugated package.
     * @type {string}
     * @memberof ShipmentPackage
     */
    AdditionalHandlingIndicator?: string;
    /**
     *
     * @type {PackageUPSPremier}
     * @memberof ShipmentPackage
     */
    UPSPremier?: PackageUPSPremier;
    /**
     *
     * @type {PackagePackageServiceOptions}
     * @memberof ShipmentPackage
     */
    PackageServiceOptions?: PackagePackageServiceOptions;
    /**
     *
     * @type {PackageCommodity}
     * @memberof ShipmentPackage
     */
    Commodity?: PackageCommodity;
    /**
     *
     * @type {PackageHazMatPackageInformation}
     * @memberof ShipmentPackage
     */
    HazMatPackageInformation?: PackageHazMatPackageInformation;
}
/**
 * Customer-assigned unique piece identifier that returns visibility events.  Required only for Mail Innovations forward shipments. Alpha numeric values only. It is shown on the bottom of the shipping label as reference 1.
 * @export
 */
export type ShipmentPackageID = string;
/**
 * Presence/Absence indicator. Presence of this indicator means that the customer is requesting for the PackageID field to be barcoded at the bottom of the label.
 * @export
 */
export type ShipmentPackageIDBarcodeIndicator = string;
/**
 * Payment information container for detailed shipment charges. The two shipment charges that are available for specification are Transportation charges and Duties and Taxes.  It is required for non-Ground Freight Pricing shipments only.
 * @export
 * @interface ShipmentPaymentInformation
 */
export interface ShipmentPaymentInformation {
    /**
     *
     * @type {PaymentInformationShipmentCharge}
     * @memberof ShipmentPaymentInformation
     */
    ShipmentCharge: PaymentInformationShipmentCharge;
    /**
     * Split Duty VAT Indicator. The presence indicates the payer specified for Transportation Charges will pay transportation charges and any duties that apply to the shipment. The payer specified for Duties and Taxes will pay the VAT (Value-Added Tax) only.  This is an empty tag, any value inside is ignored. The payment method for Transportation charges must be UPS account. The UPS account must be a daily pickup account or an occasional account.
     * @type {string}
     * @memberof ShipmentPaymentInformation
     */
    SplitDutyVATIndicator?: string;
}
/**
 * PromotionalDiscountInformation container. This container contains discount information that the customer wants to request each time while placing a shipment.
 * @export
 * @interface ShipmentPromotionalDiscountInformation
 */
export interface ShipmentPromotionalDiscountInformation {
    /**
     * Promotion Code. A discount that is applied to the user.  Required if PromotionalDiscountInformation container is present.
     * @type {string}
     * @memberof ShipmentPromotionalDiscountInformation
     */
    PromoCode: string;
    /**
     * Promotion Alias code  Required if PromotionalDiscountInformation container is present.
     * @type {string}
     * @memberof ShipmentPromotionalDiscountInformation
     */
    PromoAliasCode: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. RatingMethodRequestedIndicator is an indicator. If present, Billable Weight Calculation method information and Rating Method information would be returned in response.
 * @export
 */
export type ShipmentRatingMethodRequestedIndicator = string;
/**
 * Ground Freight Pricing Rates option indicator. If the Ground Freight Pricing Shipment indicator is enabled and Shipper number is authorized then Ground Freight Pricing�rates should be returned in the response.  The Shipper account number must be qualified to receive Ground Freight Pricing Density Based Shipment rates. Only the Shipper account number taken from /ShipmentRequest/Shipment/FRSPaymentInformation/AccountNumber is used when checking qualification for Ground Freight Pricing Density Based rates.
 * @export
 */
export type ShipmentRatingOptionsFRSShipmentIndicator = string;
/**
 * Negotiated Rates option indicator. If the indicator is present and the Shipper is authorized then Negotiated Rates should be returned in the response.  Negotiated Rates are of two types Account Based Rates (ABR) and Web Discount Rates. Negotiated Rates are only returned for qualified Shipper Account Numbers.   Eligibility is determined using the combination of UserId and the Shipper�s Shipper Account Number. If the user is qualified, both Published rates and Negotiated rates are returned to the user. If the UserId and Shipper Account   Number are not qualified for Negotiated rates, a warning message is returned that indicates ineligibility and only the Published rates are returned in the response. As per discount eligibility of user, negotiated rates in the response may contain ABR or Web discount rates.
 * @export
 */
export type ShipmentRatingOptionsNegotiatedRatesIndicator = string;
/**
 * RateChartIndicator, if present in request, response will contain RateChart element.
 * @export
 */
export type ShipmentRatingOptionsRateChartIndicator = string;
/**
 * This indicator applies for a third party (3P) / Freight collect (FC) shipment only.   For 3P/FC shipment if the shipper wishes to request for the negotiated rates of the third party then this indicator should be included in the request.   If authorized the 3P/FC negotiated rates will be applied to the shipment and rates will be returned in response.
 * @export
 */
export type ShipmentRatingOptionsTPFCNegotiatedRatesIndicator = string;
/**
 * If this indicator is present user level discount will be applied to rates if applicable  Conditions checked: This indicator should be present Shipper number should not be present User should be eligible for user level discount
 * @export
 */
export type ShipmentRatingOptionsUserLevelDiscountIndicator = string;
/**
 * Reference Number information container.
 * @export
 * @interface ShipmentReferenceNumber
 */
export interface ShipmentReferenceNumber {
    /**
     * If the indicator is present then the reference numbers value will be bar coded on the label.  This is an empty tag, any value inside is ignored.   Only one shipment-level or package-level reference number can be bar coded per shipment.   In order to barcode a reference number, its value must be no longer than 14 alphanumeric characters or 24 numeric characters and cannot contain spaces.
     * @type {string}
     * @memberof ShipmentReferenceNumber
     */
    BarCodeIndicator?: string;
    /**
     * Reference number type code, for the entire shipment. The code specifies the Reference name.   Refer to the Reference Number Code table.  Valid if the origin/destination pair is US/US or PR/PR and character should be alpha-numeric.
     * @type {string}
     * @memberof ShipmentReferenceNumber
     */
    Code?: string;
    /**
     * Customer supplied reference number.  Valid if the origin/destination pair is US/US or PR/PR.
     * @type {string}
     * @memberof ShipmentReferenceNumber
     */
    Value: string;
}
/**
 * Shipment Request.
 * @export
 * @interface ShipmentRequest
 */
export interface ShipmentRequest {
    /**
     *
     * @type {ShipmentRequestRequest}
     * @memberof ShipmentRequest
     */
    Request: ShipmentRequestRequest;
    /**
     *
     * @type {ShipmentRequestShipment}
     * @memberof ShipmentRequest
     */
    Shipment: ShipmentRequestShipment;
    /**
     *
     * @type {ShipmentRequestLabelSpecification}
     * @memberof ShipmentRequest
     */
    LabelSpecification?: ShipmentRequestLabelSpecification;
    /**
     *
     * @type {ShipmentRequestReceiptSpecification}
     * @memberof ShipmentRequest
     */
    ReceiptSpecification?: ShipmentRequestReceiptSpecification;
}
/**
 * Container used to define the properties required by the user to print and/or display the UPS shipping label.  Required for shipment without return service or shipments with PRL return service. Required for Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707.
 * @export
 * @interface ShipmentRequestLabelSpecification
 */
export interface ShipmentRequestLabelSpecification {
    /**
     *
     * @type {LabelSpecificationLabelImageFormat}
     * @memberof ShipmentRequestLabelSpecification
     */
    LabelImageFormat: LabelSpecificationLabelImageFormat;
    /**
     * Browser HTTPUserAgent String. This is the preferred way of identifying GIF image type to be generated.  Required if /ShipmentRequest/LabelSpecificationLabelSpecification/LabelImageFormat/Code = Gif. Default to Mozilla/4.5 if this field is missing or has invalid value.
     * @type {string}
     * @memberof ShipmentRequestLabelSpecification
     */
    HTTPUserAgent?: string;
    /**
     *
     * @type {LabelSpecificationLabelStockSize}
     * @memberof ShipmentRequestLabelSpecification
     */
    LabelStockSize: LabelSpecificationLabelStockSize;
    /**
     *
     * @type {Array<LabelSpecificationInstruction>}
     * @memberof ShipmentRequestLabelSpecification
     */
    Instruction?: Array<LabelSpecificationInstruction>;
    /**
     * Language character set expected on label. Valid values: dan = Danish (Latin-1) nld = Dutch (Latin-1) fin = Finnish (Latin-1) fra = French (Latin-1) deu = German (Latin-1) itl = Italian (Latin-1) nor = Norwegian (Latin-1) pol  = Polish (Latin-2) por = Poruguese (Latin-1) spa = Spanish (Latin-1)  swe = Swedish (Latin-1)  ces = Czech (Latin-2) hun = Hungarian (Latin-2) slk = Slovak (Latin-2) rus = Russian (Cyrillic) tur = Turkish (Latin-5) ron = Romanian (Latin-2) bul = Bulgarian (Latin-2) est = Estonian (Latin-2) ell = Greek (Latin-2) lav = Latvian (Latin-2) lit = Lithuanian (Latin-2) eng = English (Latin-1)  Default is English (Latin-1).
     * @type {string}
     * @memberof ShipmentRequestLabelSpecification
     */
    CharacterSet?: string;
}
/**
 * Container used to allow the user to choose to print a thermal receipt.
 * @export
 * @interface ShipmentRequestReceiptSpecification
 */
export interface ShipmentRequestReceiptSpecification {
    /**
     *
     * @type {ReceiptSpecificationImageFormat}
     * @memberof ShipmentRequestReceiptSpecification
     */
    ImageFormat: ReceiptSpecificationImageFormat;
}
/**
 * Request Container
 * @export
 * @interface ShipmentRequestRequest
 */
export interface ShipmentRequestRequest {
    /**
     * Optional Processing.    Note: Full address validation is not performed.� Therefore, it is the responsibility of the Shipping Tool User to ensure the address entered is correct to avoid an address correction fee.  Valid values: nonvalidate = No street level address validation would be performed, but Postal Code/State combination validation would still be performed.��  validate = No street level address validation would be performed, but City/State/Postal Code/ combination validation would still be performed.
     * @type {string}
     * @memberof ShipmentRequestRequest
     */
    RequestOption: string;
    /**
     * When UPS introduces new elements in the response that are not associated with new request elements, Subversion is used. This ensures backward compatibility.  To get such elements you need to have the right Subversion. The value of the subversion is explained in the Response element Description.  Example: Itemized Charges are returned only when the Subversion element is present and greater than or equal to 1601.   Format: YYMM = Year and month of the release.  Example: 1607 = 2016 July  Supported values: 1601, 1607, 1701, 1707, 1801, 1807, 2108, 2205
     * @type {string}
     * @memberof ShipmentRequestRequest
     */
    SubVersion?: string;
    /**
     *
     * @type {RequestTransactionReference}
     * @memberof ShipmentRequestRequest
     */
    TransactionReference?: RequestTransactionReference;
}
/**
 * Shipment Container
 * @export
 * @interface ShipmentRequestShipment
 */
export interface ShipmentRequestShipment {
    /**
     * The Description of Goods for the shipment. Applies to international and domestic shipments.   Provide a detailed description of items being shipped for documents and non-documents.   Examples: \"annual reports\" and \"9 mm steel screws\".  Required if all of the listed conditions are true:  ShipFrom and ShipTo countries or territories are not the same; The packaging type is not UPS Letter; The ShipFrom and or ShipTo countries or territories are not in the European Union or the ShipFrom and ShipTo countries or territories are both in the European Union and the shipments service type is not UPS Standard.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    Description?: string;
    /**
     *
     * @type {ShipmentReturnService}
     * @memberof ShipmentRequestShipment
     */
    ReturnService?: ShipmentReturnService;
    /**
     * Indicates a shipment contains written, typed, or printed communication of no commercial value.   If DocumentsOnly is not specified then it implies that the shipment contains non documents or documents of commercial value.   Default is a shipment contains non- documents or documents of commercial value.  This is an empty tag, any value inside is ignored.   Valid only for shipments with different origin and destination countries or territories. The origin country or territory is not US, and the destination country or territory is not CA, PR or MX.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    DocumentsOnlyIndicator?: string;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof ShipmentRequestShipment
     */
    Shipper: ShipmentShipper;
    /**
     *
     * @type {ShipmentShipTo}
     * @memberof ShipmentRequestShipment
     */
    ShipTo: ShipmentShipTo;
    /**
     *
     * @type {ShipmentAlternateDeliveryAddress}
     * @memberof ShipmentRequestShipment
     */
    AlternateDeliveryAddress?: ShipmentAlternateDeliveryAddress;
    /**
     *
     * @type {ShipmentShipFrom}
     * @memberof ShipmentRequestShipment
     */
    ShipFrom?: ShipmentShipFrom;
    /**
     *
     * @type {ShipmentPaymentInformation}
     * @memberof ShipmentRequestShipment
     */
    PaymentInformation?: ShipmentPaymentInformation;
    /**
     *
     * @type {ShipmentFRSPaymentInformation}
     * @memberof ShipmentRequestShipment
     */
    FRSPaymentInformation?: ShipmentFRSPaymentInformation;
    /**
     *
     * @type {ShipmentFreightShipmentInformation}
     * @memberof ShipmentRequestShipment
     */
    FreightShipmentInformation?: ShipmentFreightShipmentInformation;
    /**
     * Goods Not In Free Circulation indicator.  This is an empty tag, any value inside is ignored. This indicator is invalid for a package type of UPS Letter and DocumentsOnly.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    GoodsNotInFreeCirculationIndicator?: string;
    /**
     *
     * @type {ShipmentPromotionalDiscountInformation}
     * @memberof ShipmentRequestShipment
     */
    PromotionalDiscountInformation?: ShipmentPromotionalDiscountInformation;
    /**
     *
     * @type {ShipmentDGSignatoryInfo}
     * @memberof ShipmentRequestShipment
     */
    DGSignatoryInfo?: ShipmentDGSignatoryInfo;
    /**
     *
     * @type {ShipmentShipmentRatingOptions}
     * @memberof ShipmentRequestShipment
     */
    ShipmentRatingOptions?: ShipmentShipmentRatingOptions;
    /**
     * Movement Reference Number (MRN) information.  Must contain alphanumeric characters only. Must be a length of 18 characters. The 3rd and 4th Characters must be the Shipper country or territory ISO Code.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MovementReferenceNumber?: string;
    /**
     *
     * @type {ShipmentReferenceNumber}
     * @memberof ShipmentRequestShipment
     */
    ReferenceNumber?: ShipmentReferenceNumber;
    /**
     *
     * @type {ShipmentService}
     * @memberof ShipmentRequestShipment
     */
    Service: ShipmentService;
    /**
     *
     * @type {ShipmentInvoiceLineTotal}
     * @memberof ShipmentRequestShipment
     */
    InvoiceLineTotal?: ShipmentInvoiceLineTotal;
    /**
     * Total number of pieces in all pallets in a UPS Worldwide Express Freight Shipment.  It is required for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment. Valid values are 1 to 99999.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    NumOfPiecesInShipment?: string;
    /**
     * USPS Endorsement. Valid values:  1 = Return Service Requested  2 = Forwarding Service Requested  3 = Address Service Requested  4 = Change Service Requested and  5 = No Service Selected.  Note: For International Mail Innovations shipments use No Service Selected. International Mail Innovations shipments are applicable for Priority Mail Innovations and Mail Innovations Economy Mail Innovations services only.  Required for Mail Innovations forward shipments.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    USPSEndorsement?: string;
    /**
     * Indicates single label with both MI label and CN22 form.  International CN22 form is required.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MILabelCN22Indicator?: string;
    /**
     * A component encoded on the barcode of the Mail Innovations label.   Valid values:  IR = Irregular MA = Machineable SubClass is only required if the customer�s contract have them subclass the package not UPS.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    SubClassification?: string;
    /**
     * Customer assigned identifier for report and billing summarization displays to the right of the Cost Center title.  Required for Mail Innovations Return shipments. It is shown on the bottom of the shipping label as reference 2.  Cost Center length is alphanumeric with a max length of 30 for Mail Innovations forward shipments.  Cost Center length is numeric with a max length of 4 for Mail Innovations Return shipments.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    CostCenter?: string;
    /**
     * Presence/Absence indicator. Presence of this indicator means that the customer is requesting for the CostCenter field to be barcoded at the bottom of the label.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    CostCenterBarcodeIndicator?: string;
    /**
     * Customer-assigned unique piece identifier that returns visibility events.  Required only for Mail Innovations forward shipments. Alpha numeric values only. It is shown on the bottom of the shipping label as reference 1.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    PackageID?: string;
    /**
     * Presence/Absence indicator. Presence of this indicator means that the customer is requesting for the PackageID field to be barcoded at the bottom of the label.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    PackageIDBarcodeIndicator?: string;
    /**
     * Mail classification defined by the USPS.   Valid values:  1 = Balloon 2 = Oversize 3 = Not Applicable
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    IrregularIndicator?: string;
    /**
     *
     * @type {Array<ShipmentShipmentIndicationType>}
     * @memberof ShipmentRequestShipment
     */
    ShipmentIndicationType?: Array<ShipmentShipmentIndicationType>;
    /**
     * MIDualReturnShipmentKey is unique key required to process Mail Innovations Dual Return Shipment.   The unique identifier (key) would be returned in response of first phase of Mail Innovations Dual Return Shipments.   This unique identifier (key) would be part of request for second phase of Mail Innovations Dual Return Shipments.  Format:  For Package return shipments, the package tracking number is concatenated with the system time (YYYY-MM-DDHH.MM.SS.NNN), followed by service code.   For MI Return shipments, the Mail Manifest ID (MMI) is concatenated with the system time.  The unique identifier (key) is required to link the package and the Mail Innovations portion of Dual Return shipment.   If unique identifier (key) is empty in the request for UPS Mail Innovations Return Service, the request will be treated as the first phase of the Mail Innovations Dual Returns Request.   If the MIDualReturnShipmentIndicator is present with empty or null MIDualReturnShipmentKey in UPS Package Return Shipment, the request will be treated as the first phase of Dual MI Return Label Shipment.   This field would be ignored if MIDualReturnShipmentIndicator is not present in UPS Package Return Shipment request.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MIDualReturnShipmentKey?: string;
    /**
     * MIDualReturnShipmentIndicator is an indicator to identify a Package Shipment is part of UPS Mail Innovations Dual Label Shipment.   Its presence means Package Shipment is part of UPS Mail Innovations Dual Label shipment.  If the indicator is present in Package Shipment request, shipment would be considered as part of a Dual Mail Innovations Returns.   This indicator is not valid with UPS Mail Innovations Returns Service code.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MIDualReturnShipmentIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. RatingMethodRequestedIndicator is an indicator. If present, Billable Weight Calculation method information and Rating Method information would be returned in response.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    RatingMethodRequestedIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. TaxInformationIndicator is an indicator. If present, any taxes that may be applicable to a shipment would be returned in response. If this indicator is requested with NegotiatedRatesIndicator, Tax related information, if applicable, would be returned only for Negotiated Rates and not for Published Rates. The Tax related information includes any type of Taxes, corresponding Monetary Values, Total Charges with Taxes and disclaimers (if applicable) would be returned in response.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    TaxInformationIndicator?: string;
    /**
     *
     * @type {ShipmentShipmentServiceOptions}
     * @memberof ShipmentRequestShipment
     */
    ShipmentServiceOptions?: ShipmentShipmentServiceOptions;
    /**
     * Represents 5 character ISO Locale that allows the user to request Reference Number Code on Label, Label instructions and Receipt instructions (if applicable) in desired language.  Locale is specified by the combination of language code and country or territory code - 2 character language code and 2 character country or territory code seperated by an underscore ('_') character.  If Locale element is requested along with LabelLinksIndicator, the URL to retrieve Label and Receipts (if applicable) will be returned in the requested Locale. Please note only LabelURL and ReceiptURL (if applicable) will be returned. LocalLanguageLabelURL and LocalLanguageReceiptURL will not be returned if Locale element is present in request. Queen�s English (en_GB) is the default
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    Locale?: string;
    /**
     * Shipment Value Threshold Code.                                                      01 = Shipment value is below or equals to threshold value 02 = Shipment value is above threshold value.     NA = Not Applicable
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    ShipmentValueThresholdCode?: string;
    /**
     * Master Carton ID.                                              If Economy Service (17 or 72) : Economy Shipment will be associated with given Master Carton ID.                                                                          If Non-Economy Service: Master Carton Shipment will be created for given Master Carton ID.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MasterCartonID?: string;
    /**
     * Master Carton Indicator. Presence of the indicator means Master Carton ID will be created and returned to client.  This is an empty tag, any value inside is ignored.                                                                  MasterCartonIndicator is only valid with Econmoy Shipment (Service Code 17 or 72). Will be ignored if master carton id present.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    MasterCartonIndicator?: string;
    /**
     * Bar Code Image Indicator. Presence of this indicator means only bar code image will be created and returned to client. Shipping Label wont be returned when bar code image is returned.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    BarCodeImageIndicator?: string;
    /**
     * Bar Code And Label Indicator. Presence of this indicator means both bar code image and shipping label will be returned.
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    BarCodeAndLabelIndicator?: string;
    /**
     * User can send up to 7 days in the future with current date as day zero. Format: YYYYMMDD
     * @type {string}
     * @memberof ShipmentRequestShipment
     */
    ShipmentDate?: string;
    /**
     *
     * @type {Array<ShipmentPackage>}
     * @memberof ShipmentRequestShipment
     */
    Package: Array<ShipmentPackage>;
}
/**
 * Shipment Response.
 * @export
 * @interface ShipmentResponse
 */
export interface ShipmentResponse {
    /**
     *
     * @type {ShipmentResponseResponse}
     * @memberof ShipmentResponse
     */
    Response: ShipmentResponseResponse;
    /**
     *
     * @type {ShipmentResponseShipmentResults}
     * @memberof ShipmentResponse
     */
    ShipmentResults: ShipmentResponseShipmentResults;
}
/**
 * Response container for Shipment response.
 * @export
 * @interface ShipmentResponseResponse
 */
export interface ShipmentResponseResponse {
    /**
     *
     * @type {ResponseResponseStatus}
     * @memberof ShipmentResponseResponse
     */
    ResponseStatus: ResponseResponseStatus;
    /**
     *
     * @type {ResponseAlert}
     * @memberof ShipmentResponseResponse
     */
    Alert?: ResponseAlert;
    /**
     *
     * @type {ResponseTransactionReference}
     * @memberof ShipmentResponseResponse
     */
    TransactionReference?: ResponseTransactionReference;
}
/**
 * Shipment Results container.
 * @export
 * @interface ShipmentResponseShipmentResults
 */
export interface ShipmentResponseShipmentResults {
    /**
     *
     * @type {Array<ShipmentResultsDisclaimer>}
     * @memberof ShipmentResponseShipmentResults
     */
    Disclaimer?: Array<ShipmentResultsDisclaimer>;
    /**
     *
     * @type {ShipmentResultsShipmentCharges}
     * @memberof ShipmentResponseShipmentResults
     */
    ShipmentCharges?: ShipmentResultsShipmentCharges;
    /**
     *
     * @type {ShipmentResultsNegotiatedRateCharges}
     * @memberof ShipmentResponseShipmentResults
     */
    NegotiatedRateCharges?: ShipmentResultsNegotiatedRateCharges;
    /**
     *
     * @type {ShipmentResultsFRSShipmentData}
     * @memberof ShipmentResponseShipmentResults
     */
    FRSShipmentData?: ShipmentResultsFRSShipmentData;
    /**
     * RatingMethod is to indicate whether the Shipment was rated as shipment level or package level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment level 02 = Package level
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    RatingMethod?: string;
    /**
     * BillableWeightCalculationMethod is to indicate whether the billable weight calculation method utilized was - the package level or shipment level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment Billable Weight 02 = Package Billable Weight
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    BillableWeightCalculationMethod?: string;
    /**
     *
     * @type {ShipmentResultsBillingWeight}
     * @memberof ShipmentResponseShipmentResults
     */
    BillingWeight: ShipmentResultsBillingWeight;
    /**
     * Returned UPS shipment ID number.1Z Number of the first package in the shipment.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    ShipmentIdentificationNumber?: string;
    /**
     * MIDualReturnShipmentKey is unique key required to process Mail Innovations Dual Return Shipment.   The unique identifier (key) would be returned in response of first phase of Mail Innovations Dual Return Shipments.   This unique identifier (key) would be part of request for second phase of Mail Innovations Dual Return Shipments and would be played back in response for second phase of Mail Innovations Dual Return Shipment.  If the shipment is a Package return shipment, the package tracking number will be concatenated with the system time (in the format YYYY-MM-DDHH.MM.SS.NNN) and followed by service code.   If the shipment is an MI Returns shipment, the Mail Manifest ID (MMI) will be concatenated with the system time.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    MIDualReturnShipmentKey?: string;
    /**
     * Bar Code Image will be returned as Base 64 encoded graphic image. Bar Code Image will be returned if BarCodeImageIndicator or BarCodeAndLabelIndicator is present.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    BarCodeImage?: string;
    /**
     *
     * @type {Array<ShipmentResultsPackageResults>}
     * @memberof ShipmentResponseShipmentResults
     */
    PackageResults?: Array<ShipmentResultsPackageResults>;
    /**
     *
     * @type {Array<ShipmentResultsControlLogReceipt>}
     * @memberof ShipmentResponseShipmentResults
     */
    ControlLogReceipt?: Array<ShipmentResultsControlLogReceipt>;
    /**
     *
     * @type {ShipmentResultsForm}
     * @memberof ShipmentResponseShipmentResults
     */
    Form?: ShipmentResultsForm;
    /**
     *
     * @type {ShipmentResultsCODTurnInPage}
     * @memberof ShipmentResponseShipmentResults
     */
    CODTurnInPage?: ShipmentResultsCODTurnInPage;
    /**
     *
     * @type {ShipmentResultsHighValueReport}
     * @memberof ShipmentResponseShipmentResults
     */
    HighValueReport?: ShipmentResultsHighValueReport;
    /**
     * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    LabelURL?: string;
    /**
     * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageLabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.  Not returned if LabelLinksIndicator is requested with Locale element.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    LocalLanguageLabelURL?: string;
    /**
     * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. ReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    ReceiptURL?: string;
    /**
     * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.   Not returned if LabelLinksIndicator is requested with Locale element.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    LocalLanguageReceiptURL?: string;
    /**
     * Dangrous Good Paper Image in pdf format. One multipage PDF document will be returned that will contain all required Dangrous Goods shipping paper copies for all Dangerous Goods packages.  Only returned when DGSignatoryInfo is present.
     * @type {Array<string>}
     * @memberof ShipmentResponseShipmentResults
     */
    DGPaperImage?: Array<string>;
    /**
     * Master Carton ID. MasterCartonID will be return if MasterCartonIndicator is present in request.
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    MasterCartonID?: string;
    /**
     * Informational only
     * @type {string}
     * @memberof ShipmentResponseShipmentResults
     */
    RoarRatedIndicator?: string;
}
/**
 * BillableWeightCalculationMethod is to indicate whether the billable weight calculation method utilized was - the package level or shipment level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment Billable Weight 02 = Package Billable Weight
 * @export
 */
export type ShipmentResultsBillableWeightCalculationMethod = string;
/**
 * Billing Weight container.
 * @export
 * @interface ShipmentResultsBillingWeight
 */
export interface ShipmentResultsBillingWeight {
    /**
     *
     * @type {BillingWeightUnitOfMeasurement}
     * @memberof ShipmentResultsBillingWeight
     */
    UnitOfMeasurement: BillingWeightUnitOfMeasurement;
    /**
     * Billing weight. Higher of the actual shipment weight versus the shipment dimensional weight.  When using a negotiated divisor different from the published UPS divisor (139 for inches and 5,000 for cm), the weight returned is based on the published divisor. Rates, however, are based on the negotiated divisor.
     * @type {string}
     * @memberof ShipmentResultsBillingWeight
     */
    Weight: string;
}
/**
 * The container of the COD Turn In Page.    Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ShipmentResultsCODTurnInPage
 */
export interface ShipmentResultsCODTurnInPage {
    /**
     *
     * @type {CODTurnInPageImage}
     * @memberof ShipmentResultsCODTurnInPage
     */
    Image: CODTurnInPageImage;
}
/**
 * Container for the High Value reports when forward shipments have declared value between $999 and $50,000 USD.�  Two copies of high value report needs to be pointed out.    Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ShipmentResultsControlLogReceipt
 */
export interface ShipmentResultsControlLogReceipt {
    /**
     *
     * @type {ControlLogReceiptImageFormat}
     * @memberof ShipmentResultsControlLogReceipt
     */
    ImageFormat: ControlLogReceiptImageFormat;
    /**
     * Base 64 encoded html, EPL2, ZPL or SPL image.�     Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentResultsControlLogReceipt
     */
    GraphicImage: string;
}
/**
 * Dangrous Good Paper Image in pdf format. One multipage PDF document will be returned that will contain all required Dangrous Goods shipping paper copies for all Dangerous Goods packages.  Only returned when DGSignatoryInfo is present.
 * @export
 */
export type ShipmentResultsDGPaperImage = string;
/**
 * Disclaimer would be used to provide more information to shipper regarding the processed shipment. This would be used to notify shipper about possible taxes and duties that might have been added or might apply to the shipment.  This field would be returned only if TaxInformationIndicator is present in a request.
 * @export
 * @interface ShipmentResultsDisclaimer
 */
export interface ShipmentResultsDisclaimer {
    /**
     * Code representing type of Disclaimer.   Refer to Disclaimer Codes and Messages in the Appendix for various disclaimers that would be possible for a given shipment.
     * @type {string}
     * @memberof ShipmentResultsDisclaimer
     */
    Code: string;
    /**
     * Disclaimer description.   This field would be returned only if TaxInformationIndicator is present in a request.  Refer to Disclaimer Codes and Messages in the Appendix for various disclaimers that would be possible for a given shipment.
     * @type {string}
     * @memberof ShipmentResultsDisclaimer
     */
    Description: string;
}
/**
 * Ground Freight Pricing Shipment data container. Ground Freight Pricing shipment data is only guaranteed to be returned for Ground Freight Pricing shipments only.
 * @export
 * @interface ShipmentResultsFRSShipmentData
 */
export interface ShipmentResultsFRSShipmentData {
    /**
     *
     * @type {FRSShipmentDataTransportationCharges}
     * @memberof ShipmentResultsFRSShipmentData
     */
    TransportationCharges: FRSShipmentDataTransportationCharges;
    /**
     *
     * @type {FRSShipmentDataFreightDensityRate}
     * @memberof ShipmentResultsFRSShipmentData
     */
    FreightDensityRate?: FRSShipmentDataFreightDensityRate;
    /**
     *
     * @type {Array<FRSShipmentDataHandlingUnits>}
     * @memberof ShipmentResultsFRSShipmentData
     */
    HandlingUnits?: Array<FRSShipmentDataHandlingUnits>;
}
/**
 * Container tag for the International forms image.   Form is returned for following shipments - Forward shipments, Shipments with PRL ReturnService, Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707.
 * @export
 * @interface ShipmentResultsForm
 */
export interface ShipmentResultsForm {
    /**
     * Code that indicates the type of form.�   Applicable only for ShipmentResponse and ShipAcceptResponse.  Valid values: 01 - All Requested International Forms.
     * @type {string}
     * @memberof ShipmentResultsForm
     */
    Code: string;
    /**
     * Description that indicates the type of form. Possible Values. All Requested International Forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentResultsForm
     */
    Description: string;
    /**
     *
     * @type {FormImage}
     * @memberof ShipmentResultsForm
     */
    Image?: FormImage;
    /**
     * Unique Id for later retrieval of saved version of the completed international forms. Always returned when code = 01. 01 represents international forms.     Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentResultsForm
     */
    FormGroupId?: string;
    /**
     * Contains description text which identifies the group of International forms. This element is part of both request and response. This element does not appear on the forms.    Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentResultsForm
     */
    FormGroupIdName?: string;
}
/**
 * Container for the High Value Report generated for ImportControl or Return shipments with high package declared value.  Applicable for one pass ShipmentResponse and two-pass ShipAcceptResponse
 * @export
 * @interface ShipmentResultsHighValueReport
 */
export interface ShipmentResultsHighValueReport {
    /**
     *
     * @type {HighValueReportImage}
     * @memberof ShipmentResultsHighValueReport
     */
    Image: HighValueReportImage;
}
/**
 * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.
 * @export
 */
export type ShipmentResultsLabelURL = string;
/**
 * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageLabelURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.  Forward shipment except for Mail Innovations Forward.  Not returned if LabelLinksIndicator is requested with Locale element.
 * @export
 */
export type ShipmentResultsLocalLanguageLabelURL = string;
/**
 * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. LocalLanguageReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.   Not returned if LabelLinksIndicator is requested with Locale element.
 * @export
 */
export type ShipmentResultsLocalLanguageReceiptURL = string;
/**
 * MIDualReturnShipmentKey is unique key required to process Mail Innovations Dual Return Shipment.   The unique identifier (key) would be returned in response of first phase of Mail Innovations Dual Return Shipments.   This unique identifier (key) would be part of request for second phase of Mail Innovations Dual Return Shipments and would be played back in response for second phase of Mail Innovations Dual Return Shipment.  If the shipment is a Package return shipment, the package tracking number will be concatenated with the system time (in the format YYYY-MM-DDHH.MM.SS.NNN) and followed by service code.   If the shipment is an MI Returns shipment, the Mail Manifest ID (MMI) will be concatenated with the system time.
 * @export
 */
export type ShipmentResultsMIDualReturnShipmentKey = string;
/**
 * Master Carton ID. MasterCartonID will be return if MasterCartonIndicator is present in request.
 * @export
 */
export type ShipmentResultsMasterCartonID = string;
/**
 * Negotiated Rates Charge Container.  For tiered rates and promotional discounts, if a particular shipment based on zone, origin, destination or even shipment size doesn't qualify for the existing discount then no negotiated rates container will be returned. Published rates will be the applicable rate.
 * @export
 * @interface ShipmentResultsNegotiatedRateCharges
 */
export interface ShipmentResultsNegotiatedRateCharges {
    /**
     *
     * @type {Array<NegotiatedRateChargesItemizedCharges>}
     * @memberof ShipmentResultsNegotiatedRateCharges
     */
    ItemizedCharges?: Array<NegotiatedRateChargesItemizedCharges>;
    /**
     *
     * @type {Array<NegotiatedRateChargesTaxCharges>}
     * @memberof ShipmentResultsNegotiatedRateCharges
     */
    TaxCharges?: Array<NegotiatedRateChargesTaxCharges>;
    /**
     *
     * @type {NegotiatedRateChargesTotalCharge}
     * @memberof ShipmentResultsNegotiatedRateCharges
     */
    TotalCharge?: NegotiatedRateChargesTotalCharge;
    /**
     *
     * @type {NegotiatedRateChargesTotalChargesWithTaxes}
     * @memberof ShipmentResultsNegotiatedRateCharges
     */
    TotalChargesWithTaxes?: NegotiatedRateChargesTotalChargesWithTaxes;
}
/**
 * Returned Package Information.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ShipmentResultsPackageResults
 */
export interface ShipmentResultsPackageResults {
    /**
     * Package 1Z number.   For Mail Innovations shipments, please use the USPSPICNumber when tracking packages (a non-1Z number Mail Manifest Id is returned).  Applicable only for ShipmentResponse and ShipAcceptResponse.
     * @type {string}
     * @memberof ShipmentResultsPackageResults
     */
    TrackingNumber: string;
    /**
     *
     * @type {PackageResultsRateModifier}
     * @memberof ShipmentResultsPackageResults
     */
    RateModifier?: PackageResultsRateModifier;
    /**
     *
     * @type {PackageResultsBaseServiceCharge}
     * @memberof ShipmentResultsPackageResults
     */
    BaseServiceCharge?: PackageResultsBaseServiceCharge;
    /**
     *
     * @type {PackageResultsServiceOptionsCharges}
     * @memberof ShipmentResultsPackageResults
     */
    ServiceOptionsCharges?: PackageResultsServiceOptionsCharges;
    /**
     *
     * @type {PackageResultsShippingLabel}
     * @memberof ShipmentResultsPackageResults
     */
    ShippingLabel?: PackageResultsShippingLabel;
    /**
     *
     * @type {PackageResultsShippingReceipt}
     * @memberof ShipmentResultsPackageResults
     */
    ShippingReceipt?: PackageResultsShippingReceipt;
    /**
     * USPSPICNumber is USPS Package Identification; it should be used for tracking Mail Innovations shipments.
     * @type {string}
     * @memberof ShipmentResultsPackageResults
     */
    USPSPICNumber?: string;
    /**
     * USPS defined CN22 ID number format varies based on destination country or territory.  Not applicable as of Jan 2015.  Mail Innovations shipments US to VI, PR, and GU are not considered international.
     * @type {string}
     * @memberof ShipmentResultsPackageResults
     */
    CN22Number?: string;
    /**
     *
     * @type {Array<PackageResultsAccessorial>}
     * @memberof ShipmentResultsPackageResults
     */
    Accessorial?: Array<PackageResultsAccessorial>;
    /**
     *
     * @type {PackageResultsForm}
     * @memberof ShipmentResultsPackageResults
     */
    Form?: PackageResultsForm;
    /**
     *
     * @type {Array<PackageResultsItemizedCharges>}
     * @memberof ShipmentResultsPackageResults
     */
    ItemizedCharges?: Array<PackageResultsItemizedCharges>;
    /**
     *
     * @type {PackageResultsNegotiatedCharges}
     * @memberof ShipmentResultsPackageResults
     */
    NegotiatedCharges?: PackageResultsNegotiatedCharges;
}
/**
 * RatingMethod is to indicate whether the Shipment was rated as shipment level or package level. This information will be returned only if RatingMethodRequestedIndicator is present in the request.  Valid values: 01 = Shipment level 02 = Package level
 * @export
 */
export type ShipmentResultsRatingMethod = string;
/**
 * URL will point to a page wherein label, receipt and other documents, if applicable, such as HighValueReport, CustomsInvoice and ImportControl instructions can be requested. ReceiptURL is returned only if the LabelLinksIndicator is requested for following shipments: Print/Electronic ImportControl shipment Print/Electronic Return shipment.
 * @export
 */
export type ShipmentResultsReceiptURL = string;
/**
 * Shipment charges Container. Shipment charges info.
 * @export
 * @interface ShipmentResultsShipmentCharges
 */
export interface ShipmentResultsShipmentCharges {
    /**
     * Rate Type with which Shipment is rated. Possible RateChart values for different regions will be:  US 48 origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.  Alaska/Hawaii origin:  1 � Daily Rates  3 � Standard List Rates  4 � Retail Rates.   All Other origins:  1 � Rates  5 - Regional Rates  6 - General List Rates.  3 and 4 do not apply.
     * @type {string}
     * @memberof ShipmentResultsShipmentCharges
     */
    RateChart?: string;
    /**
     *
     * @type {ShipmentChargesBaseServiceCharge}
     * @memberof ShipmentResultsShipmentCharges
     */
    BaseServiceCharge?: ShipmentChargesBaseServiceCharge;
    /**
     *
     * @type {ShipmentChargesTransportationCharges}
     * @memberof ShipmentResultsShipmentCharges
     */
    TransportationCharges: ShipmentChargesTransportationCharges;
    /**
     *
     * @type {Array<ShipmentChargesItemizedCharges>}
     * @memberof ShipmentResultsShipmentCharges
     */
    ItemizedCharges?: Array<ShipmentChargesItemizedCharges>;
    /**
     *
     * @type {ShipmentChargesServiceOptionsCharges}
     * @memberof ShipmentResultsShipmentCharges
     */
    ServiceOptionsCharges: ShipmentChargesServiceOptionsCharges;
    /**
     *
     * @type {Array<ShipmentChargesTaxCharges>}
     * @memberof ShipmentResultsShipmentCharges
     */
    TaxCharges?: Array<ShipmentChargesTaxCharges>;
    /**
     *
     * @type {ShipmentChargesTotalCharges}
     * @memberof ShipmentResultsShipmentCharges
     */
    TotalCharges: ShipmentChargesTotalCharges;
    /**
     *
     * @type {ShipmentChargesTotalChargesWithTaxes}
     * @memberof ShipmentResultsShipmentCharges
     */
    TotalChargesWithTaxes?: ShipmentChargesTotalChargesWithTaxes;
}
/**
 * Returned UPS shipment ID number.1Z Number of the first package in the shipment.
 * @export
 */
export type ShipmentResultsShipmentIdentificationNumber = string;
/**
 * Type of Return service. When this container exists, the shipment is a return shipment.
 * @export
 * @interface ShipmentReturnService
 */
export interface ShipmentReturnService {
    /**
     * Return Service types:   2 = UPS Print and Mail (PNM)  3 = UPS Return Service 1-Attempt (RS1)  5 = UPS Return Service 3-Attempt (RS3)  8 = UPS Electronic Return Label (ERL)  9 = UPS Print Return Label (PRL)  10 = UPS Exchange Print Return Label  11 = UPS Pack & Collect Service 1-Attempt Box 1  12 = UPS Pack & Collect Service 1-Attempt Box 2  13 = UPS Pack & Collect Service 1-Attempt Box 3  14 = UPS Pack & Collect Service 1-Attempt Box 4  15 = UPS Pack & Collect Service 1-Attempt Box 5  16 = UPS Pack & Collect Service 3-Attempt Box 1  17 = UPS Pack & Collect Service 3-Attempt Box 2  18 = UPS Pack & Collect Service 3-Attempt Box 3  19 = UPS Pack & Collect Service 3-Attempt Box 4  20 = UPS Pack & Collect Service 3-Attempt Box 5
     * @type {string}
     * @memberof ShipmentReturnService
     */
    Code: string;
    /**
     * Return Service description.
     * @type {string}
     * @memberof ShipmentReturnService
     */
    Description?: string;
}
/**
 * UPS service type.
 * @export
 * @interface ShipmentService
 */
export interface ShipmentService {
    /**
     * Valid values:  01 = Next Day Air 02 = 2nd Day Air 03 = Ground 07 = Express 08 = Expedited 11 = UPS Standard 12 = 3 Day Select 13 = Next Day Air Saver 14 = UPS Next Day Air� Early                           17 = UPS Worldwide Economy DDU 54 = Express Plus 59 = 2nd Day Air A.M.  65 = UPS Saver M2 = First Class Mail M3 = Priority Mail M4 = Expedited MaiI Innovations M5 = Priority Mail Innovations M6 = Economy Mail Innovations                                                                                                                                                                                                                                                                   M7 = MaiI Innovations (MI) Returns 70 = UPS Access Point� Economy 71 = UPS Worldwide Express Freight Midday            72 = UPS Worldwide Economy DDP 74 = UPS Express�12:00                                    75 = UPS Heavy Goods 82 = UPS Today Standard 83 = UPS Today Dedicated Courier 84 = UPS Today Intercity 85 = UPS Today Express 86 = UPS Today Express Saver 96 = UPS Worldwide Express Freight.�   Note: Only service code 03 is used for Ground Freight Pricing� shipments  The following Services are not available to return shipment: 13, 59, 82, 83, 84, 85, 86
     * @type {string}
     * @memberof ShipmentService
     */
    Code: string;
    /**
     * Description of the service code. Examples are Next Day Air, Worldwide Express, and Ground.
     * @type {string}
     * @memberof ShipmentService
     */
    Description?: string;
}
/**
 * Access Point COD indicates COD is requested for a shipment.  Valid only for \"01 - Hold For Pickup At UPS Access Point\" Shipment Indication type. Shipment Access Point COD is valid only for countries or territories within E.U.  Not valid with (Shipment) COD.  Not available to shipment with return service.
 * @export
 * @interface ShipmentServiceOptionsAccessPointCOD
 */
export interface ShipmentServiceOptionsAccessPointCOD {
    /**
     * Access Point COD Currency Code.
     * @type {string}
     * @memberof ShipmentServiceOptionsAccessPointCOD
     */
    CurrencyCode: string;
    /**
     * Access Point COD Monetary Value.
     * @type {string}
     * @memberof ShipmentServiceOptionsAccessPointCOD
     */
    MonetaryValue: string;
}
/**
 * COD container  Indicates COD is requested. Shipment COD is only available for EU origin countries or territories and for shippers account type Daily Pickup and Drop Shipping. Not available to shipment with return service.
 * @export
 * @interface ShipmentServiceOptionsCOD
 */
export interface ShipmentServiceOptionsCOD {
    /**
     * For valid values refer to:�Rating and Shipping COD Supported Countries or Territories in the Appendix.
     * @type {string}
     * @memberof ShipmentServiceOptionsCOD
     */
    CODFundsCode: string;
    /**
     *
     * @type {CODCODAmount}
     * @memberof ShipmentServiceOptionsCOD
     */
    CODAmount: CODCODAmount;
}
/**
 * CommercialInvoiceRemovalIndicator allows a shipper to dictate UPS to remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee.
 * @export
 */
export type ShipmentServiceOptionsCommercialInvoiceRemovalIndicator = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \"Hold For PickUp at UPS Access Point\" package.� Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \"01 - Hold For PickUp at UPS Access Point\".
 * @export
 */
export type ShipmentServiceOptionsDeliverToAddresseeOnlyIndicator = string;
/**
 * Delivery Confirmation container.   Valid for forward shipments only.  Refer to Delivery Confirmation Origin-Destination Pairs in the Appendix for a list of valid values.
 * @export
 * @interface ShipmentServiceOptionsDeliveryConfirmation
 */
export interface ShipmentServiceOptionsDeliveryConfirmation {
    /**
     * Type of delivery confirmation.  Valid values:  1 - Delivery Confirmation 2 - Delivery Confirmation Signature Required 3 - Delivery Confirmation Adult Signature Required
     * @type {string}
     * @memberof ShipmentServiceOptionsDeliveryConfirmation
     */
    DCISType: string;
    /**
     * Delivery Confirmation Control number associated with the delivery confirmation for the package.  Valid for forward shipments only.
     * @type {string}
     * @memberof ShipmentServiceOptionsDeliveryConfirmation
     */
    DCISNumber?: string;
}
/**
 * Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the ship to address on the shipping label.  This accessorial is not valid with Shipment Indication Type \"01 - Hold For Pickup At UPS Access Point\" and \"02 - UPS Access Point� Delivery\".
 * @export
 */
export type ShipmentServiceOptionsDirectDeliveryOnlyIndicator = string;
/**
 * Drop off At UPS Facility indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
 * @export
 */
export type ShipmentServiceOptionsDropoffAtUPSFacilityIndicator = string;
/**
 * Package Release code allows the consignee or claimant to pick-up a package at a UPS Access Point�.� The shipper must provide the Package Release Code to the consignee so that they can provide the code to the UPS Access Point personnel as another item for authentication before the package is released to them. Package Release Code is only valid with ShipmentIndicationType�01 - Hold for Pickup at UPS Access Point�.  The release code must be between length 4 and 6 and only contain numbers.
 * @export
 */
export type ShipmentServiceOptionsEPRAReleaseCode = string;
/**
 * Exchange forward indicator presence at shipment level is required to create exchange forward Shipments.  In the label routing Instruction text will be defaulted to \"EXCHANGE-LIKE ITEM ONLY\".
 * @export
 */
export type ShipmentServiceOptionsExchangeForwardIndicator = string;
/**
 * Hold For Pickup indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
 * @export
 */
export type ShipmentServiceOptionsHoldForPickupIndicator = string;
/**
 * Indicates that the Shipment is an ImportControl shipment.
 * @export
 */
export type ShipmentServiceOptionsImportControlIndicator = string;
/**
 * Inside delivery accessory. Valid values: 01 - White Glove 02 - Room of Choice 03 - Installation Default is Room of Choice.  Shippers account needs to have a valid contract for Heavy Goods Service.
 * @export
 */
export type ShipmentServiceOptionsInsideDelivery = string;
/**
 * International Forms information.
 * @export
 * @interface ShipmentServiceOptionsInternationalForms
 */
export interface ShipmentServiceOptionsInternationalForms {
    /**
     * Indicates the name of the International Form requested. Valid values:   01 - Invoice 03 - CO 04 - NAFTA CO 05 - Partial Invoice 06 - Packinglist 07 - Customer Generated Forms 08 � Air Freight Packing List 09 - CN22 Form 10 � UPS Premium Care Form 11 - EEI For shipment with return service, 01, 05 or 10 are the only valid values.  Note: 01 and 05 are mutually exclusive and 05 are only valid for return shipments only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    FormType: string;
    /**
     *
     * @type {InternationalFormsUserCreatedForm}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    UserCreatedForm?: InternationalFormsUserCreatedForm;
    /**
     *
     * @type {InternationalFormsUPSPremiumCareForm}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    UPSPremiumCareForm?: InternationalFormsUPSPremiumCareForm;
    /**
     *
     * @type {InternationalFormsCN22Form}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    CN22Form?: InternationalFormsCN22Form;
    /**
     * Presence of the indicator means user will supply additional document, such as EEI, NAFTA_CO or CO.  This indicator should be set when the shipper intends to utilize UPS paperless invoice functionality AND the shipper has SELF-PREPARED other International Forms (EEI, CO, NAFTACO) to accompany the shipment.  It is evaluated only when:  1. Account is paperless enabled.  2. Movement requires an invoice. 3. Destination country or territory accepts paperless invoice.  4. Invoice data is supplied by the client and the data passes validation.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    AdditionalDocumentIndicator?: string;
    /**
     * Contains description text which identifies the group of International forms. This element does not appear on the forms.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    FormGroupIdName?: string;
    /**
     *
     * @type {InternationalFormsEEIFilingOption}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    EEIFilingOption?: InternationalFormsEEIFilingOption;
    /**
     *
     * @type {InternationalFormsContacts}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    Contacts?: InternationalFormsContacts;
    /**
     *
     * @type {InternationalFormsProduct}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    Product: InternationalFormsProduct;
    /**
     * Commercial Invoice number assigned by the exporter.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    InvoiceNumber?: string;
    /**
     * Date when the Invoice is created. Ideally this is the same as the ship date.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and optional for Partial Invoice. Required for Invoice form for forward shipments. For shipment with return service, the user input will be ignored, and the field will be blank on the invoice. Format is yyyyMMdd.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    InvoiceDate?: string;
    /**
     * The customer's order reference number.  Applies to Invoice and Partial Invoice forms only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PurchaseOrderNumber?: string;
    /**
     * Indicates the rights to the seller from the buyer. Also, it refers to Terms of Sale.  Applies to Invoice and Partial Invoice forms only.   Valid values:  CFR: Cost and Freight  CIF: Cost Insurance and Freight  CIP: Carriage and Insurance Paid  CPT: Carriage Paid To  DAF: Delivered at Frontier  DDP: Delivery Duty Paid  DDU: Delivery Duty Unpaid  DEQ: Delivered Ex Quay  DES: Delivered Ex Ship  EXW: Ex Works  FAS: Free Alongside Ship  FCA: Free Carrier  FOB: Free On Board
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    TermsOfShipment?: string;
    /**
     * A reason to export the current international shipment. Valid values: SALE, GIFT, SAMPLE, RETURN, REPAIR, INTERCOMPANYDATA, Any other reason.  Applies to Invoice and Partial Invoice forms only. Required for Invoice forms and Optional for Partial Invoice. No validation.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ReasonForExport?: string;
    /**
     * Any extra information about the current shipment.  Applies to Invoice and Partial Invoice forms only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    Comments?: string;
    /**
     * This is the legal explanation, used by Customs, for the delivering of this shipment. It must be identical to the set of declarations actually used by Customs. Examples of declarations that might be entered in this field are: I hereby certify that the goods covered by this shipment qualify as originating goods for purposes of preferential tariff treatment under the NAFTA. I hereby certify that the information on this invoice is true and correct and the contents and value of this shipment is as stated above.  EEA statement:  The exporter of the products covered by this document declares that except where otherwise clearly indicated these products are of EEA preferential origin.  Applies to Invoice and Partial Invoice forms only. On the invoice for return shipment, the verbiage is as follows (user input is ignored): The exporter of the products covered by this document declares that except where otherwise clearly indicated these products are of EEA preferential origin
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    DeclarationStatement?: string;
    /**
     *
     * @type {InternationalFormsDiscount}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    Discount?: InternationalFormsDiscount;
    /**
     *
     * @type {InternationalFormsFreightCharges}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    FreightCharges?: InternationalFormsFreightCharges;
    /**
     *
     * @type {InternationalFormsInsuranceCharges}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    InsuranceCharges?: InternationalFormsInsuranceCharges;
    /**
     *
     * @type {InternationalFormsOtherCharges}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    OtherCharges?: InternationalFormsOtherCharges;
    /**
     * Currency code for all the monetary values of the Invoice form.  Applies to Invoice and Partial Invoice forms only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    CurrencyCode?: string;
    /**
     *
     * @type {InternationalFormsBlanketPeriod}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    BlanketPeriod?: InternationalFormsBlanketPeriod;
    /**
     * The date the goods will be exiting the country or territory.  Applies to CO and EEI forms only. Required for CO and EEI forms. Format is yyyyMMdd.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ExportDate?: string;
    /**
     * The name of the carrier that is exporting the shipment. The vessels flag number should also be entered, if the carrier is a vessel.  Applies to CO and EEI forms only. Required for CO and EEI forms.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ExportingCarrier?: string;
    /**
     * The four-character Standard Carrier Alpha Code (SCAC) for vessel, rail, and truck shipments. For air shipment, enter the two or three character International Air Transport Association (IATA) code.  Applies to EEI forms only. No Validations.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    CarrierID?: string;
    /**
     * The two-character In Bond Code.  Applies to EEI forms only. Required for EEI forms. Valid values for EEI are: 70: Not in bond; 67: IE from a FTZ; 68: T&E from a FTZ.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    InBondCode?: string;
    /**
     * The Import Entry Number when the export transaction is used as proof of export for import transactions (examples: In Bond, Temporary Import Bond or Drawbacks).  Applies to EEI forms only. Conditionally Required for EEI forms when In bond code value is other than 70 (Not In Bond)
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    EntryNumber?: string;
    /**
     * Contains one of the following:  The two-digit U.S. Postal Service abbreviation for the state from which the goods were shipped to the port of export. The state that is the source for the good with the highest value. The state of consolidation. The Foreign Trade Zone number of the zone from where the exports are leaving.  If the goods were shipped from Puerto Rico, enter PR.  Applies to EEI forms only. Required for EEI.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PointOfOrigin?: string;
    /**
     * Valid values are : S (for state postal code abbreviation) , F : FTZ Identifier  Applies EEI forms only. Required for EEI form.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PointOfOriginType?: string;
    /**
     * Mode of transport by which the goods are exported. Valid values: Air, AirContainerized, Auto, FixedTransportInstallations, Mail, PassengerHandcarried, Pedestrian, Rail, Rail, Containerized, RoadOther, SeaBarge, SeaContainerized, SeaNoncontainerized, Truck, TruckContainerized.  Applies to EEI forms only.  Required for EEI.  Only allowed values can be entered. Only 10 Characters can appear on the form. Anything greater than 10 characters will be truncated on the form.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ModeOfTransport?: string;
    /**
     * Should be one of the following-Overland: The U.S. Customs port where the carrier crosses the U.S. border, Vessel and Air: The U.S. Customs port where the goods are loaded on the carrier to be exported from the U.S., Postal: The U.S. Postal Office from where the goods are mailed.  Applies to EEI forms only. No validation is performed.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PortOfExport?: string;
    /**
     * The country or territory and the port where the goods will be unloaded from the exporting carrier. For vessel and air shipments only.  Applies to EEI forms only. No validation is performed.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PortOfUnloading?: string;
    /**
     * Pier where goods are loaded. For vessel shipments only.  Applies to EEI forms only. No validation is performed.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    LoadingPier?: string;
    /**
     * Information about parties to transaction. Use Related, if the parties to the transaction are related. A related party is an export from a U.S. businessperson or business to a foreign business or from a U.S. business to a foreign person or business where the person has at least 10 percent of the voting shares of the business during the fiscal year. If unincorporated, then an equivalent interest in the business.  Applies to EEI forms only.   Valid values: R - Related, N - Non-related.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    PartiesToTransaction?: string;
    /**
     * If Present, indicates that it is a routed export transaction. A routed export transaction is one, where the foreign principal party in interest authorizes a U.S. forwarding (or other) agent to export the merchandise outside the U.S.  Applies to EEI forms only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    RoutedExportTransactionIndicator?: string;
    /**
     * If present indicates that the goods are containerized. This applies to vessel shipments only.  Applies to EEI forms only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ContainerizedIndicator?: string;
    /**
     * The application will automatically provide a copy of the invoice or NAFTA/CO with each response regardless of whether the user has enabled Paperless account. The user now has the option to print or ignore the copy provided.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    OverridePaperlessIndicator?: string;
    /**
     * Text for the shipper to add additional information.  Forward shipment only.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    ShipperMemo?: string;
    /**
     * This is an empty tag. Presence of the indicator for EEI form means shipment contains hazardous material.
     * @type {string}
     * @memberof ShipmentServiceOptionsInternationalForms
     */
    HazardousMaterialsIndicator?: string;
}
/**
 * Presence/Absence indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the customer would like items disposed.  Shippers account needs to have a valid contract for Heavy Goods Service.
 * @export
 */
export type ShipmentServiceOptionsItemDisposal = string;
/**
 * Container for the Label Delivery accessorial. Note - LabelDelivery is not applicable for GFP and Mail Innovations Forward shipment.  Required for shipments with either Electronic Return Label Return Service or ImportControl Electronic LabelMethod type. Optional for shipments with Print Return Label Return Service or ImportControl Print LabelMethod type or Forward movement.  If this container is present for shipments with either Electronic Return Label Return Service or ImportControl Electronic LabelMethod type, either of the LabelLinksIndicator or EMail container should be provided. For shipments with Print Return Label Return Service or ImportControl Print LabelMethod type or Forward movement, only LabelLinksIndicator is valid option for LabelDelivery container.
 * @export
 * @interface ShipmentServiceOptionsLabelDelivery
 */
export interface ShipmentServiceOptionsLabelDelivery {
    /**
     *
     * @type {LabelDeliveryEMail}
     * @memberof ShipmentServiceOptionsLabelDelivery
     */
    EMail?: LabelDeliveryEMail;
    /**
     * Indicates the Label and Receipt URLs are to be returned in the XML response.
     * @type {string}
     * @memberof ShipmentServiceOptionsLabelDelivery
     */
    LabelLinksIndicator?: string;
}
/**
 * Type of ImportControl Label. This container is applicable only for ImportControl shipments.  This container is applicable only for ImportControl shipments.
 * @export
 * @interface ShipmentServiceOptionsLabelMethod
 */
export interface ShipmentServiceOptionsLabelMethod {
    /**
     * Valid LabelMethod types are: 01 = ImportControl Print and Mail 02 = ImportControl One-Attempt 03 = ImportControl Three-Attempt 04 = ImportControl Electronic Label 05 = ImportControl Print Label
     * @type {string}
     * @memberof ShipmentServiceOptionsLabelMethod
     */
    Code: string;
    /**
     * LabelMethod description.
     * @type {string}
     * @memberof ShipmentServiceOptionsLabelMethod
     */
    Description?: string;
}
/**
 * Lift Gate For Delivery indicator. The empty tag means indicator is present.  Lift Gate for Delivery is not allowed with Hold For Pickup for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   When both Hold for Pickup and Drop Off At UPS Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
 * @export
 */
export type ShipmentServiceOptionsLiftGateForDeliveryIndicator = string;
/**
 * Lift Gate For Pick Up indicator. The empty tag means indicator is present.  Lift Gate for Pickup is not allowed with Drop Off At UPS Facility for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   When both Hold for Pickup and Drop Off At Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
 * @export
 */
export type ShipmentServiceOptionsLiftGateForPickUpIndicator = string;
/**
 * Container for the Quantum View Notification (QVN) is valid for all shipments including Return service, Import Control and Returns Flexible Access.  Valid return service types are: ERL, PRL, PNM, RS1, or RS3.   The shipment level notification is valid for forward and return international shipments as well as for domestic shipments (for US and PR).
 * @export
 * @interface ShipmentServiceOptionsNotification
 */
export interface ShipmentServiceOptionsNotification {
    /**
     * Notification Code.  Valid values: 3 - Receiver Return Notification 6 - QV Email Notification 7 - QV Exception Notification 8 - QV Delivery Notification  For Mail Innovations forward shipments, QV Email Notifications are allowed for First Class, Priority Mail, and Expedited Mail Innovation services.
     * @type {string}
     * @memberof ShipmentServiceOptionsNotification
     */
    NotificationCode: string;
    /**
     *
     * @type {NotificationEMail}
     * @memberof ShipmentServiceOptionsNotification
     */
    EMail: NotificationEMail;
    /**
     *
     * @type {NotificationVoiceMessage}
     * @memberof ShipmentServiceOptionsNotification
     */
    VoiceMessage?: NotificationVoiceMessage;
    /**
     *
     * @type {NotificationTextMessage}
     * @memberof ShipmentServiceOptionsNotification
     */
    TextMessage?: NotificationTextMessage;
    /**
     *
     * @type {NotificationLocale}
     * @memberof ShipmentServiceOptionsNotification
     */
    Locale?: NotificationLocale;
}
/**
 * This container is used for providing Pre-Alert Notifications to the consignee for UPS Exchange movements and Pack & Collect shipments.
 * @export
 * @interface ShipmentServiceOptionsPreAlertNotification
 */
export interface ShipmentServiceOptionsPreAlertNotification {
    /**
     *
     * @type {PreAlertNotificationEMailMessage}
     * @memberof ShipmentServiceOptionsPreAlertNotification
     */
    EMailMessage?: PreAlertNotificationEMailMessage;
    /**
     *
     * @type {PreAlertNotificationVoiceMessage}
     * @memberof ShipmentServiceOptionsPreAlertNotification
     */
    VoiceMessage?: PreAlertNotificationVoiceMessage;
    /**
     *
     * @type {PreAlertNotificationTextMessage}
     * @memberof ShipmentServiceOptionsPreAlertNotification
     */
    TextMessage?: PreAlertNotificationTextMessage;
    /**
     *
     * @type {PreAlertNotificationLocale}
     * @memberof ShipmentServiceOptionsPreAlertNotification
     */
    Locale: PreAlertNotificationLocale;
}
/**
 * Restricted Articles container.
 * @export
 * @interface ShipmentServiceOptionsRestrictedArticles
 */
export interface ShipmentServiceOptionsRestrictedArticles {
    /**
     * This field is a flag to indicate if the package has Biological substances. True if present; false otherwise.  Shippers account needs to have a valid contract for Biological Substances. Lane check will happen based on postal code/ city.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    DiagnosticSpecimensIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Alcoholic Beverages  Shippers account needs to have a valid contract for Alcohol.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    AlcoholicBeveragesIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Perishable items.  Shippers account needs to have a valid contract for Perishables.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    PerishablesIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Plants  Shippers account needs to have a valid contract for Plants.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    PlantsIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Seeds.  Shippers account needs to have a valid contract for Seeds.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    SeedsIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Special Exception items.  Shippers account needs to have a valid contract for Special Exceptions.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    SpecialExceptionsIndicator?: string;
    /**
     * Presence/Absence Indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the package contains Tobacco  Shippers account needs to have a valid contract for Tobacco.
     * @type {string}
     * @memberof ShipmentServiceOptionsRestrictedArticles
     */
    TobaccoIndicator?: string;
}
/**
 * The flag indicates the ReturnOfDocument accessorial has been requested.  Valid for Poland to Poland forward shipment only.
 * @export
 */
export type ShipmentServiceOptionsReturnOfDocumentIndicator = string;
/**
 * The presence of the tag SDLShipmentIndicator indicates Shipment is SDL. SDLShipmentIndicator presence means EEI form/ EEI Filing option required.
 * @export
 */
export type ShipmentServiceOptionsSDLShipmentIndicator = string;
/**
 * Saturday delivery indicator. The presence indicates Saturday delivery is requested and the absence indicates Saturday delivery is not requested.  This is an empty tag, any value inside is ignored.
 * @export
 */
export type ShipmentServiceOptionsSaturdayDeliveryIndicator = string;
/**
 * Saturday pickup indicator. The presence indicates Saturday pickup is requested and the absence indicates Saturday pickup is not requested.  This is an empty tag, any value inside is ignored.
 * @export
 */
export type ShipmentServiceOptionsSaturdayPickupIndicator = string;
/**
 * UPS carbon neutral indicator presence at shipment level is required to create carbon neutral Shipments.
 * @export
 */
export type ShipmentServiceOptionsUPScarbonneutralIndicator = string;
/**
 * Ship From Container.  Required for return shipment.   Required if pickup location is different from the shipper�s address.
 * @export
 * @interface ShipmentShipFrom
 */
export interface ShipmentShipFrom {
    /**
     * The ship from location�s name or company name.  35 characters are accepted, but for return Shipment only 30 characters will be printed on the label.  Required if ShipFrom tag is in the XML.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    Name: string;
    /**
     * The ship from Attention name.  35 characters are accepted, but for return Shipment only 30 characters will be printed on the label.  Required if ShipFrom tag is in the XML and Invoice or CO International forms is requested. If not present, will default to the Shipper Attention Name.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    AttentionName?: string;
    /**
     * Not applicable for ShipFrom.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    CompanyDisplayableName?: string;
    /**
     * Company�s Tax Identification Number at the pick up location.  Conditionally required if EEI form (International forms) is requested.  Applies to EEI Form only.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    TaxIdentificationNumber?: string;
    /**
     *
     * @type {ShipFromTaxIDType}
     * @memberof ShipmentShipFrom
     */
    TaxIDType?: ShipFromTaxIDType;
    /**
     *
     * @type {ShipFromPhone}
     * @memberof ShipmentShipFrom
     */
    Phone?: ShipFromPhone;
    /**
     * The Ship from fax number.  If Ship from country or territory is US 10 digits allowed, otherwise 1-15 digits allowed.
     * @type {string}
     * @memberof ShipmentShipFrom
     */
    FaxNumber?: string;
    /**
     *
     * @type {ShipFromAddress}
     * @memberof ShipmentShipFrom
     */
    Address: ShipFromAddress;
    /**
     *
     * @type {ShipFromVendorInfo}
     * @memberof ShipmentShipFrom
     */
    VendorInfo?: ShipFromVendorInfo;
}
/**
 * Ship To Container.
 * @export
 * @interface ShipmentShipTo
 */
export interface ShipmentShipTo {
    /**
     * Consignee�s company name.  All other accounts must be either a daily pickup account or an occasional account.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    Name: string;
    /**
     * Contact name at the consignee�s location.  Required for: UPS Next Day Air� Early service, and when ShipTo country or territory is different than ShipFrom country or territory.   Required if Invoice International form is requested.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    AttentionName?: string;
    /**
     * Not applicable for ShipTo
     * @type {string}
     * @memberof ShipmentShipTo
     */
    CompanyDisplayableName?: string;
    /**
     * Consignee�s tax identification number.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    TaxIdentificationNumber?: string;
    /**
     *
     * @type {ShipToPhone}
     * @memberof ShipmentShipTo
     */
    Phone?: ShipToPhone;
    /**
     * Consignee�s fax number.  If ShipTo country or territory is US 10 digits allowed, otherwise 1-15 digits allowed.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    FaxNumber?: string;
    /**
     * Consignee�s email address.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    EMailAddress?: string;
    /**
     *
     * @type {ShipToAddress}
     * @memberof ShipmentShipTo
     */
    Address: ShipToAddress;
    /**
     * Location ID is a unique identifier referring to a specific shipping/receiving location.  Location ID must be alphanumeric characters. All letters must be capitalized.
     * @type {string}
     * @memberof ShipmentShipTo
     */
    LocationID?: string;
}
/**
 * Container for Shipment Indication Type.  Required to indicate whether shipment is \"Hold For Pickup At UPS Access Point\" for use by approved shippers to identify a UPS Access Point location as an alternate delivery option during shipment preparation or \"UPS Access Point� Delivery�, ship parcels directly to a UPS Access Point location for collection by the receiver.
 * @export
 * @interface ShipmentShipmentIndicationType
 */
export interface ShipmentShipmentIndicationType {
    /**
     * Valid values:  '01' - Hold for Pickup at UPS Access Point aka Direct to Retail (D2R) '02' - UPS Access Point� Delivery aka Retail to Retail (R2R)  If '01' code is present indicates shipment will be send to Retail location where it is held to consignee to claim.
     * @type {string}
     * @memberof ShipmentShipmentIndicationType
     */
    Code: string;
    /**
     * Description for the code.
     * @type {string}
     * @memberof ShipmentShipmentIndicationType
     */
    Description?: string;
}
/**
 * ShipmentRatingOptions container.
 * @export
 * @interface ShipmentShipmentRatingOptions
 */
export interface ShipmentShipmentRatingOptions {
    /**
     * Negotiated Rates option indicator. If the indicator is present and the Shipper is authorized then Negotiated Rates should be returned in the response.  Negotiated Rates are of two types Account Based Rates (ABR) and Web Discount Rates. Negotiated Rates are only returned for qualified Shipper Account Numbers.   Eligibility is determined using the combination of UserId and the Shipper�s Shipper Account Number. If the user is qualified, both Published rates and Negotiated rates are returned to the user. If the UserId and Shipper Account   Number are not qualified for Negotiated rates, a warning message is returned that indicates ineligibility and only the Published rates are returned in the response. As per discount eligibility of user, negotiated rates in the response may contain ABR or Web discount rates.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    NegotiatedRatesIndicator?: string;
    /**
     * Ground Freight Pricing Rates option indicator. If the Ground Freight Pricing Shipment indicator is enabled and Shipper number is authorized then Ground Freight Pricing�rates should be returned in the response.  The Shipper account number must be qualified to receive Ground Freight Pricing Density Based Shipment rates. Only the Shipper account number taken from /ShipmentRequest/Shipment/FRSPaymentInformation/AccountNumber is used when checking qualification for Ground Freight Pricing Density Based rates.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    FRSShipmentIndicator?: string;
    /**
     * RateChartIndicator, if present in request, response will contain RateChart element.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    RateChartIndicator?: string;
    /**
     * This indicator applies for a third party (3P) / Freight collect (FC) shipment only.   For 3P/FC shipment if the shipper wishes to request for the negotiated rates of the third party then this indicator should be included in the request.   If authorized the 3P/FC negotiated rates will be applied to the shipment and rates will be returned in response.
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    TPFCNegotiatedRatesIndicator?: string;
    /**
     * If this indicator is present user level discount will be applied to rates if applicable  Conditions checked: This indicator should be present Shipper number should not be present User should be eligible for user level discount
     * @type {string}
     * @memberof ShipmentShipmentRatingOptions
     */
    UserLevelDiscountIndicator?: string;
}
/**
 * Container for Shipment Service Options.
 * @export
 * @interface ShipmentShipmentServiceOptions
 */
export interface ShipmentShipmentServiceOptions {
    /**
     * Saturday delivery indicator. The presence indicates Saturday delivery is requested and the absence indicates Saturday delivery is not requested.  This is an empty tag, any value inside is ignored.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SaturdayDeliveryIndicator?: string;
    /**
     * Saturday pickup indicator. The presence indicates Saturday pickup is requested and the absence indicates Saturday pickup is not requested.  This is an empty tag, any value inside is ignored.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SaturdayPickupIndicator?: string;
    /**
     *
     * @type {ShipmentServiceOptionsCOD}
     * @memberof ShipmentShipmentServiceOptions
     */
    COD?: ShipmentServiceOptionsCOD;
    /**
     *
     * @type {ShipmentServiceOptionsAccessPointCOD}
     * @memberof ShipmentShipmentServiceOptions
     */
    AccessPointCOD?: ShipmentServiceOptionsAccessPointCOD;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \"Hold For PickUp at UPS Access Point\" package.� Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \"01 - Hold For PickUp at UPS Access Point\".
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    DeliverToAddresseeOnlyIndicator?: string;
    /**
     * Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the ship to address on the shipping label.  This accessorial is not valid with Shipment Indication Type \"01 - Hold For Pickup At UPS Access Point\" and \"02 - UPS Access Point� Delivery\".
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    DirectDeliveryOnlyIndicator?: string;
    /**
     *
     * @type {Array<ShipmentServiceOptionsNotification>}
     * @memberof ShipmentShipmentServiceOptions
     */
    Notification?: Array<ShipmentServiceOptionsNotification>;
    /**
     *
     * @type {ShipmentServiceOptionsLabelDelivery}
     * @memberof ShipmentShipmentServiceOptions
     */
    LabelDelivery?: ShipmentServiceOptionsLabelDelivery;
    /**
     *
     * @type {ShipmentServiceOptionsInternationalForms}
     * @memberof ShipmentShipmentServiceOptions
     */
    InternationalForms?: ShipmentServiceOptionsInternationalForms;
    /**
     *
     * @type {ShipmentServiceOptionsDeliveryConfirmation}
     * @memberof ShipmentShipmentServiceOptions
     */
    DeliveryConfirmation?: ShipmentServiceOptionsDeliveryConfirmation;
    /**
     * The flag indicates the ReturnOfDocument accessorial has been requested.  Valid for Poland to Poland forward shipment only.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ReturnOfDocumentIndicator?: string;
    /**
     * Indicates that the Shipment is an ImportControl shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ImportControlIndicator?: string;
    /**
     *
     * @type {ShipmentServiceOptionsLabelMethod}
     * @memberof ShipmentShipmentServiceOptions
     */
    LabelMethod?: ShipmentServiceOptionsLabelMethod;
    /**
     * CommercialInvoiceRemovalIndicator allows a shipper to dictate UPS to remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    CommercialInvoiceRemovalIndicator?: string;
    /**
     * UPS carbon neutral indicator presence at shipment level is required to create carbon neutral Shipments.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    UPScarbonneutralIndicator?: string;
    /**
     *
     * @type {Array<ShipmentServiceOptionsPreAlertNotification>}
     * @memberof ShipmentShipmentServiceOptions
     */
    PreAlertNotification?: Array<ShipmentServiceOptionsPreAlertNotification>;
    /**
     * Exchange forward indicator presence at shipment level is required to create exchange forward Shipments.  In the label routing Instruction text will be defaulted to \"EXCHANGE-LIKE ITEM ONLY\".
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ExchangeForwardIndicator?: string;
    /**
     * Hold For Pickup indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    HoldForPickupIndicator?: string;
    /**
     * Drop off At UPS Facility indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    DropoffAtUPSFacilityIndicator?: string;
    /**
     * Lift Gate For Pick Up indicator. The empty tag means indicator is present.  Lift Gate for Pickup is not allowed with Drop Off At UPS Facility for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   When both Hold for Pickup and Drop Off At Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    LiftGateForPickUpIndicator?: string;
    /**
     * Lift Gate For Delivery indicator. The empty tag means indicator is present.  Lift Gate for Delivery is not allowed with Hold For Pickup for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   When both Hold for Pickup and Drop Off At UPS Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.   This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    LiftGateForDeliveryIndicator?: string;
    /**
     * The presence of the tag SDLShipmentIndicator indicates Shipment is SDL. SDLShipmentIndicator presence means EEI form/ EEI Filing option required.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    SDLShipmentIndicator?: string;
    /**
     * Package Release code allows the consignee or claimant to pick-up a package at a UPS Access Point�.� The shipper must provide the Package Release Code to the consignee so that they can provide the code to the UPS Access Point personnel as another item for authentication before the package is released to them. Package Release Code is only valid with ShipmentIndicationType�01 - Hold for Pickup at UPS Access Point�.  The release code must be between length 4 and 6 and only contain numbers.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    EPRAReleaseCode?: string;
    /**
     *
     * @type {ShipmentServiceOptionsRestrictedArticles}
     * @memberof ShipmentShipmentServiceOptions
     */
    RestrictedArticles?: ShipmentServiceOptionsRestrictedArticles;
    /**
     * Inside delivery accessory. Valid values: 01 - White Glove 02 - Room of Choice 03 - Installation Default is Room of Choice.  Shippers account needs to have a valid contract for Heavy Goods Service.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    InsideDelivery?: string;
    /**
     * Presence/Absence indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the customer would like items disposed.  Shippers account needs to have a valid contract for Heavy Goods Service.
     * @type {string}
     * @memberof ShipmentShipmentServiceOptions
     */
    ItemDisposal?: string;
}
/**
 * Shipment Value Threshold Code.                                                      01 = Shipment value is below or equals to threshold value 02 = Shipment value is above threshold value.     NA = Not Applicable
 * @export
 */
export type ShipmentShipmentValueThresholdCode = string;
/**
 * Container for the Shipper�s information.
 * @export
 * @interface ShipmentShipper
 */
export interface ShipmentShipper {
    /**
     * Shippers company name.   For forward Shipment 35 characters are accepted, but only 30 characters will be printed on the label.
     * @type {string}
     * @memberof ShipmentShipper
     */
    Name: string;
    /**
     * Shippers Attention Name.   For forward Shipment 35 characters are accepted, but only 30 characters will be printed on the label.  Required if destination is international. Required if Invoice and CO International forms are requested and the ShipFrom address is not present.
     * @type {string}
     * @memberof ShipmentShipper
     */
    AttentionName?: string;
    /**
     * Shipper's CompanyDisplayableName.  The CompanyDisplayableName will be displayed in tracking results and notification messages in place of the name associated with the shipper account.  The original shipper account name will be displayed for all Return Services and Import Control Shipments.  This is available for Shipper accounts enabled by UPS and applies to Forward Shipments.
     * @type {string}
     * @memberof ShipmentShipper
     */
    CompanyDisplayableName?: string;
    /**
     * Shipper�s Tax Identification Number.  Conditionally required if EEI form (International forms) is requested and ship From is not mentioned.
     * @type {string}
     * @memberof ShipmentShipper
     */
    TaxIdentificationNumber?: string;
    /**
     *
     * @type {ShipperPhone}
     * @memberof ShipmentShipper
     */
    Phone?: ShipperPhone;
    /**
     * Shipper�s six digit alphanumeric account number.  Must be associated with the UserId specified in the AccessRequest XML.   The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account.   Drop Shipper accounts are valid for return service shipments only if the account is Trade Direct (TD) enabled.   All other accounts must be either a daily pickup account or an occasional account.
     * @type {string}
     * @memberof ShipmentShipper
     */
    ShipperNumber: string;
    /**
     * Shipper�s Fax Number.
     * @type {string}
     * @memberof ShipmentShipper
     */
    FaxNumber?: string;
    /**
     * Shipper�s email address.  Must be associated with the UserId specified in the AccessRequest XML.
     * @type {string}
     * @memberof ShipmentShipper
     */
    EMailAddress?: string;
    /**
     *
     * @type {ShipperAddress}
     * @memberof ShipmentShipper
     */
    Address: ShipperAddress;
}
/**
 * A component encoded on the barcode of the Mail Innovations label.   Valid values:  IR = Irregular MA = Machineable SubClass is only required if the customer�s contract have them subclass the package not UPS.
 * @export
 */
export type ShipmentSubClassification = string;
/**
 * Presence/Absence Indicator. Any value inside is ignored. TaxInformationIndicator is an indicator. If present, any taxes that may be applicable to a shipment would be returned in response. If this indicator is requested with NegotiatedRatesIndicator, Tax related information, if applicable, would be returned only for Negotiated Rates and not for Published Rates. The Tax related information includes any type of Taxes, corresponding Monetary Values, Total Charges with Taxes and disclaimers (if applicable) would be returned in response.
 * @export
 */
export type ShipmentTaxInformationIndicator = string;
/**
 * USPS Endorsement. Valid values:  1 = Return Service Requested  2 = Forwarding Service Requested  3 = Address Service Requested  4 = Change Service Requested and  5 = No Service Selected.  Note: For International Mail Innovations shipments use No Service Selected. International Mail Innovations shipments are applicable for Priority Mail Innovations and Mail Innovations Economy Mail Innovations services only.  Required for Mail Innovations forward shipments.
 * @export
 */
export type ShipmentUSPSEndorsement = string;
/**
 * Address tag Container.  The package should be returned to this address if the package is undeliverable.�   This address appears on the upper left hand corner of the label.  Note: If the ShipFrom container is not present then this address will be used as the ShipFrom address.�  If this address is used as the ShipFrom the shipment will be rated from this origin address.
 * @export
 * @interface ShipperAddress
 */
export interface ShipperAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof ShipperAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof ShipperAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof ShipperAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof ShipperAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof ShipperAddress
     */
    CountryCode: string;
}
/**
 * Shippers Attention Name.   For forward Shipment 35 characters are accepted, but only 30 characters will be printed on the label.  Required if destination is international. Required if Invoice and CO International forms are requested and the ShipFrom address is not present.
 * @export
 */
export type ShipperAttentionName = string;
/**
 * Shipper's CompanyDisplayableName.  The CompanyDisplayableName will be displayed in tracking results and notification messages in place of the name associated with the shipper account.  The original shipper account name will be displayed for all Return Services and Import Control Shipments.  This is available for Shipper accounts enabled by UPS and applies to Forward Shipments.
 * @export
 */
export type ShipperCompanyDisplayableName = string;
/**
 * Shipper�s email address.  Must be associated with the UserId specified in the AccessRequest XML.
 * @export
 */
export type ShipperEMailAddress = string;
/**
 * Shipper�s Fax Number.
 * @export
 */
export type ShipperFaxNumber = string;
/**
 * Indicates the EEI Shipper sub option.  Applicable for EEI form and is required. Valid value is: A- requires the ITN; B- requires the Exemption Legend; C- requires the post departure filing citation.
 * @export
 */
export type ShipperFiledCode = string;
/**
 * Description of ShipperFiled Code.  Applicable for EEI form.
 * @export
 */
export type ShipperFiledDescription = string;
/**
 * Shipment Reference Number for use during interaction with AES. Valid for EEI form for Shipper Filed option 'C' and AES Direct Filed.
 * @export
 */
export type ShipperFiledEEIShipmentReferenceNumber = string;
/**
 * Input for Shipper Filed option B. 30.2(d)(2), 30.26(a), 30.36, 30.37(a), 30.37(b), 30.37(c), 30.37(d), 30.37(e), 30.37(f), 30.37(h), 30.37(i), 30.30(j), 30.37(k), 30.37(i), 30.37(j), 30.37(k), 30.37(l), 30.37(m), 30.37(n), 30.37(o), 30.37(p), 30.37(q), 30.37(r), 30.37(s), 30.37(t), 30.37(u), 30.37(x), 30.37(y)(1), 30.37(y)(2), 30.37(y)(3), 30.37(y)(4), 30.37(y)(5), 30.37(y)(6), 30.39, 30.40(a), 30.40(b), 30.40(c), 30.40(d), 30.8(b)  Valid and Required for Shipper Filed option B. EEI form only.
 * @export
 */
export type ShipperFiledExemptionLegend = string;
/**
 * Input for Shipper Filed option A and AES Direct. The format is available from AESDirect website.  Valid and Required for Shipper Filed option A. EEI form only.
 * @export
 */
export type ShipperFiledPreDepartureITNNumber = string;
/**
 * Shippers company name.   For forward Shipment 35 characters are accepted, but only 30 characters will be printed on the label.
 * @export
 */
export type ShipperName = string;
/**
 * Container tag for Phone Number.
 * @export
 * @interface ShipperPhone
 */
export interface ShipperPhone {
    /**
     * Sold To contacts phone number.
     * @type {string}
     * @memberof ShipperPhone
     */
    Number: string;
    /**
     * Sold To contacts phone extension.
     * @type {string}
     * @memberof ShipperPhone
     */
    Extension?: string;
}
/**
 * Shipper�s six digit alphanumeric account number.  Must be associated with the UserId specified in the AccessRequest XML.   The account must be a valid UPS account number that is active.   For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account.   Drop Shipper accounts are valid for return service shipments only if the account is Trade Direct (TD) enabled.   All other accounts must be either a daily pickup account or an occasional account.
 * @export
 */
export type ShipperShipperNumber = string;
/**
 * Shipper�s Tax Identification Number.  Conditionally required if EEI form (International forms) is requested and ship From is not mentioned.
 * @export
 */
export type ShipperTaxIdentificationNumber = string;
/**
 * Base 64 encoded graphic image.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ShippingLabelGraphicImage = string;
/**
 * Base 64 encoded graphic image.  Applicable only for ShipmentResponse and ShipAcceptResponse for Mail Innovations CN22 Combination Forward Label with more than 3 commodities.
 * @export
 */
export type ShippingLabelGraphicImagePart = string;
/**
 * Base 64 encoded html browser image rendering software. This is only returned for gif and png image formats.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ShippingLabelHTMLImage = string;
/**
 * The container image format.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ShippingLabelImageFormat
 */
export interface ShippingLabelImageFormat {
    /**
     * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
     * @type {string}
     * @memberof ShippingLabelImageFormat
     */
    Code: string;
    /**
     * Description of the image format.
     * @type {string}
     * @memberof ShippingLabelImageFormat
     */
    Description?: string;
}
/**
 * Base 64 encoded graphic image of the Warsaw text and signature box. EPL2, ZPL and SPL labels. The image will be returned for non-US based shipments. One image will be given per shipment and it will be in the first PackageResults container.   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ShippingLabelInternationalSignatureGraphicImage = string;
/**
 * PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular. The image is Base 64 encoded and returned if the LabelImageFormat code is GIF.� Shipment with PRL return service only.�   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 */
export type ShippingLabelPDF417 = string;
/**
 * Base 64 encoded receipt in HTML format.�    Applicable only for ShipmentResponse and ShipAcceptResponse.  The receipt image is only returned for the first 5 packages.
 * @export
 */
export type ShippingReceiptGraphicImage = string;
/**
 * Container for a Image Format.�   Applicable only for ShipmentResponse and ShipAcceptResponse.
 * @export
 * @interface ShippingReceiptImageFormat
 */
export interface ShippingReceiptImageFormat {
    /**
     * Code representing the format in which the High Value Report is generated.   Valid values: PDF = pdf
     * @type {string}
     * @memberof ShippingReceiptImageFormat
     */
    Code: string;
    /**
     * Description of the image format.
     * @type {string}
     * @memberof ShippingReceiptImageFormat
     */
    Description?: string;
}
/**
 * Sold To Address Container.  Applies to NAFTA CO.
 * @export
 * @interface SoldToAddress
 */
export interface SoldToAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof SoldToAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof SoldToAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof SoldToAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s town code.
     * @type {string}
     * @memberof SoldToAddress
     */
    Town?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof SoldToAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof SoldToAddress
     */
    CountryCode: string;
}
/**
 * Sold to contact name.
 * @export
 */
export type SoldToAttentionName = string;
/**
 * SoldTo email address.
 * @export
 */
export type SoldToEMailAddress = string;
/**
 * Company Name.
 * @export
 */
export type SoldToName = string;
/**
 * The text associated with the code will be printed in the sold to section of the NAFTA CO form.  The values indicate the following: 01 � Unknown.  Applies to NAFTA CO form. Possible Values are 01 and 02.
 * @export
 */
export type SoldToOption = string;
/**
 * Phone Container.
 * @export
 * @interface SoldToPhone
 */
export interface SoldToPhone {
    /**
     * Sold To contacts phone number.
     * @type {string}
     * @memberof SoldToPhone
     */
    Number: string;
    /**
     * Sold To contacts phone extension.
     * @type {string}
     * @memberof SoldToPhone
     */
    Extension?: string;
}
/**
 * SoldTo Tax Identification Number.
 * @export
 */
export type SoldToTaxIdentificationNumber = string;
/**
 * The Package Level void status code.  A numeric value that describes the status code. 1 = Voided or Already Voided;  0 = Not Voided
 * @export
 */
export type StatusCode = string;
/**
 * A text description of the status code.
 * @export
 */
export type StatusDescription = string;
/**
 * Container for the status of the Summary Result
 * @export
 * @interface SummaryResultStatus
 */
export interface SummaryResultStatus {
    /**
     * The Package Level void status code.  A numeric value that describes the status code. 1 = Voided or Already Voided;  0 = Not Voided
     * @type {string}
     * @memberof SummaryResultStatus
     */
    Code: string;
    /**
     * A text description of the status code.
     * @type {string}
     * @memberof SummaryResultStatus
     */
    Description: string;
}
/**
 * Tax Monetary Value represent the Tax amount.  Valid values are from 0 to 99999999999999.99
 * @export
 */
export type TaxChargesMonetaryValue = string;
/**
 * Tax Type code. The code represents the type of Tax applied to a shipment.   Refer to Tax Type Values/Abbreviations in the Appendix for valid values.
 * @export
 */
export type TaxChargesType = string;
/**
 * Company's tax Identification type.  Valid values: EIN, DNS, and FGN.  Applies to EEI form only.
 * @export
 */
export type TaxIDTypeCode = string;
/**
 * Description of TaxID submitted.  Applies to EEI form only.
 * @export
 */
export type TaxIDTypeDescription = string;
/**
 * Phone number for receiving Text PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
 * @export
 */
export type TextMessagePhoneNumber = string;
/**
 * Total charges currency code.
 * @export
 */
export type TotalChargeCurrencyCode = string;
/**
 * Total charges monetary value.  Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type TotalChargeMonetaryValue = string;
/**
 * Total charges currency code type. The currency code used in the Shipment request is returned.
 * @export
 */
export type TotalChargesCurrencyCode = string;
/**
 * Total charges value amount.  Valid values are from 0 to 99999999999999.99.
 * @export
 */
export type TotalChargesMonetaryValue = string;
/**
 * TotalChargesWithTaxes currency code type.� The currency code used in the Shipment request is returned.
 * @export
 */
export type TotalChargesWithTaxesCurrencyCode = string;
/**
 * TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 9999999999999999.99
 * @export
 */
export type TotalChargesWithTaxesMonetaryValue = string;
/**
 * Destination country or territory code candidate, like US = USA, CA = Canada  Must be valid ups country or territory code
 * @export
 */
export type TrackingCandidateDestinationCountryCode = string;
/**
 * Destination postal code candidate
 * @export
 */
export type TrackingCandidateDestinationPostalCode = string;
/**
 * A range of time the package was picked up.
 * @export
 * @interface TrackingCandidatePickupDateRange
 */
export interface TrackingCandidatePickupDateRange {
    /**
     * The beginning of the date range for the candidate. Format: YYYYMMDD  Service is only supported for 30 days
     * @type {string}
     * @memberof TrackingCandidatePickupDateRange
     */
    BeginDate: string;
    /**
     * The end of the date range for the candidate. Format: YYYYMMDD
     * @type {string}
     * @memberof TrackingCandidatePickupDateRange
     */
    EndDate: string;
}
/**
 * Packaging Tracking Number  Only supported for the web small package shipment so only supported 18 digit
 * @export
 */
export type TrackingCandidateTrackingNumber = string;
/**
 * The CustomerContext Information which will be echoed during response.
 * @export
 */
export type TransactionReferenceCustomerContext = string;
/**
 * The Unique TransactionIdentifier Information for that transaction. This will be present only if requested in the request.
 * @export
 */
export type TransactionReferenceTransactionIdentifier = string;
/**
 * Used to specify what will be translated.  Valid code:  01 = label direction instructions and receipt
 * @export
 */
export type TranslateCode = string;
/**
 * Valid dialect codes are:  CA - Canada GB - Great Britain US - United States 97  Not Applicable
 * @export
 */
export type TranslateDialectCode = string;
/**
 * The Language code. The language codes are three letter language codes.  Supported languages are:  eng - English  spa - Spanish  ita - Italian fra - French  deu - German  por -Portuguese  nld  Dutch dan - Danish  fin - Finnish  swe  Swedish  nor  Norwegian
 * @export
 */
export type TranslateLanguageCode = string;
/**
 * Transportation charges currency code type. The currency code used in the Shipment request is returned.
 * @export
 */
export type TransportationChargesCurrencyCode = string;
/**
 * Discount Amount container. It indicates the shipment level Ground Freight Pricing discount amount for transportation charges
 * @export
 * @interface TransportationChargesDiscountAmount
 */
export interface TransportationChargesDiscountAmount {
    /**
     * Discount Amount currency code.
     * @type {string}
     * @memberof TransportationChargesDiscountAmount
     */
    CurrencyCode: string;
    /**
     * Discount amount monetary value.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesDiscountAmount
     */
    MonetaryValue: string;
}
/**
 * It indicates the shipment level discount percentage for transportation charges.
 * @export
 */
export type TransportationChargesDiscountPercentage = string;
/**
 * Gross Charges container. It indicates the shipment level gross Ground Freight Pricing transportation charges.
 * @export
 * @interface TransportationChargesGrossCharge
 */
export interface TransportationChargesGrossCharge {
    /**
     * Gross charges currency code.
     * @type {string}
     * @memberof TransportationChargesGrossCharge
     */
    CurrencyCode: string;
    /**
     * Gross charges monetary value.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesGrossCharge
     */
    MonetaryValue: string;
}
/**
 * Transportation and surcharges value amount.  Valid values are from 0 to 99999999999999.99
 * @export
 */
export type TransportationChargesMonetaryValue = string;
/**
 * Net Charges container. It indicates the shipment level net Ground Freight Pricing transportation charges.
 * @export
 * @interface TransportationChargesNetCharge
 */
export interface TransportationChargesNetCharge {
    /**
     * Net Charge currency code.
     * @type {string}
     * @memberof TransportationChargesNetCharge
     */
    CurrencyCode: string;
    /**
     * Net charges monetary value.  Valid values are from 0 to 9999999999999999.99
     * @type {string}
     * @memberof TransportationChargesNetCharge
     */
    MonetaryValue: string;
}
/**
 * The code associated with Handling Unit Type.  Valid values: SKD = Skid CBY = Carboy  PLT = Pallet TOT = Totes  LOO = Loose OTH = Other
 * @export
 */
export type TypeCode = string;
/**
 * A description of the code for the Handling Unit type.
 * @export
 */
export type TypeDescription = string;
/**
 * Container for POA.  Applicable for EEI form.
 * @export
 * @interface UPSFiledPOA
 */
export interface UPSFiledPOA {
    /**
     * Indicates the EEI UPS Filed POA filing option.  Applicable for EEI form. Valid values are 1- One Time POA; 2- Blanket POA.
     * @type {string}
     * @memberof UPSFiledPOA
     */
    Code: string;
    /**
     * Description for POA Code.  Applicable for EEI form.
     * @type {string}
     * @memberof UPSFiledPOA
     */
    Description?: string;
}
/**
 * UPS Premier Category.  Valid values are 01,02,03                             UPS Premier Silver -01 UPS Premier Gold - 02 UPS Premier Platinum - 03
 * @export
 */
export type UPSPremierCategory = string;
/**
 * Handling Instruction Container.
 * @export
 * @interface UPSPremierHandlingInstructions
 */
export interface UPSPremierHandlingInstructions {
    /**
     * Handling Instruction for UPS Premier package.  Please refer Apendix UPS Premier Handling Instructions.
     * @type {string}
     * @memberof UPSPremierHandlingInstructions
     */
    Instruction: string;
}
/**
 * SensorID is RFID for UPS Premier Silver. SensorID is MeshID for UPS Premier Gold or UPS Premier Platinum Package.
 * @export
 */
export type UPSPremierSensorID = string;
/**
 * Container to hold languages in which UPS Premium Care Form is required.
 * @export
 * @interface UPSPremiumCareFormLanguageForUPSPremiumCare
 */
export interface UPSPremiumCareFormLanguageForUPSPremiumCare {
    /**
     * Languages for UPS Premium Care Form. Two languages are required for UPS Premium Care Form.   Valid values:  eng = US English fra = Canadian French
     * @type {string}
     * @memberof UPSPremiumCareFormLanguageForUPSPremiumCare
     */
    Language: string;
}
/**
 * Number of Copies of UPS Premium Care Form.  Valid value is 02.
 * @export
 */
export type UPSPremiumCareFormNumOfCopies = string;
/**
 * Size of UPS Premium Care Form.  Valid values:  01 = A4 Size 02 = Letter Size
 * @export
 */
export type UPSPremiumCareFormPageSize = string;
/**
 * Format of UPS Premium Care Form.  Valid values:  01 = PNG 02 = PDF
 * @export
 */
export type UPSPremiumCareFormPrintType = string;
/**
 * Shipment Date associated with UPS Premium Care Shipment.   Valid Format: yyyyMMdd
 * @export
 */
export type UPSPremiumCareFormShipmentDate = string;
/**
 * Address information of the Ultimate consignee.  Applicable for EEI form only.
 * @export
 * @interface UltimateConsigneeAddress
 */
export interface UltimateConsigneeAddress {
    /**
     * SoldTo location�s street address.  Applies to NAFTA CO.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    AddressLine: string;
    /**
     * SoldTo location�s city.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    City: string;
    /**
     * SoldTo location�s state or province code.  Required for certain countries or territories.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    StateProvinceCode?: string;
    /**
     * SoldTo location�s town code.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    Town?: string;
    /**
     * SoldTo location�s postal code.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    PostalCode?: string;
    /**
     * SoldTo location�s country or territory code.
     * @type {string}
     * @memberof UltimateConsigneeAddress
     */
    CountryCode: string;
}
/**
 * Company Name or the Individual name of the Ultimate consignee.  Applicable for EEI form only.
 * @export
 */
export type UltimateConsigneeCompanyName = string;
/**
 * Ultimate Consignee Type Code.   Applicable for EEI form only.  Valid values:   D =  Direct Consumer  G = Government Entity R = Reseller O = Other/Unknown
 * @export
 */
export type UltimateConsigneeTypeCode = string;
/**
 * Ultimate Consignee Type Description.  Applicable for EEI form only.
 * @export
 */
export type UltimateConsigneeTypeDescription = string;
/**
 * Container for providing UltimateConsignee Type.  Applicable for EEI form only.
 * @export
 * @interface UltimateConsigneeUltimateConsigneeType
 */
export interface UltimateConsigneeUltimateConsigneeType {
    /**
     * Ultimate Consignee Type Code.   Applicable for EEI form only.  Valid values:   D =  Direct Consumer  G = Government Entity R = Reseller O = Other/Unknown
     * @type {string}
     * @memberof UltimateConsigneeUltimateConsigneeType
     */
    Code: string;
    /**
     * Ultimate Consignee Type Description.  Applicable for EEI form only.
     * @type {string}
     * @memberof UltimateConsigneeUltimateConsigneeType
     */
    Description?: string;
}
/**
 * Total quantity of each commodity to be shipped, measured in the units specified in the Unit of Measure field.  Required for Invoice forms and optional for Partial Invoice. Must be numeric. Valid characters are 0-9.
 * @export
 */
export type UnitNumber = string;
/**
 * Code of the billing weight measurement units. Values are: KGS or LBS.
 * @export
 */
export type UnitOfMeasurementCode = string;
/**
 * Description of the billing weight measurement units.
 * @export
 */
export type UnitOfMeasurementDescription = string;
/**
 * Container tag for the Unit of measurement for the commodity.  Required for Invoice forms and optional for Partial Invoice.
 * @export
 * @interface UnitUnitOfMeasurement
 */
export interface UnitUnitOfMeasurement {
    /**
     * Code of the billing weight measurement units. Values are: KGS or LBS.
     * @type {string}
     * @memberof UnitUnitOfMeasurement
     */
    Code: string;
    /**
     * Description of the billing weight measurement units.
     * @type {string}
     * @memberof UnitUnitOfMeasurement
     */
    Description?: string;
}
/**
 * Monetary amount used to specify the worth or price of the commodity. Amount should be greater than zero.  Applies to Invoice and Partial Invoice form. Required for Invoice forms and optional for Partial Invoice. Amount should be greater than zero.  Valid characters are 0-9 and. (Decimal point). Limit to 6 digits after the decimal. The maximum length of the field is 19 including '.' and can hold up to 6 decimal places.(#####.######, ######.#####, #######.####, ########.###, #########.##,##########.#,############). The value of this product  and the other products should be such that the invoice line total which is the sum of ( number*values) of all products should not exceed 9999999999999999.99
 * @export
 */
export type UnitValue = string;
/**
 * DocumentID represents a document uploaded to Forms History.
 * @export
 */
export type UserCreatedFormDocumentID = string;
/**
 * N/A
 * @export
 * @interface VOIDSHIPMENTRequestWrapper
 */
export interface VOIDSHIPMENTRequestWrapper {
    /**
     *
     * @type {VoidShipmentRequest}
     * @memberof VOIDSHIPMENTRequestWrapper
     */
    VoidShipmentRequest: VoidShipmentRequest;
}
/**
 * N/A
 * @export
 * @interface VOIDSHIPMENTResponseWrapper
 */
export interface VOIDSHIPMENTResponseWrapper {
    /**
     *
     * @type {VoidShipmentResponse}
     * @memberof VOIDSHIPMENTResponseWrapper
     */
    VoidShipmentResponse: VoidShipmentResponse;
}
/**
 * Consignee Type.                                             01 = Business                                                 02 = Consumer                                                           NA = Not Applicable
 * @export
 */
export type VendorInfoConsigneeType = string;
/**
 * Shipper�s VAT Tax collection registration number to be entered by Shipper at time of shipment creation.   Presence of this number as part of the shipment information implies the shipper has collected/paid the required VAT tax (outside of UPS/UPS systems).  Vendor Colect ID Number will be printed on commercial invoice if present.                                   Sample Values:   �IMDEU1234567� (IOSS #),  �VOEC1234567� (VOEC #),  �GB1234567� (HMRC #)     Required if the shipment is subject to Vendor Collect ID collection
 * @export
 */
export type VendorInfoVendorCollectIDNumber = string;
/**
 * Code that identifies the type of Vendor Collect ID Number                                                                   Valid Values                                                                   0356 = IOSS                                                 0357 = VOEC                                                 0358 = HMRC                                                    Vendor Collect ID Number type code will be printed on commercial invoice if present.
 * @export
 */
export type VendorInfoVendorCollectIDTypeCode = string;
/**
 * Phone number for receiving Voice PreAlertNotification.  Valid values are 0 � 9.  If the country or territory of the message recipient is US, PR, CA, and VI, the layout is: 1, area code, 7 digit phone number or  1, area code, 7 digit phone number, 4 digit extension number.   For other countries or territories, the layout is country or territory code, area code, 7 digit number.
 * @export
 */
export type VoiceMessagePhoneNumber = string;
/**
 * TransactionReference identifies transactions between client and server.  N/A
 * @export
 * @interface VoidRequestTransactionReference
 */
export interface VoidRequestTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof VoidRequestTransactionReference
     */
    CustomerContext?: string;
    /**
     * The Unique TransactionIdentifier Information for that transaction. This will be present only if requested in the request.
     * @type {string}
     * @memberof VoidRequestTransactionReference
     */
    TransactionIdentifier?: string;
}
/**
 * Response Status Container.
 * @export
 * @interface VoidResponseResponseStatus
 */
export interface VoidResponseResponseStatus {
    /**
     * Identifies the success or failure of the transaction. 1 = Successful
     * @type {string}
     * @memberof VoidResponseResponseStatus
     */
    Code: string;
    /**
     * Describes Response Status Code. Returns text of Success
     * @type {string}
     * @memberof VoidResponseResponseStatus
     */
    Description: string;
}
/**
 * Transaction Reference Container.
 * @export
 * @interface VoidResponseTransactionReference
 */
export interface VoidResponseTransactionReference {
    /**
     * The CustomerContext Information which will be echoed during response.
     * @type {string}
     * @memberof VoidResponseTransactionReference
     */
    CustomerContext?: string;
    /**
     * The Unique TransactionIdentifier Information for that transaction. This will be present only if requested in the request.
     * @type {string}
     * @memberof VoidResponseTransactionReference
     */
    TransactionIdentifier?: string;
}
/**
 * Void Shipment Request Container
 * @export
 * @interface VoidShipmentRequest
 */
export interface VoidShipmentRequest {
    /**
     *
     * @type {VoidShipmentRequestRequest}
     * @memberof VoidShipmentRequest
     */
    Request: VoidShipmentRequestRequest;
    /**
     *
     * @type {VoidShipmentRequestVoidShipment}
     * @memberof VoidShipmentRequest
     */
    VoidShipment: VoidShipmentRequestVoidShipment;
}
/**
 * Request Container  N/A
 * @export
 * @interface VoidShipmentRequestRequest
 */
export interface VoidShipmentRequestRequest {
    /**
     * Optional processing. No options  Not used. Left for future uses
     * @type {string}
     * @memberof VoidShipmentRequestRequest
     */
    RequestOption?: string;
    /**
     *
     * @type {VoidRequestTransactionReference}
     * @memberof VoidShipmentRequestRequest
     */
    TransactionReference?: VoidRequestTransactionReference;
}
/**
 * The container for the Ship Void Request.  N/A
 * @export
 * @interface VoidShipmentRequestVoidShipment
 */
export interface VoidShipmentRequestVoidShipment {
    /**
     * Unique key to tag shipments in shipping history. It could be MyUPS registration Number or any unique identifier.
     * @type {string}
     * @memberof VoidShipmentRequestVoidShipment
     */
    ShippingHistoryUserKey?: string;
    /**
     * The shipment's identification number  Alpha-numeric. Must pass 1Z rules. Must be upper case.
     * @type {string}
     * @memberof VoidShipmentRequestVoidShipment
     */
    ShipmentIdentificationNumber: string;
    /**
     * The package's identification number  Alpha-numeric. Must pass 1Z rules. Must be upper case
     * @type {Array<string>}
     * @memberof VoidShipmentRequestVoidShipment
     */
    TrackingNumber?: Array<string>;
}
/**
 * Void Response Container.
 * @export
 * @interface VoidShipmentResponse
 */
export interface VoidShipmentResponse {
    /**
     *
     * @type {VoidShipmentResponseResponse}
     * @memberof VoidShipmentResponse
     */
    Response: VoidShipmentResponseResponse;
    /**
     *
     * @type {VoidShipmentResponseSummaryResult}
     * @memberof VoidShipmentResponse
     */
    SummaryResult: VoidShipmentResponseSummaryResult;
    /**
     *
     * @type {Array<VoidShipmentResponsePackageLevelResult>}
     * @memberof VoidShipmentResponse
     */
    PackageLevelResult?: Array<VoidShipmentResponsePackageLevelResult>;
}
/**
 * Contains the Package Level Results
 * @export
 * @interface VoidShipmentResponsePackageLevelResult
 */
export interface VoidShipmentResponsePackageLevelResult {
    /**
     * The package's identification number
     * @type {string}
     * @memberof VoidShipmentResponsePackageLevelResult
     */
    TrackingNumber: string;
    /**
     *
     * @type {PackageLevelResultStatus}
     * @memberof VoidShipmentResponsePackageLevelResult
     */
    Status: PackageLevelResultStatus;
}
/**
 * Response Container.
 * @export
 * @interface VoidShipmentResponseResponse
 */
export interface VoidShipmentResponseResponse {
    /**
     *
     * @type {VoidResponseResponseStatus}
     * @memberof VoidShipmentResponseResponse
     */
    ResponseStatus: VoidResponseResponseStatus;
    /**
     *
     * @type {ResponseAlert}
     * @memberof VoidShipmentResponseResponse
     */
    Alert?: ResponseAlert;
    /**
     *
     * @type {VoidResponseTransactionReference}
     * @memberof VoidShipmentResponseResponse
     */
    TransactionReference?: VoidResponseTransactionReference;
}
/**
 * Container for the Summary Result
 * @export
 * @interface VoidShipmentResponseSummaryResult
 */
export interface VoidShipmentResponseSummaryResult {
    /**
     *
     * @type {SummaryResultStatus}
     * @memberof VoidShipmentResponseSummaryResult
     */
    Status: SummaryResultStatus;
}
/**
 * The shipment's identification number  Alpha-numeric. Must pass 1Z rules. Must be upper case.
 * @export
 */
export type VoidShipmentShipmentIdentificationNumber = string;
/**
 * Unique key to tag shipments in shipping history. It could be MyUPS registration Number or any unique identifier.
 * @export
 */
export type VoidShipmentShippingHistoryUserKey = string;
/**
 * The package's identification number  Alpha-numeric. Must pass 1Z rules. Must be upper case
 * @export
 */
export type VoidShipmentTrackingNumber = string;
/**
 * DefaultApi - fetch parameter creator
 * @export
 */
export const DefaultApiFetchParamCreator = function (
    configuration?: Configuration
) {
    return {
        /**
         * Label Recovery
         * @summary The Label Shipping API allows us to retrieve forward and return labels.
         * @param {LABELRECOVERYRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version When UPS introduces new elements in the  response that are not associated with new  request elements, Subversion is used. This  ensures backward compatibility.  v1  original features of the application. No  support for CODTurn-inPage, HighValueReport  or InternationalForms features returned in the  response v1701  includes support for CODTurn-inPage  features returned in the response. V1903  Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        labelRecovery(
            body: LABELRECOVERYRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            options: any = {}
        ): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError(
                    "body",
                    "Required parameter body was null or undefined when calling labelRecovery."
                );
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError(
                    "version",
                    "Required parameter version was null or undefined when calling labelRecovery."
                );
            }
            const localVarPath = `/labels/{version}/recovery`.replace(
                `{${"version"}}`,
                encodeURIComponent(String(version))
            );
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign(
                { method: "POST" },
                options
            );
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue =
                    typeof configuration.accessToken === "function"
                        ? configuration.accessToken("oauth2", [])
                        : configuration.accessToken;
                localVarHeaderParameter["Authorization"] =
                    "Bearer " + localVarAccessTokenValue;
            }

            if (transId !== undefined && transId !== null) {
                localVarHeaderParameter["transId"] = String(transId);
            }

            if (transactionSrc !== undefined && transactionSrc !== null) {
                localVarHeaderParameter["transactionSrc"] =
                    String(transactionSrc);
            }

            localVarHeaderParameter["Content-Type"] = "application/json";

            localVarUrlObj.query = Object.assign(
                {},
                localVarUrlObj.query,
                localVarQueryParameter,
                options.query
            );
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign(
                {},
                localVarHeaderParameter,
                options.headers
            );
            const needsSerialization =
                <any>"LABELRECOVERYRequestWrapper" !== "string" ||
                localVarRequestOptions.headers["Content-Type"] ===
                    "application/json";
            localVarRequestOptions.body = needsSerialization
                ? JSON.stringify(body || {})
                : body || "";

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Shipping
         * @summary The Shipping API makes UPS shipping services available to client applications that communicate with UPS  using the Internet
         * @param {SHIPRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Ship API to display the new release features in  Rate API response based on Ship release. See the New  section for the latest Ship release. Supported values: v1, v1601, v1607, v1701, v1707, v1801, v1807, v2108, v2205 . Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionaladdressvalidation] Valid Values:  city &#x3D; validation will include city.Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        shipment(
            body: SHIPRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            additionaladdressvalidation?: string,
            options: any = {}
        ): FetchArgs {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError(
                    "body",
                    "Required parameter body was null or undefined when calling shipment."
                );
            }
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError(
                    "version",
                    "Required parameter version was null or undefined when calling shipment."
                );
            }
            const localVarPath = `/shipments/{version}/ship`.replace(
                `{${"version"}}`,
                encodeURIComponent(String(version))
            );
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign(
                { method: "POST" },
                options
            );
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue =
                    typeof configuration.accessToken === "function"
                        ? configuration.accessToken("oauth2", [])
                        : configuration.accessToken;
                localVarHeaderParameter["Authorization"] =
                    "Bearer " + localVarAccessTokenValue;
            }

            if (additionaladdressvalidation !== undefined) {
                localVarQueryParameter["additionaladdressvalidation"] =
                    additionaladdressvalidation;
            }

            if (transId !== undefined && transId !== null) {
                localVarHeaderParameter["transId"] = String(transId);
            }

            if (transactionSrc !== undefined && transactionSrc !== null) {
                localVarHeaderParameter["transactionSrc"] =
                    String(transactionSrc);
            }

            localVarHeaderParameter["Content-Type"] = "application/json";

            localVarUrlObj.query = Object.assign(
                {},
                localVarUrlObj.query,
                localVarQueryParameter,
                options.query
            );
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign(
                {},
                localVarHeaderParameter,
                options.headers
            );
            const needsSerialization =
                <any>"SHIPRequestWrapper" !== "string" ||
                localVarRequestOptions.headers["Content-Type"] ===
                    "application/json";
            localVarRequestOptions.body = needsSerialization
                ? JSON.stringify(body || {})
                : body || "";

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Void Shipment
         * @summary The Void Shipping API is used to cancel the previously scheduled shipment
         * @param {string} version API Version
         * @param {string} shipmentidentificationnumber The shipment&#x27;s identification number  Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [trackingnumber] The package&#x27;s tracking number. You may have  up to 20 different tracking numbers listed. If more than one tracking number, pass this  value as: trackingnumber&#x3D;  [\&quot;1ZISUS010330563105\&quot;,\&quot;1ZISUS01033056310 8\&quot;] with a coma separating each number. Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        voidShipment(
            version: string,
            shipmentidentificationnumber: string,
            transId?: string,
            transactionSrc?: string,
            trackingnumber?: string,
            options: any = {}
        ): FetchArgs {
            // verify required parameter 'version' is not null or undefined
            if (version === null || version === undefined) {
                throw new RequiredError(
                    "version",
                    "Required parameter version was null or undefined when calling voidShipment."
                );
            }
            // verify required parameter 'shipmentidentificationnumber' is not null or undefined
            if (
                shipmentidentificationnumber === null ||
                shipmentidentificationnumber === undefined
            ) {
                throw new RequiredError(
                    "shipmentidentificationnumber",
                    "Required parameter shipmentidentificationnumber was null or undefined when calling voidShipment."
                );
            }
            const localVarPath =
                `/shipments/{version}/void/cancel/{shipmentidentificationnumber}`
                    .replace(
                        `{${"version"}}`,
                        encodeURIComponent(String(version))
                    )
                    .replace(
                        `{${"shipmentidentificationnumber"}}`,
                        encodeURIComponent(String(shipmentidentificationnumber))
                    );
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign(
                { method: "DELETE" },
                options
            );
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            if (configuration && configuration.accessToken) {
                const localVarAccessTokenValue =
                    typeof configuration.accessToken === "function"
                        ? configuration.accessToken("oauth2", [])
                        : configuration.accessToken;
                localVarHeaderParameter["Authorization"] =
                    "Bearer " + localVarAccessTokenValue;
            }

            if (trackingnumber !== undefined) {
                localVarQueryParameter["trackingnumber"] = trackingnumber;
            }

            if (transId !== undefined && transId !== null) {
                localVarHeaderParameter["transId"] = String(transId);
            }

            if (transactionSrc !== undefined && transactionSrc !== null) {
                localVarHeaderParameter["transactionSrc"] =
                    String(transactionSrc);
            }

            localVarUrlObj.query = Object.assign(
                {},
                localVarUrlObj.query,
                localVarQueryParameter,
                options.query
            );
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign(
                {},
                localVarHeaderParameter,
                options.headers
            );

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    };
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function (configuration?: Configuration) {
    return {
        /**
         * Label Recovery
         * @summary The Label Shipping API allows us to retrieve forward and return labels.
         * @param {LABELRECOVERYRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version When UPS introduces new elements in the  response that are not associated with new  request elements, Subversion is used. This  ensures backward compatibility.  v1  original features of the application. No  support for CODTurn-inPage, HighValueReport  or InternationalForms features returned in the  response v1701  includes support for CODTurn-inPage  features returned in the response. V1903  Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        labelRecovery(
            body: LABELRECOVERYRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            options?: any
        ): (
            fetch?: FetchAPI,
            basePath?: string
        ) => Promise<LABELRECOVERYResponseWrapper> {
            const localVarFetchArgs = DefaultApiFetchParamCreator(
                configuration
            ).labelRecovery(body, version, transId, transactionSrc, options);
            return (
                fetch: FetchAPI = isomorphicFetch,
                basePath: string = BASE_PATH
            ) => {
                return fetch(
                    basePath + localVarFetchArgs.url,
                    localVarFetchArgs.options
                ).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Shipping
         * @summary The Shipping API makes UPS shipping services available to client applications that communicate with UPS  using the Internet
         * @param {SHIPRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Ship API to display the new release features in  Rate API response based on Ship release. See the New  section for the latest Ship release. Supported values: v1, v1601, v1607, v1701, v1707, v1801, v1807, v2108, v2205 . Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionaladdressvalidation] Valid Values:  city &#x3D; validation will include city.Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        shipment(
            body: SHIPRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            additionaladdressvalidation?: string,
            options?: any
        ): (
            fetch?: FetchAPI,
            basePath?: string
        ) => Promise<SHIPResponseWrapper> {
            const localVarFetchArgs = DefaultApiFetchParamCreator(
                configuration
            ).shipment(
                body,
                version,
                transId,
                transactionSrc,
                additionaladdressvalidation,
                options
            );
            return (
                fetch: FetchAPI = isomorphicFetch,
                basePath: string = BASE_PATH
            ) => {
                return fetch(
                    basePath + localVarFetchArgs.url,
                    localVarFetchArgs.options
                ).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Void Shipment
         * @summary The Void Shipping API is used to cancel the previously scheduled shipment
         * @param {string} version API Version
         * @param {string} shipmentidentificationnumber The shipment&#x27;s identification number  Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [trackingnumber] The package&#x27;s tracking number. You may have  up to 20 different tracking numbers listed. If more than one tracking number, pass this  value as: trackingnumber&#x3D;  [\&quot;1ZISUS010330563105\&quot;,\&quot;1ZISUS01033056310 8\&quot;] with a coma separating each number. Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        voidShipment(
            version: string,
            shipmentidentificationnumber: string,
            transId?: string,
            transactionSrc?: string,
            trackingnumber?: string,
            options?: any
        ): (
            fetch?: FetchAPI,
            basePath?: string
        ) => Promise<VOIDSHIPMENTResponseWrapper> {
            const localVarFetchArgs = DefaultApiFetchParamCreator(
                configuration
            ).voidShipment(
                version,
                shipmentidentificationnumber,
                transId,
                transactionSrc,
                trackingnumber,
                options
            );
            return (
                fetch: FetchAPI = isomorphicFetch,
                basePath: string = BASE_PATH
            ) => {
                return fetch(
                    basePath + localVarFetchArgs.url,
                    localVarFetchArgs.options
                ).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    };
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (
    configuration?: Configuration,
    fetch?: FetchAPI,
    basePath?: string
) {
    return {
        /**
         * Label Recovery
         * @summary The Label Shipping API allows us to retrieve forward and return labels.
         * @param {LABELRECOVERYRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version When UPS introduces new elements in the  response that are not associated with new  request elements, Subversion is used. This  ensures backward compatibility.  v1  original features of the application. No  support for CODTurn-inPage, HighValueReport  or InternationalForms features returned in the  response v1701  includes support for CODTurn-inPage  features returned in the response. V1903  Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        labelRecovery(
            body: LABELRECOVERYRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            options?: any
        ) {
            return DefaultApiFp(configuration).labelRecovery(
                body,
                version,
                transId,
                transactionSrc,
                options
            )(fetch, basePath);
        },
        /**
         * Shipping
         * @summary The Shipping API makes UPS shipping services available to client applications that communicate with UPS  using the Internet
         * @param {SHIPRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
         * @param {string} version Indicates Ship API to display the new release features in  Rate API response based on Ship release. See the New  section for the latest Ship release. Supported values: v1, v1601, v1607, v1701, v1707, v1801, v1807, v2108, v2205 . Length 5
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [additionaladdressvalidation] Valid Values:  city &#x3D; validation will include city.Length 15
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        shipment(
            body: SHIPRequestWrapper,
            version: string,
            transId?: string,
            transactionSrc?: string,
            additionaladdressvalidation?: string,
            options?: any
        ) {
            return DefaultApiFp(configuration).shipment(
                body,
                version,
                transId,
                transactionSrc,
                additionaladdressvalidation,
                options
            )(fetch, basePath);
        },
        /**
         * Void Shipment
         * @summary The Void Shipping API is used to cancel the previously scheduled shipment
         * @param {string} version API Version
         * @param {string} shipmentidentificationnumber The shipment&#x27;s identification number  Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {string} [transId] An identifier unique to the request. Length 32
         * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
         * @param {string} [trackingnumber] The package&#x27;s tracking number. You may have  up to 20 different tracking numbers listed. If more than one tracking number, pass this  value as: trackingnumber&#x3D;  [\&quot;1ZISUS010330563105\&quot;,\&quot;1ZISUS01033056310 8\&quot;] with a coma separating each number. Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        voidShipment(
            version: string,
            shipmentidentificationnumber: string,
            transId?: string,
            transactionSrc?: string,
            trackingnumber?: string,
            options?: any
        ) {
            return DefaultApiFp(configuration).voidShipment(
                version,
                shipmentidentificationnumber,
                transId,
                transactionSrc,
                trackingnumber,
                options
            )(fetch, basePath);
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * Label Recovery
     * @summary The Label Shipping API allows us to retrieve forward and return labels.
     * @param {LABELRECOVERYRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
     * @param {string} version When UPS introduces new elements in the  response that are not associated with new  request elements, Subversion is used. This  ensures backward compatibility.  v1  original features of the application. No  support for CODTurn-inPage, HighValueReport  or InternationalForms features returned in the  response v1701  includes support for CODTurn-inPage  features returned in the response. V1903  Length 5
     * @param {string} [transId] An identifier unique to the request. Length 32
     * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public labelRecovery(
        body: LABELRECOVERYRequestWrapper,
        version: string,
        transId?: string,
        transactionSrc?: string,
        options?: any
    ) {
        return DefaultApiFp(this.configuration).labelRecovery(
            body,
            version,
            transId,
            transactionSrc,
            options
        )(this.fetch, this.basePath);
    }

    /**
     * Shipping
     * @summary The Shipping API makes UPS shipping services available to client applications that communicate with UPS  using the Internet
     * @param {SHIPRequestWrapper} body Generate sample code for popular API requests by selecting an example below. To view a full sample request and response, first click &quot;Authorize&quot; and enter your application credentials, then populate the required parameters above and click &quot;Try it out&quot;.
     * @param {string} version Indicates Ship API to display the new release features in  Rate API response based on Ship release. See the New  section for the latest Ship release. Supported values: v1, v1601, v1607, v1701, v1707, v1801, v1807, v2108, v2205 . Length 5
     * @param {string} [transId] An identifier unique to the request. Length 32
     * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
     * @param {string} [additionaladdressvalidation] Valid Values:  city &#x3D; validation will include city.Length 15
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public shipment(
        body: SHIPRequestWrapper,
        version: string,
        transId?: string,
        transactionSrc?: string,
        additionaladdressvalidation?: string,
        options?: any
    ) {
        return DefaultApiFp(this.configuration).shipment(
            body,
            version,
            transId,
            transactionSrc,
            additionaladdressvalidation,
            options
        )(this.fetch, this.basePath);
    }

    /**
     * Void Shipment
     * @summary The Void Shipping API is used to cancel the previously scheduled shipment
     * @param {string} version API Version
     * @param {string} shipmentidentificationnumber The shipment&#x27;s identification number  Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
     * @param {string} [transId] An identifier unique to the request. Length 32
     * @param {string} [transactionSrc] An identifier of the client/source application that is making the request.Length 512
     * @param {string} [trackingnumber] The package&#x27;s tracking number. You may have  up to 20 different tracking numbers listed. If more than one tracking number, pass this  value as: trackingnumber&#x3D;  [\&quot;1ZISUS010330563105\&quot;,\&quot;1ZISUS01033056310 8\&quot;] with a coma separating each number. Alpha-numeric. Must pass 1Z rules. Must be  upper case. Length 18
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public voidShipment(
        version: string,
        shipmentidentificationnumber: string,
        transId?: string,
        transactionSrc?: string,
        trackingnumber?: string,
        options?: any
    ) {
        return DefaultApiFp(this.configuration).voidShipment(
            version,
            shipmentidentificationnumber,
            transId,
            transactionSrc,
            trackingnumber,
            options
        )(this.fetch, this.basePath);
    }
}
